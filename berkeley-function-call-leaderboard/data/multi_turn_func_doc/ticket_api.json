{"name": "create_ticket", "description": "Create a ticket in the system and queue it. ", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "Title of the ticket."}, "description": {"type": "string", "description": "Description of the ticket. Defaults to an empty string."}, "priority": {"type": "integer", "description": "Priority of the ticket, from 1 to 5. Defaults to 1."}}}, "response": {"name": "priority", "type": "integer", "description": "Priority level of the ticket."}}
{"name": "get_ticket", "description": "Get a specific ticket by its ID. ", "parameters": {"type": "dict", "required": ["ticket_id"], "properties": {"ticket_id": {"type": "integer", "description": "ID of the ticket to retrieve."}}}, "response": {"name": "created_by", "type": "string", "description": "Username of the ticket creator."}}
{"name": "close_ticket", "description": "Close a ticket. ", "parameters": {"type": "dict", "required": ["ticket_id"], "properties": {"ticket_id": {"type": "integer", "description": "ID of the ticket to be closed."}}}, "response": {"name": "status", "type": "string", "description": "Status of the close operation."}}
{"name": "resolve_ticket", "description": "Resolve a ticket with a resolution. ", "parameters": {"type": "dict", "required": ["ticket_id", "resolution"], "properties": {"ticket_id": {"type": "integer", "description": "ID of the ticket to be resolved."}, "resolution": {"type": "string", "description": "Resolution details for the ticket."}}}, "response": {"name": "status", "type": "string", "description": "Status of the resolve operation."}}
{"name": "edit_ticket", "description": "Modify the details of an existing ticket. ", "parameters": {"type": "dict", "required": ["ticket_id", "updates"], "properties": {"ticket_id": {"type": "integer", "description": "ID of the ticket to be changed."}, "updates": {"type": "dict", "description": "Dictionary containing the fields to be updated.", "properties": {"key": {"type": "string", "description": "Key for the dictionary"}, "value": {"type": "any", "description": "Value for the dictionary"}}}}}, "response": {"name": "status", "type": "string", "description": "Status of the update operation."}}
{"name": "find_ticket", "description": "Find a ticket by its ID. ", "parameters": {"type": "dict", "required": ["ticket_id"], "properties": {"ticket_id": {"type": "integer", "description": "ID of the ticket to find."}}}, "response": {"name": "ticket", "type": "dict", "description": "Ticket object if found, None otherwise. Optional parameter.", "properties": {"key": {"type": "string", "description": "Key for the dictionary"}, "value": {"type": "any", "description": "Value for the dictionary"}}}}
{"name": "ticket_login", "description": "Authenticate a user for ticket system. ", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "Username of the user."}, "password": {"type": "string", "description": "Password of the user."}}}, "response": {"name": "success", "type": "boolean", "description": "True if login was successful, False otherwise."}}
{"name": "logout", "description": "Log out the current user. ", "parameters": {"type": "dict", "required": [], "properties": {}}, "response": {"name": "success", "type": "boolean", "description": "True if logout was successful, False otherwise."}}
{"name": "get_user_tickets", "description": "Get all tickets created by the current user, optionally filtered by status. ", "parameters": {"type": "dict", "required": [], "properties": {"status": {"type": "any", "description": "Status to filter tickets by. If None, return all tickets."}}}, "response": {"name": "tickets", "type": "array", "description": "List of ticket objects matching the criteria.", "items": {"type": "any"}}}