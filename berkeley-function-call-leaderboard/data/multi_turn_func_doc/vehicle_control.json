{"name": "startEngine", "description": "Starts the engine of the vehicle.", "parameters": {"type": "dict", "required": ["ignitionMode"], "properties": {"ignitionMode": {"type": "string", "description": "The ignition mode of the vehicle. Possible values are \"START\" and \"STOP\"."}}}, "response": {"name": "batteryVoltage", "type": "float", "description": "The battery voltage of the vehicle in volts."}}
{"name": "fillFuelTank", "description": "Fills the fuel tank of the vehicle. The fuel tank can hold up to 50 gallons.", "parameters": {"type": "dict", "required": ["fuelAmount"], "properties": {"fuelAmount": {"type": "float", "description": "The amount of fuel to fill in gallons."}}}, "response": {"name": "fuelLevel", "type": "float", "description": "The fuel level of the vehicle in gallons."}}
{"name": "lockDoors", "description": "Locks the doors of the vehicle.", "parameters": {"type": "dict", "required": ["unlock", "door"], "properties": {"unlock": {"type": "boolean", "description": "True if the doors are to be unlocked, False otherwise."}, "door": {"type": "array", "description": "The list of doors to lock or unlock. Possible values are \"driver\", \"passenger\", \"rear_left\", \"rear_right\".", "items": {"type": "string"}}}}, "response": {"name": "remainingUnlockedDoors", "type": "integer", "description": "The number of remaining unlocked doors."}}
{"name": "adjustClimateControl", "description": "Adjusts the climate control of the vehicle.", "parameters": {"type": "dict", "required": ["temperature"], "properties": {"temperature": {"type": "float", "description": "The temperature to set in degree. Default to be celsius."}, "unit": {"type": "string", "description": "The unit of temperature. Possible values are \"celsius\" or \"fahrenheit\". Default is \"celsius\"."}, "fanSpeed": {"type": "integer", "description": "The fan speed to set from 0 to 100. Default is 50."}, "mode": {"type": "string", "description": "The climate mode to set. Possible values are \"auto\", \"cool\", \"heat\", \"defrost\". Default is \"auto\"."}}}, "response": {"name": "humidityLevel", "type": "float", "description": "The humidity level in percentage."}}
{"name": "get_outside_temperature_from_google", "description": "Gets the outside temperature.", "parameters": {"type": "dict", "required": [], "properties": {}}, "response": {"name": "outsideTemperature", "type": "float", "description": "The outside temperature in degree Celsius."}}
{"name": "get_outside_temperature_from_weather_com", "description": "Gets the outside temperature.", "parameters": {"type": "dict", "required": [], "properties": {}}, "response": {"name": "outsideTemperature", "type": "float", "description": "The outside temperature in degree Celsius."}}
{"name": "setHeadlights", "description": "Sets the headlights of the vehicle.", "parameters": {"type": "dict", "required": ["mode"], "properties": {"mode": {"type": "string", "description": "The mode of the headlights. Possible values are \"on\", \"off\", \"auto\"."}}}, "response": {"name": "headlightStatus", "type": "string", "description": "The status of the headlights. Possible values are \"on\" and \"off\"."}}
{"name": "displayCarStatus", "description": "Displays the status of the vehicle based on the provided display option.", "parameters": {"type": "dict", "required": ["option"], "properties": {"option": {"type": "string", "description": "The option to display. Possible values are \"fuel\", \"battery\", \"doors\", \"climate\", \"headlights\", \"brake\", \"engine\"."}}}, "response": {"name": "status", "type": "dict", "description": "The status of the vehicle based on the option."}}
{"name": "activateParkingBrake", "description": "Activates the parking brake of the vehicle.", "parameters": {"type": "dict", "required": ["mode"], "properties": {"mode": {"type": "string", "description": "The mode to set. Possible values are \"engage\", \"release\"."}}}, "response": {"name": "slopeAngle", "type": "float", "description": "The slope angle in degrees."}}
{"name": "setCruiseControl", "description": "Sets the cruise control of the vehicle.", "parameters": {"type": "dict", "required": ["speed", "activate", "distanceToNextVehicle"], "properties": {"speed": {"type": "float", "description": "The speed to set in m/h. The speed should be between 0 and 120 and a multiple of 5."}, "activate": {"type": "boolean", "description": "True to activate the cruise control, False to deactivate."}, "distanceToNextVehicle": {"type": "float", "description": "The distance to the next vehicle in meters."}}}, "response": {"name": "distanceToNextVehicle", "type": "float", "description": "The distance to the next vehicle in meters."}}
{"name": "get_current_speed", "description": "Gets the current speed of the vehicle.", "parameters": {"type": "dict", "required": [], "properties": {}}, "response": {"name": "currentSpeed", "type": "float", "description": "The current speed of the vehicle in km/h."}}
{"name": "display_log", "description": "Displays the log messages.", "parameters": {"type": "dict", "required": ["messages"], "properties": {"messages": {"type": "array", "description": "The list of messages to display.", "items": {"type": "string"}}}}, "response": {"name": "log", "type": "array", "description": "The list of messages displayed.", "items": {"type": "string"}}}
{"name": "estimate_drive_feasibility_by_mileage", "description": "Estimates the milage of the vehicle given the distance needed to drive.", "parameters": {"type": "dict", "required": ["distance"], "properties": {"distance": {"type": "float", "description": "The distance to travel in miles."}}}, "response": {"name": "canDrive", "type": "boolean", "description": "True if the vehicle can drive the distance, False otherwise."}}
{"name": "liter_to_gallon", "description": "Converts the liter to gallon.", "parameters": {"type": "dict", "required": ["liter"], "properties": {"liter": {"type": "float", "description": "The amount of liter to convert."}}}, "response": {"name": "gallon", "type": "float", "description": "The amount of gallon converted."}}
{"name": "gallon_to_liter", "description": "Converts the gallon to liter.", "parameters": {"type": "dict", "required": ["gallon"], "properties": {"gallon": {"type": "float", "description": "The amount of gallon to convert."}}}, "response": {"name": "liter", "type": "float", "description": "The amount of liter converted."}}
{"name": "estimate_distance", "description": "Estimates the distance between two cities.", "parameters": {"type": "dict", "required": ["cityA", "cityB"], "properties": {"cityA": {"type": "string", "description": "The zipcode of the first city."}, "cityB": {"type": "string", "description": "The zipcode of the second city."}}}, "response": {"name": "distance", "type": "float", "description": "The distance between the two cities in km."}}
{"name": "get_zipcode_based_on_city", "description": "Gets the zipcode based on the city.", "parameters": {"type": "dict", "required": ["city"], "properties": {"city": {"type": "string", "description": "The name of the city."}}}, "response": {"name": "zipcode", "type": "string", "description": "The zipcode of the city."}}
{"name": "set_navigation", "description": "Navigates to the destination.", "parameters": {"type": "dict", "required": ["destination"], "properties": {"destination": {"type": "string", "description": "The destination to navigate in the format of street, city, state."}}}, "response": {"name": "status", "type": "dict", "description": "The status of the navigation."}}
{"name": "check_tire_pressure", "description": "Checks the tire pressure of the vehicle.", "parameters": {"type": "dict", "required": [], "properties": {}}, "response": {"name": "tirePressure", "type": "dict", "description": "The tire pressure of the vehicle."}}
{"name": "find_nearest_tire_shop", "description": "Finds the nearest tire shop.", "parameters": {"type": "dict", "required": [], "properties": {}}, "response": {"name": "shopLocation", "type": "string", "description": "The location of the nearest tire shop."}}