[
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Sending Text Messages",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                },
                {
                    "warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
                    "key": "Authorization",
                    "value": "Bearer {{User-Access-Token}}",
                    "type": "text"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"preview_url\": false | true,\n    \"recipient_type\": \"individual\",\n    \"to\": \"whatsapp-id\",\n    \"type\": \"text\",\n    \"text\": {\n        \"body\": \"your-text-message-content\"\n    }\n}"
            }
        },
        "functionality": "This example shows how to send a text message."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Sending Media Messages",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                },
                {
                    "key": "Authorization",
                    "value": "",
                    "type": "text",
                    "disabled": true
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"recipient_type\": \"individual\",\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"audio\" | \"contact\" | \"document\" | \"image\" | \"location\" | \"sticker\" | \"text\" | \"video\",\n    \"audio\": {\n        \"id\": \"<Media-ID>\"\n    }\n  \n  \"document\": {\n        \"id\": \"<Media-ID>\",\n        \"caption\": \"<Document-Caption-To-Be-Sent>\",\n        \"filename\": \"<Document-Filename>\"\n    }\n  \n  \"document\": {\n        \"link\": \"the-provider-name/protocol://the-url\",\n        \"provider\": {\n            \"name\": \"<Provider-Name>\"\n        },\n        \"caption\": \"<Document-Caption>\"\n    }\n  \n  \"document\": {\n        \"link\": \"http(s)://the-url.pdf\",\n        \"caption\": \"<Document-Caption>\"\n    }\n  \n  \"video\": {\n        \"id\": \"<Media-ID>\",\n        \"caption\": \"<Video-Caption>\"\n    }\n  \n  \"image\": {\n        \"link\": \"http(s)://the-url\",\n        \"provider\": {\n            \"name\": \"<Provider-Name>\"\n        },\n        \"caption\": \"<Image-Caption>\"\n    }\n  \n  \"image\": {\n        \"id\": \"<Media-ID>\",\n        \"caption\": \"<Image-Caption>\"\n    }\n  \n  \"sticker\": {\n        \"id\": \"<Media-ID>\"\n    }\n  \n  \"sticker\": {\n        \"link\": \"http(s)://the-url\",\n        \"provider\": {\n            \"name\": \"provider-name\"\n        }\n    }\n}"
            }
        },
        "functionality": "The following example shows you how to send a media message."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Sending Contacts and Location Messages",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                }
            ]
        },
        "functionality": "The following examples show how to send contact and location messages."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Sending Message Templates",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"<Namespace>\",\n        \"name\": \"<Template-Name>\",\n        \"language\": {\n            \"code\": \"<Language-and-Locale-Code>\",\n            \"policy\": \"deterministic\"\n        },\n        \"components\": [\n            {\n                \"type\": \"body\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"<Text-String>\"\n                    },\n                    {\n                        \"type\": \"currency\",\n                        \"currency\": {\n                            \"fallback_value\": \"$100.99\",\n                            \"code\": \"USD\",\n                            \"amount_1000\": 100990\n                        }\n                    },\n                    {\n                        \"type\": \"date_time\",\n                        \"date_time\": {\n                            \"fallback_value\": \"February 25, 1977\",\n                            \"day_of_week\": 5,\n                            \"day_of_month\": 25,\n                            \"year\": 1977,\n                            \"month\": 2,\n                            \"hour\": 15,\n                            \"minute\": 33\n                        }\n                    },\n                    {\n                        \"type\": \"date_time\",\n                        \"date_time\": {\n                            \"fallback_value\": \"February 25, 1977\",\n                            \"timestamp\": 1485470276\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Sending Media Message Templates",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"<Message Template Namespace>\",\n        \"name\": \"<Message Template Element Name>\",\n        \"language\": {\n            \"policy\": \"<Message Template Language Policy>\",\n            \"code\": \"<Message Template Language Code>\"\n        },\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": [\n                    {\n                        \"type\": \"image\",\n                        \"caption\": \"<Message Caption>\",\n                        \"link\": \"<Media HTTPS URL>\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"body\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"<Message Text Param>\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "The following examples show how to send 3 types of media message templates that were provided in the above guide."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Sending Interactive Message Templates",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                }
            ]
        },
        "functionality": "The following examples show you how to send interactive message templates. These examples include:\n\n1. Callback from a Quick Reply Button"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Mark Messages as Read",
        "api_call": "{{URL}}/v1/messages/message-id",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"status\": \"read\"\n}"
            }
        },
        "functionality": "You can use the **`messages`** endpoint to change the status of incoming messages to read.\n\n## Before You Start\nYou must set"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Login User",
        "api_call": "{{URL}}/v1/users/login",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "basic",
                "basic": [
                    {
                        "key": "password",
                        "value": "{{UserPassword}}",
                        "type": "string"
                    },
                    {
                        "key": "username",
                        "value": "{{UserUsername}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"new_password\": \"<New Password>\"\n}"
            }
        },
        "functionality": "To authenticate yourself with WhatsApp Business API client, you must log in. To log in, send your username and password"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Login Admin",
        "api_call": "{{URL}}/v1/users/login",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "basic",
                "basic": [
                    {
                        "key": "password",
                        "value": "{{AdminPassword}}",
                        "type": "string"
                    },
                    {
                        "key": "username",
                        "value": "{{AdminUsername}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n\t\"new_password\": \"<New Admin Password>\"\n}"
            }
        },
        "functionality": "The WhatsApp Business API client has a default account \u2014 the username of the account is `admin` and the password"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Create User",
        "api_call": "{{URL}}/v1/users",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"username\": \"<User Username>\",\n    \"password\": \"<User Password>\"\n}"
            }
        },
        "functionality": "> **The `admin` account is the only account that can create and delete users**. We recommend using the **`admin`** account"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get Admin",
        "api_call": "{{URL}}/v1/users/{{AdminUsername}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "This request retrieves the administrator user account associated with WhatsApp Business API.\n\nIf successful, the request returns HTTP status code `200"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get User",
        "api_call": "{{URL}}/v1/users/{{UserUsername}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "You can get information to determine if a user account has been created for a specific username and to find"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Update User",
        "api_call": "{{URL}}/v1/users/{{UserUsername}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"password\": \"<New Password>\"\n}"
            }
        },
        "functionality": "A user with the role of `ROLE_ADMIN` can update the password associated with user accounts with roles of `ROLE_ADMIN` and"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Delete User",
        "api_call": "{{URL}}/v1/users/{{UserUsername}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "DELETE",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": ""
            }
        },
        "functionality": "Use the following API call to delete a user account, where username is the name of the user account you"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Logout User",
        "api_call": "{{URL}}/v1/users/logout",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": ""
            }
        },
        "functionality": "Use the **`/v1/users/logout`** endpoint to log out of the WhatsApp Business API Client. Logging out revokes the authentication token.\n\n## Before"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get Settings",
        "api_call": "{{URL}}/v1/settings/application",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Gets the application settings of the WhatsApp Business API client.\n\n> **You must use the `admin` account to access the application"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get Shards",
        "api_call": "{{URL}}/v1/account/shards",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Gets the number of shards running for Multiconnect.\n\n## Response Fields\n\n| Name         "
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Set Shards",
        "api_call": "{{URL}}/v1/account/shards",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"cc\": \"{{Country-Code}}\",\n    \"phone_number\": \"{{Phone-Number}}\",\n    \"shards\": \"1 | 2 | 4 | 8 | 16 | 32\",\n    \"pin\": \"{{Two-Step-PIN}}\",\n    \"cert\": \"<your-verified-name-cert-in-base64>\"\n}"
            }
        },
        "functionality": "The WhatsApp Business API Client uses sharding to achieve multiconnect. Depending on the number of shards you set up, the"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Update Webhooks",
        "api_call": "{{URL}}/v1/settings/application",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PATCH",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"webhooks\": {\n        \"url\": \"<Webhook URL, https>\",\n        \"message\": {\n            \"delivered\": true,\n            \"read\": true,\n            \"sent\": true\n        }\n    }\n}"
            }
        },
        "functionality": "Use the **PATCH** API call to update your Webhooks settings.\n\nTo deploy a live Webhooks that can receive Webhooks events from"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Delete Webhooks",
        "api_call": "{{URL}}/v1/settings/application",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PATCH",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n\t\"webhooks\": {\n       \"url\": \"\"\n    }\n}"
            }
        },
        "functionality": "Use the **DELETE** REST call to remove a Webhooks URL."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Update Settings",
        "api_call": "{{URL}}/v1/settings/application",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PATCH",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"callback_backoff_delay_ms\": 3000,\n    \"callback_persist\": true,\n    \"max_callback_backoff_delay_ms\": 900000,\n    \"media\": {\n        \"auto_download\": [\n            \"audio\",\n            \"document\",\n            \"voice\",\n            \"video\",\n            \"image\",\n            \"sticker\"\n        ]\n    },\n    \"sent_status\": false | true,\n    \"heartbeat_interval\": <heartbeat-interval-in-secs>,\n    \"unhealthy_interval\": <unhealthy-interval-in-secs>,\n    \"webhooks\": {\n        \"url\": \"<webhook.your-domain>\",\n        \"max_concurrent_requests\": 12,\n        \"message\": {\n            \"delivered\": true,\n            \"read\": true,\n            \"sent\": true\n        }\n    },\n    \"axolotl_context_striping_disabled\": <false | true>,\n    \"notify_user_change_number\": <false | true>,\n    \"show_security_notifications\": <false | true>,\n    \"garbagecollector_enable\": {\n        \"messages\": <true | false>,\n        \"media\": <true | false>\n    }\n    \"skip_referral_media_download\": <true | false>,\n    \"webhook_payload_conversation_pricingmodel_disabled\": <false | true>\n}"
            }
        },
        "functionality": "To configure settings for the WhatsApp Business API client, use the `/v1/settings/application` endpoint with a JSON message body containing the"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Reset App Settings",
        "api_call": "{{URL}}/v1/settings/application",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "DELETE",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": ""
            }
        },
        "functionality": "Use the `/v1/settings/application` endpoint to reset the application settings to their default values.\n\nA successful response is `200 OK` with `null`"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get Media Providers",
        "api_call": "{{URL}}/v1/settings/application/media/providers",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": ""
            }
        },
        "functionality": "Use the `/v1/settings/application/media/providers` endpoint to compile a list of media providers for sending media links. A providers list allows you"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Delete Media Providers",
        "api_call": "{{URL}}/v1/settings/application/media/providers/<Provider Name>",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "DELETE",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": ""
            }
        },
        "functionality": "Send a `DELETE` API call with the **`name`** of a provider to the `/v1/settings/application/media/providers` endpoint to delete that provider from"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Update Media Providers",
        "api_call": "{{URL}}/v1/settings/application/media/providers",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "[\n\t{\n\t\t\"name\": \"<Provider Name>\",\n\t\t\"type\": \"www\",\n\t\t\"config\": {\n\t\t\t\"bearer\": \"<Bearer Auth Token>\"\n\t\t}\n\t}\n]"
            }
        },
        "functionality": "To configure providers for the WhatsApp Business API Client, use the `/v1/settings/application/media/providers` endpoint with the provider's information. Currently, you can"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Backup Settings",
        "api_call": "{{URL}}/v1/settings/backup",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n\t\"password\": \"<Password for Backup>\"\n}"
            }
        },
        "functionality": "The ability to back up/export only runs after the WhatsApp Business API Client has been registered and is running. The"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Restore Settings",
        "api_call": "{{URL}}/v1/settings/restore",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n\t\"password\": \"<Password for Backup>\",\n\t\"data\": \"<Data to Restore, from Backup API>\"\n}"
            }
        },
        "functionality": "Restore can be used to set up a new version of the WhatsApp Business API Client on a new machine"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get Business Profile",
        "api_call": "{{URL}}/v1/settings/business/profile",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Make a **GET** API call to the `/v1/settings/business/profile` endpoint to retrieve your business profile settings.\n\n## Response Fields\nA successful response includes"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Set Business Profile",
        "api_call": "{{URL}}/v1/settings/business/profile",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"address\": \"{{Business Profile Address}}\",\n    \"description\": \"{{Business Profile Description}}\",\n    \"email\": \"{{Business Profile Email}}\",\n    \"vertical\": \"{{Business Profile Vertical}}\",\n    \"websites\": [\n        \"https://www.whatsapp.com\",\n        \"https://www.facebook.com\"\n    ]\n}"
            }
        },
        "functionality": "Make a **POST** API call to the `/v1/settings/business/profile` endpoint to update your business profile settings.\n\n## Request Parameters\n\n| Name  "
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get Profile About",
        "api_call": "{{URL}}/v1/settings/profile/about",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "> **You must use the `admin` account to access the profile settings**.\n\nYou can view your profile's About section in the"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get Profile Photo Binary",
        "api_call": "{{URL}}/v1/settings/profile/photo",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "> **You must use the admin account to access the profile settings.**\n\nYou can get your profile's photo image by the"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get Profile Photo URL",
        "api_call": "{{URL}}/v1/settings/profile/photo?format=link",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "> **You must use the admin account to access the profile settings.**\n\nYou can get your profile's photo image by URL"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Set Profile About",
        "api_call": "{{URL}}/v1/settings/profile/about",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PATCH",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n\t\"text\": \"{{About Profile}}\"\n}"
            }
        },
        "functionality": "> **You must use the `admin` account to access the profile settings**.\n\nTo update your profile's **About** section, update the text"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Set Profile Photo",
        "api_call": "{{URL}}/v1/settings/profile/photo",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "image/jpeg"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "file",
                "file": {}
            }
        },
        "functionality": "> **You must use the admin account to access the profile settings.**\n\nTo change your profile photo using the API, send"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Enable Two Step",
        "api_call": "{{URL}}/v1/settings/account/two-step",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n\t\"pin\": \"<Two-Step Verification PIN>\"\n}"
            }
        },
        "functionality": "To enable two-factor verification, use the `/v1/settings/account/two-step` endpoint with the **`pin`** parameter.\n\nIf you forget or misplace your PIN, you can"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Disable Two Step",
        "api_call": "{{URL}}/v1/settings/account/two-step",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "DELETE",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": ""
            }
        },
        "functionality": "To disable two-factor verification, make a **DELETE** call to the `/v1/settings/account/two-step` endpoint. If you forget or misplace your PIN, you"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Request Code",
        "api_call": "{{URL}}/v1/account",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n\t\"cc\": \"<Country Code>\",\n\t\"phone_number\": \"<Phone Number>\",\n\t\"method\": \"< sms | voice >\",\n\t\"cert\": \"<Valid Cert from Business Manager>\",\n\t\"pin\": \"<Two-Step Verification PIN\"\n}"
            }
        },
        "functionality": "Make a **POST** call to this endpoint to request a registration code. In your call, add your phone number and"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Register Account",
        "api_call": "{{URL}}/v1/account/verify",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"code\": \"<Registration Code Received via SMS/Voice>\"\n}"
            }
        },
        "functionality": "> **You must use the `admin` account to register the application.**\n\nThe **`account`** node is for registering your WhatsApp Business API"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Create Contact",
        "api_call": "{{URL}}/v1/contacts",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"blocking\": \"wait\",\n    \"contacts\": [\n        \"{{Recipient-WA-ID}}\"\n    ],\n    \"force_check\": \"<false (default) | true>\"\n}"
            }
        },
        "functionality": "Send an API call to `/v1/contacts` that contains an array of registered phone numbers. The phone numbers can be in"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Block Contact",
        "api_call": "{{URL}}/v1/contacts/{{Recipient-WA-ID}}/block",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"reason\": \"Optional string(0;60). Freeform block reason. Will be used when another business account is being blocked\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "To block a contact, send a **POST** call to **`/v1/contacts//block`** and include a reason (string) why you are blocking them.\n\n>"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Unblock Contact",
        "api_call": "{{URL}}/v1/contacts/{{Recipient-WA-ID}}/block",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                }
            ]
        },
        "functionality": "To unblock a contact, send a **POST** call to **`/v1/contacts/{phone_number}/unblock`**.\n\n## Response\n\n| Setting | Description |\n| --- | --- |\n| **`phone_number`**"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Report Contact",
        "api_call": "{{URL}}/v1/contacts/{{Recipient-WA-ID}}/report",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                }
            ]
        },
        "functionality": "To report a contact, send a **POST** call to **`/v1/contacts/{phone_number}/report`** and include a **`reason`** if you are blocking another business"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get Block List",
        "api_call": "{{URL}}/v1/contacts/blocklist?limit=10&offset=0",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "To obtain a list of your blocked contacts, Send a **GET** call to **`/v1/contacts/blocklist`**."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Check Contact Async",
        "api_call": "{{URL}}/v1/contacts",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n   \"contacts\": [\n      \"{{Recipient-WA-ID}}\"\n   ],\n   \"force_check\": \"<false (default) | true>\"\n}"
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Contact Get Identity",
        "api_call": "{{URL}}/v1/contacts/{{Recipient-WA-ID}}/identity",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "It is possible to receive notifications from WhatsApp when a user you are communicating with has potentially changed. Use this"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Contact Ack Identity",
        "api_call": "{{URL}}/v1/contacts/{{Recipient-WA-ID}}/identity",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"hash\": \"<identity hash>\"\n}"
            }
        },
        "functionality": "A **PUT** call to the /v1/contacts/{{Recipient-WA-ID}}/identity endpoint sets the Ack Identity."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Text Message",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"text\",\n    \"recipient_type\": \"individual\",\n    \"text\": {\n        \"body\": \"<Message Text>\"\n    }\n}"
            }
        },
        "functionality": "To send a text message, make a POST call to `/messages` and attach a **`message`** object with **`type`** = text."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Text URL Message",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"text\",\n    \"text\": {\n        \"body\": \"<Message Text With URL>\"\n    },\n    \"preview_url\": true\n}"
            }
        },
        "functionality": "To send a text message, make a POST call to `/messages` and attach a **`message`** object with **`type`** = text."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Image Message By ID",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"image\",\n    \"recipient_type\": \"individual\",\n    \"image\": {\n        \"caption\": \"<Message Caption>\",\n        \"id\": \"<Media Id, from Media API>\"\n    }\n}"
            }
        },
        "functionality": "To send an image message, make a **POST** call to `/messages` and attach a message object with **`type`** = `image`."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Image Message By URL",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"image\",\n    \"recipient_type\": \"individual\",\n    \"image\": {\n        \"provider\": {\n            \"name\": \"<Provider Name from Media Provider API, optional\"\n        },\n        \"link\": \"<Link to Image, https>\",\n        \"caption\": \"<Media Caption>\"\n    }\n}"
            }
        },
        "functionality": "To send an image message, make a **POST** call to `/messages` and attach a message object with **`type`** = `image`."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Audio Message By ID",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"audio\",\n    \"recipient_type\": \"individual\",\n    \"audio\": {\n        \"id\": \"<Media Id, from Media API>\"\n    }\n}"
            }
        },
        "functionality": "To send an audio message, make a **POST** call to `/messages` and attach a message object with **`type`** = `audio`."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Audio Message By URL",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"audio\",\n    \"recipient_type\": \"individual\",\n    \"audio\": {\n        \"provider\": {\n            \"name\": \"<Provider Name from Media Provider API, optional\"\n        },\n        \"link\": \"<Link to Audio, https>\"\n    }\n}"
            }
        },
        "functionality": "To send an audio message, make a **POST** call to `/messages` and attach a message object with **`type`** = `audio`."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Video Message By ID",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"video\",\n    \"recipient_type\": \"individual\",\n    \"video\": {\n        \"caption\": \"<Message Caption>\",\n        \"id\": \"<Media Id, from Media API>\"\n    }\n}"
            }
        },
        "functionality": "To send a video message, make a **POST** call to `/messages` and attach a message object with **`type`** = `video`."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Video Message By URL",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"video\",\n    \"recipient_type\": \"individual\",\n    \"video\": {\n        \"provider\": {\n            \"name\": \"<Provider Name from Media Provider API, optional\"\n        },\n        \"caption\": \"<Message Caption>\",\n        \"link\": \"<Link to Video, https>\"\n    }\n}"
            }
        },
        "functionality": "To send a video message, make a **POST** call to `/messages` and attach a message object with **`type`** = `video`."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Doc Message By ID",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"document\",\n    \"recipient_type\": \"individual\",\n    \"document\": {\n        \"caption\": \"<Message Caption>\",\n        \"id\": \"<Media Id, from Media API>\",\n        \"filename\": \"<Filename>\"\n    }\n}"
            }
        },
        "functionality": "To send a document message, make a **POST** call to `/messages` and attach a message object with **`type`** = `document`."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Doc Message By URL",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"document\",\n    \"recipient_type\": \"individual\",\n    \"document\": {\n        \"provider\": {\n            \"name\": \"<Provider Name from Media Provider API, optional\"\n        },\n        \"caption\": \"<Message Caption>\",\n        \"link\": \"<Link to PDF, https>\",\n        \"filename\": \"<Filename>\"\n    }\n}"
            }
        },
        "functionality": "To send a document message, make a **POST** call to `/messages` and attach a message object with **`type`** = `document`."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send List Message",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"recipient_type\": \"individual\",\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"interactive\",\n    \"interactive\": {\n        \"type\": \"list\",\n        \"header\": {\n            \"type\": \"text\",\n            \"text\": \"<Header List Message>\"\n        },\n        \"body\": {\n            \"text\": \"<List Body Message>\"\n        },\n        \"footer\": {\n            \"text\": \"<Footer Message>\"\n        },\n        \"action\": {\n            \"button\": \"Send\",\n            \"sections\": [\n                {\n                    \"title\": \"<List Category Item>\",\n                    \"rows\": [\n                        {\n                            \"id\": \"<Item ID>\",\n                            \"title\": \"<Item Title>\",\n                            \"description\": \"<Item Description>\"\n                        },\n                        {\n                            \"id\": \"<Item ID>\",\n                            \"title\": \"<Item Title>\",\n                            \"description\": \"<Item Description>\"\n                        }\n                    ]\n                },\n                {\n                    \"title\": \"<List Item>\",\n                    \"rows\": [\n                        {\n                            \"id\": \"<Item ID>\",\n                            \"title\": \"<Item Title>\",\n                            \"description\": \"<Item Description>\"\n                        },\n                        {\n                            \"id\": \"<Item ID>\",\n                            \"title\": \"<Item Title>\",\n                            \"description\": \"<Item Description>\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}"
            }
        },
        "functionality": "To send a list message, make a **POST** call to `/messages` and attach a message object with **`type`** = `interactive`."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Buttons Message",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n\t\"to\": \"{{Recipient-WA-ID}}\",\n\t\"recipient_type\": \"individual\",\n\t\"type\": \"button\",\n\t\"button\": {\n\t\t\"header\": {\n            \"type\": \"text\", \n            \"text\": \"<Header Text>\"\n        },\n\t\t\"body\": {\n            \"text\": \"<Body Text>\"\n        },\n        \"footer\": {\n            \"text\": \"<Footer Text>\"\n        },\n        \"buttons\": [\n            {\n                \"type\": \"reply\",\n                \"reply\": {\n                    \"payload\": \"<Button 1 Text>\",\n                    \"title\" : \"<Button 1 Description>\"\n                }\n            },\n            {\n                \"type\": \"reply\",\n                \"reply\": {\n                    \"payload\": \"<Button 2 Text>\",\n                    \"title\" : \"<Button 2 Description>\"\n                }\n            },\n            {\n                \"type\": \"reply\",\n                \"reply\": {\n                    \"payload\": \"<Button 3 Text>\",\n                    \"title\" : \"<Button 3 Description>\"\n                }\n            }\n        ]\n\t}\n}"
            }
        },
        "functionality": "To send a list message, make a **POST** call to `/messages` and attach a message object with **`type`** = `interactive`."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Message Template Text",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"<Message Template Namespace>\",\n        \"name\": \"<Message Template Element Name>\",\n        \"language\": {\n            \"policy\": \"<Message Template Language Policy>\",\n            \"code\": \"<Message Template Language Code>\"\n        },\n        \"components\": [\n            {\n                \"type\": \"body\",\n                \"parameters\": [\n                    {\n                        \"type\": \"<param type>\",\n                        \"text\": \"<param value>\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
            }
        },
        "functionality": "Before sending a text message template, you need to create one. For more information, see [Create Template Using the WhatsApp"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Message Template Media",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"<Message Template Namespace>\",\n        \"name\": \"<Message Template Element Name>\",\n        \"language\": {\n            \"policy\": \"<Message Template Language Policy>\",\n            \"code\": \"<Message Template Language Code>\"\n        },\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": [\n                    {\n                        \"type\": \"image\",\n                        \"caption\": \"<Message Caption>\",\n                        \"link\": \"<Media HTTPS URL>\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"body\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"<Message Text Param>\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
            }
        },
        "functionality": "Before sending a media message template, you need to create one. For more information, see [Create Template Using the WhatsApp"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Message Template Call To Action",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"<Message Template Namespace>\",\n        \"name\": \"<Message Template Element Name>\",\n        \"language\": {\n            \"policy\": \"<Message Template Language Policy>\",\n            \"code\": \"<Message Template Language Code>\"\n        },\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": {\n                    \"type\": \"text\",\n                    \"text\": \"<Param Text>\"\n                }\n            },\n            {\n                \"type\": \"body\",\n                \"parameters\": {\n                    \"type\": \"text\",\n                    \"text\": \"<Param Text>\"\n                }\n            },\n            {\n                \"type\": \"button\",\n                \"sub_type\": \"url\",\n                \"index\": \"1\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"<Developer Defined Dynamic URL suffix>\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
            }
        },
        "functionality": "Before sending a message template, you need to create one. For more information, see [Create Template Using the WhatsApp Manager](https://developers.facebook.com/docs/whatsapp/message-templates/creation#step-1--create-template-using-the-whatsapp-manager)."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Message Template Quick Reply",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"<Message Template Namespace>\",\n        \"name\": \"<Message Template Element Name>\",\n        \"language\": {\n            \"policy\": \"<Message Template Language Policy>\",\n            \"code\": \"<Message Template Language Code>\"\n        },\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": {\n                    \"type\": \"text\",\n                    \"text\": \"<Param Text>\"\n                }\n            },\n            {\n                \"type\": \"body\",\n                \"parameters\": {\n                    \"type\": \"text\",\n                    \"text\": \"<Param Text>\"\n                }\n            },\n            {\n                \"type\": \"button\",\n                \"sub_type\": \"quick_reply\",\n                \"index\": \"1\",\n                \"parameters\": [\n                    {\n                        \"type\": \"payload\",\n                        \"payload\": \"<Developer Defined payload for quick reply>\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
            }
        },
        "functionality": "Before sending a message template, you need to create one. For more information, see [Create Template Using the WhatsApp Manager](https://developers.facebook.com/docs/whatsapp/message-templates/creation#step-1--create-template-using-the-whatsapp-manager)."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Message Template Catalog",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"name\": \"<Catalog Message Template Element Name>\",\n        \"language\": {\n            \"policy\": \"<Catalog Message Template Language Policy>\",\n            \"code\": \"<Catalog Message Template Language Code>\"\n        },\n        \"components\": [\n            {\n                \"type\": \"button\",\n                \"sub_type\": \"catalog\",\n                \"index\": 0,\n                \"parameters\": [\n                    {\n                        \"type\": \"action\",\n                        \"action\": {\n                            \"thumbnail_product_retailer_id\": \"<PRODUCT-SKU>\"\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}"
            }
        },
        "functionality": "Before sending a message template, you need to create one. For more information, see [Create Template Using the WhatsApp Manager](https://developers.facebook.com/docs/whatsapp/message-templates/creation#step-1--create-template-using-the-whatsapp-manager)."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Contact Message",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"contacts\",\n    \"recipient_type\": \"individual\",\n    \"contacts\": [\n        {\n            \"addresses\": [\n                {\n                    \"city\": \"<Contact's City>\",\n                    \"country\": \"<Contact's Country>\",\n                    \"country_code\": \"<Contact's Country Code>\",\n                    \"state\": \"<Contact's State>\",\n                    \"street\": \"<Contact's Street>\",\n                    \"type\": \"<Contact's Address Type>\",\n                    \"zip\": \"<Contact's Zip Code>\"\n                }\n            ],\n            \"birthday\": \"<Contact's Birthday>\",\n            \"emails\": [\n                {\n                    \"email\": \"<Contact's Email>\",\n                    \"type\": \"<Contact's Email Type>\"\n                }\n            ],\n            \"ims\": [],\n            \"name\": {\n                \"first_name\": \"<Contact's First Name>\",\n                \"formatted_name\": \"<Contact's Formatted Name>\",\n                \"last_name\": \"<Contact's Last Name>\"\n            },\n            \"org\": {\n                \"company\": \"<Contact's Company>\"\n            },\n            \"phones\": [\n                {\n                    \"phone\": \"<Contact's Phone Number>\",\n                    \"type\": \"<Contact's Phone Number Type>\"\n                }\n            ],\n            \"urls\": []\n        }\n    ]\n}"
            }
        },
        "functionality": "To send a contacts message, make a **POST** call to `/messages` and attach a message object with **`type`** = `contacts`."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Location Message",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"location\",\n    \"recipient_type\": \"individual\",\n    \"location\": {\n        \"longitude\": \"<Longitude>\",\n        \"latitude\": \"<Latitude>\",\n        \"name\": \"<Location Name>\",\n        \"address\": \"<Location's Address>\"\n    }\n}"
            }
        },
        "functionality": "To send a location message, make a **POST** call to `/messages` and attach a message object with **`type`** = `location`."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Catalog Message",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"recipient_type\": \"individual\",\n    \"type\": \"interactive\",\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"interactive\": {\n        \"type\": \"catalog_message\",\n        \"body\": {\n            \"type\": \"text\",\n            \"text\": \"<Catalog Message Body>\"\n        },\n        \"action\": {\n            \"name\": \"catalog_message\",\n            \"parameters\": {\n                \"thumbnail_product_retailer_id\": \"<Product-SKU>\"\n            }\n        }\n    }\n}"
            }
        },
        "functionality": "To send a catalog message, make a **POST** call to `/messages` and attach a message object with **`type`** = `catalog_message`."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Sticker Message By ID",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"sticker\",\n    \"recipient_type\": \"individual\",\n    \"sticker\": {\n        \"id\": \"{{Test-Sticker-Media-ID}}\"\n    }\n}"
            }
        },
        "functionality": "To send a sticker message, make a **POST** call to `/messages` and attach a message object with **`type`** = `sticker`."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Send Sticker Message By URL",
        "api_call": "{{URL}}/v1/messages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"sticker\",\n    \"recipient_type\": \"individual\",\n    \"sticker\": {\n        \"provider\": {\n            \"name\": \"<Provider Name from Media Provider API, optional\"\n        },\n        \"link\": \"<Image Link>\"\n    }\n}"
            }
        },
        "functionality": "To send a sticker message, make a **POST** call to `/messages` and attach a message object with **`type`** = `sticker`."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Mark Message As Read",
        "api_call": "{{URL}}/v1/messages/<Message ID from Webhook>",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"status\": \"read\"\n}"
            }
        },
        "functionality": "You can use the `/v1/messages/` endpoint to change the status of incoming messages to read.\n\nYou must set **`pass_through`** to `false`"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Upload Media",
        "api_call": "{{URL}}/v1/media",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "image/jpeg"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                },
                {
                    "key": "",
                    "value": "",
                    "disabled": true
                }
            ],
            "body": {
                "mode": "file",
                "file": {}
            }
        },
        "functionality": "Make a **POST** request to `/v1/media` to upload your media. The body of the API request must contain the binary"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Download Media",
        "api_call": "{{URL}}/v1/media/{{Test-Media-ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Given a specific ID, use the `v1/media/{{media-id}}` endpoint to retrieve or delete your media.\n\nAfter you have successfully uploaded your media,"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Retry download Media",
        "api_call": "{{URL}}/v1/media/download/{{Test-Media-ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Given a specific ID, use the `v1/media/{{media-id}}` endpoint to retrieve or delete your media.\n\nAfter you have successfully uploaded your media,"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Delete Media",
        "api_call": "{{URL}}/v1/media/{{Test-Media-ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "DELETE",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "file",
                "file": {}
            }
        },
        "functionality": "To delete media in the WhatsApp Business API client, send a **DELETE** request to the `v1/media` endpoint along with the"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get First Party Stickerpacks",
        "api_call": "{{URL}}/v1/stickerpacks?namespace=whatsapp",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": ""
            }
        },
        "functionality": "Use a **GET** request to the `/v1/stickerpacks/` endpoint to retrieve a first-party stickerpack. To get WhatsApp stickerpacks, be sure to"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get First Party Stickerpack Info",
        "api_call": "{{URL}}/v1/stickerpacks/{{Test-1P-Stickerpack-ID}}?namespace=whatsapp",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Use a **GET** request to the `/v1/stickerpacks/{{stickerpack-id}}` endpoint using `namespace` = `whatsapp` to retrieve information about a given first-party stickerpack."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get First Party Stickers",
        "api_call": "{{URL}}/v1/stickerpacks/{{Test-1P-Stickerpack-ID}}/stickers?namespace=whatsapp",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Use a **GET** request to the `v1/stickerpacks/{{stickerpack-id}}/stickers` to retrieve stickers from a given first-party stickerpack:"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get First Party Sticker Info",
        "api_call": "{{URL}}/v1/stickerpacks/{{Test-1P-Stickerpack-ID}}/stickers/{{Test-Sticker-Index}}?namespace=whatsapp",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Send a **GET** request to `/v1/stickerpacks/{{stickerpack-id}}/stickers/{{sticker-index}}` endpoint with `namespace` = `whatsapp` to get first party sticker info about a given"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Create Third Party Stickerpacks",
        "api_call": "{{URL}}/v1/stickerpacks",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n\t\"publisher\": \"<Your Publisher Name>\",\n\t\"name\": \"<Your Sticker Pack Name>\",\n\t\"ios_app_store_link\": \"<Valid iOS App Store Link>\",\n\t\"android_app_store_link\": \"<Valid Android App Store Link>\"\n}"
            }
        },
        "functionality": "Send a **POST** API request to the `v1/stickerpacks` endpoint to create a third-party stickerpack using the following parameters:\n\n## Parameters\n\n| Name"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get Third Party Stickerpacks",
        "api_call": "{{URL}}/v1/stickerpacks",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Use a **GET** request to the `/v1/stickerpacks/` endpoint to retrieve a third-party stickerpack."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Update Third Party Stickerpack",
        "api_call": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PATCH",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"publisher\": \"<Your Publisher Name>\",\n    \"name\": \"<Your Sticker Pack Name>\",\n    \"ios_app_store_link\": \"<Valid iOS App Store Link>\",\n    \"android_app_store_link\": \"<Valid Android App Store Link>\"\n}"
            }
        },
        "functionality": "Send an **PATCH** API request to the `v1/stickerpacks/{{stickerpack-id}}` endpoint to update a third-party stickerpack using the following parameters:\n\n## Parameters\n\n| Name"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Delete Third Party Stickerpack",
        "api_call": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "DELETE",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Send a **DELETE** request to the `v1/stickerpacks/{{stickerpack-id}}` endpoint to delete a stickerpack.\n\n## Response\nA successful response returns `200 OK` and either"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get Third Party Stickerpack Info",
        "api_call": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Send a **GET** request to `/v1/stickerpacks/{{stickerpack-id}}/stickers/{{sticker-index}}` endpoint to get third-party sticker info about a given sticker.\n\n## Response Parameters\n\n| Name "
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Create Third Party Stickers",
        "api_call": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}/stickers",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n\t\"image_data_id\" : \"<Sticker Image Media Id>\",\n\t\"emojis\": [\"\ud83d\udc25\", \"\ud83d\ude03\"]\n}"
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get Third Party Stickers",
        "api_call": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}/stickers",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Use a **GET** request to the `v1/stickerpacks/{{stickerpack-id}}/stickers` to retrieve stickers from a given third-party stickerpack:"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Update Third Party Sticker",
        "api_call": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}/stickers/{{Test-Sticker-Index}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PATCH",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"image_data_id\": \"<Valid Image Media Id>\",\n    \"emojis\": [\n        \"\ud83d\udc25\",\n        \"\ud83d\ude03\"\n    ]\n}"
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Delete Third Party Sticker",
        "api_call": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}/stickers/{{Test-Sticker-Index}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "DELETE",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": ""
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get Third Party Sticker Info",
        "api_call": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}/stickers/{{Test-Sticker-Index}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Use a **GET** request to the `/v1/stickerpacks/{{stickerpack-id}}` endpoint to retrieve information about a given third-party stickerpack."
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Check Health",
        "api_call": "{{URL}}/v1/health",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Send a **GET** call to the `/v1/health` endpoint to retrieve the health status of your WhatsApp Business API client.\n\n## Parameters\n\n|"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get App Stats",
        "api_call": "{{URL}}/v1/stats/app",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Send a **GET** call the `/v1/stats/app` endpoint to retrieve Coreapp stats in JSON format. Coreapp stats live in memory and"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get App Internal Stats",
        "api_call": "{{URL}}/v1/stats/app/internal",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get DB Stats",
        "api_call": "{{URL}}/v1/stats/db",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Send a **GET** call to the `/v1/stats/db` endpoint to retrieve database stats in JSON format.\n\nChecking the database stats can take"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get DB Stats Prometheus",
        "api_call": "{{URL}}/v1/stats/db?format=prometheus",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "Send a **GET** call to the `/v1/stats/db` endpoint with **`format`** = `prometheus` to retrieve database stats in Prometheus format.\n\nChecking the"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get DB Internal Stats",
        "api_call": "{{URL}}/v1/stats/db/internal",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get Support Info",
        "api_call": "{{URL}}/v1/support",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Make a **GET** request to the `/v1/support` endpoint to retrieve information that the Support team can use to help with"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Upload Certificate",
        "api_call": "{{URL}}/v1/certificates/external",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                },
                {
                    "key": "Content-Type",
                    "value": "text/plain"
                },
                {
                    "key": "Content-Length",
                    "value": "<content-size>"
                }
            ],
            "body": {
                "mode": "file",
                "file": {}
            }
        },
        "functionality": "Make **POST** calls to upload a CA certificate. Make sure that the uploaded certificate contains the following sections in one"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Download CA Certificate",
        "api_call": "{{URL}}/v1/certificates/external/ca",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Make a **GET** request to the `/v1/certificates/external/ca` endpoint to retrieve a CA certificate stored in the WhatsApp Business API client.\n\n##"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Upload Webhook CA Certificate",
        "api_call": "{{URL}}/v1/certificates/webhooks/ca",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                },
                {
                    "key": "Content-Type",
                    "value": "text/plain"
                }
            ],
            "body": {
                "mode": "file",
                "file": {}
            }
        },
        "functionality": "If the Webhook URL as configured in the application settings uses an internal CA cert, you need to upload it"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Download Webhook CA Certificate",
        "api_call": "{{URL}}/v1/certificates/webhooks/ca",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Use the `/v1/certificates/webhooks/ca` endpoint to manage your certificates if the Webhook URL as configured in the application settings uses an"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Delete Webhook CA Certificate",
        "api_call": "{{URL}}/v1/certificates/webhooks/ca",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "DELETE",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "file",
                "file": {}
            }
        },
        "functionality": "Send a **DELETE** request to the `/v1/certificates/webhooks/ca` endpoint to delete your CA certificate.\n\n## Response \nIf the request is successful, it"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Delete Messages From Database",
        "api_call": "{{URL}}/v1/services/message/gc",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": ""
            }
        },
        "functionality": "Use the **PUT** request to the `/v1/services/message/gc` endpoint to delete messages from the database associated with your WhatsApp Business API"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Delete Media",
        "api_call": "{{URL}}/v1/services/media/gc",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": ""
            }
        },
        "functionality": "Use the **PUT** request to the `/v1/services/media/gc` endpoint to delete media from the database and media storage associated with your"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Metrics",
        "api_call": "{{URL}}/metrics",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}",
                    "type": "text"
                }
            ]
        },
        "functionality": "Returns metrics for the Webapp"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get App Stats",
        "api_call": "{{URL}}/v1/stats/app",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Send a **GET** call the `/v1/stats/app` endpoint to retrieve Coreapp stats in JSON format. Coreapp stats live in memory and"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get App Stats Prometheus Format",
        "api_call": "{{URL}}/v1/stats/app?format=prometheus",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "Send a GET call the `/v1/stats/app` endpoint with **`format`** = `prometheus` to retrieve Coreapp stats in Prometheus format. Coreapp stats"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get DB Stats",
        "api_call": "{{URL}}/v1/stats/db",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{AdminAuthToken}}"
                }
            ]
        },
        "functionality": "Send a **GET** call to the `/v1/stats/db` endpoint to retrieve database stats in JSON format.\n\nChecking the database stats can take"
    },
    {
        "user_name": "opatothan",
        "api_name": "On-Premises API: Get DB Stats Prometheus",
        "api_call": "{{URL}}/v1/stats/db?format=prometheus",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "Send a **GET** call to the `/v1/stats/db` endpoint with **`format`** = `prometheus` to retrieve database stats in Prometheus format.\n\nChecking the"
    }
]