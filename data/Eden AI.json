[
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Get Batch Job Result",
        "api_call": "https://api.edenai.run/v2/:feature/:subfeature/batch/:name/?name=<string>&page=<integer>&public_id=<integer>&status=processing",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Return paginated response of requests with their status and their\nresponses if the request succeeded or errror if failed"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Launch Batch Job",
        "api_call": "https://api.edenai.run/v2/:feature/:subfeature/batch/:name/",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"requests\": [\n    {\n      \"do0\": {}\n    },\n    {\n      \"do6\": {},\n      \"est_10\": {}\n    }\n  ],\n  \"webhook_receiver\": \"<uri>\"\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "\nLaunch a async Batch job, given a job name that will be used as its id.\n\nEach request should have the"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Delete Batch Job",
        "api_call": "https://api.edenai.run/v2/:feature/:subfeature/batch/:name/",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "DELETE",
            "header": []
        },
        "functionality": "Api view with custom pagination method to return paginated response from any queryset"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Retrieve Project",
        "api_call": "https://api.edenai.run/v2/aiproducts/:project_id",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Add Audio File",
        "api_call": "https://api.edenai.run/v2/aiproducts/askyoda/:project_id/add_audio",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) Add to your project audio files",
                        "key": "file",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Select a provider to use for speech to text  to extract text from your audio.",
                        "key": "provider",
                        "value": "openai",
                        "type": "text"
                    },
                    {
                        "description": "Optional parameter: Attach metadata to the uploaded file data in your database. Provide a stringified JSON with key-value pairs. Useful in `filter_document` when querying the language model, it allows you to filter data with your Chatbot by considering only documents that have the specified metadata.",
                        "key": "metadata",
                        "value": "<string>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "Add a audio file into your project, they will be processed and stored as text embeddings within your project."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Add CSV File",
        "api_call": "https://api.edenai.run/v2/aiproducts/askyoda/:project_id/add_csv",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) Add a csv file to your project.",
                        "key": "file",
                        "value": "csv",
                        "type": "text"
                    },
                    {
                        "description": "Optional parameter: Attach metadata to the uploaded file data in your database. Provide a stringified JSON with key-value pairs. Useful in `filter_document` when querying the language model, it allows you to filter data with your Chatbot by considering only documents that have the specified metadata.",
                        "key": "metadata",
                        "value": "<string>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "Add a csv file into your project, it will be processed and stored as text embeddings within your project."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Add PDF File",
        "api_call": "https://api.edenai.run/v2/aiproducts/askyoda/:project_id/add_file",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) Add to your project PDFs.",
                        "key": "file",
                        "value": "pdf",
                        "type": "text"
                    },
                    {
                        "description": "Select a provider to use for ocr to extract text from your pdf.",
                        "key": "provider",
                        "value": "amazon",
                        "type": "text"
                    },
                    {
                        "description": "Optional parameter: Attach metadata to the uploaded file data in your database. Provide a stringified JSON with key-value pairs. Useful in `filter_document` when querying the language model, it allows you to filter data with your Chatbot by considering only documents that have the specified metadata.",
                        "key": "metadata",
                        "value": "<string>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "Add a pdf file into your project, they will be processed and stored as text embeddings within your project."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Add Texts",
        "api_call": "https://api.edenai.run/v2/aiproducts/askyoda/:project_id/add_text",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"texts\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "Add text data in your project, which will be stored as embeddings within your chosen database provider."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Add Urls",
        "api_call": "https://api.edenai.run/v2/aiproducts/askyoda/:project_id/add_url",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "Add a list of URLs into your projects, they will be processed and stored as text embeddings within your project."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Ask LLM",
        "api_call": "https://api.edenai.run/v2/aiproducts/askyoda/:project_id/ask_llm",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"query\": \"<string>\",\n  \"llm_provider\": \"<string>\",\n  \"llm_model\": \"<string>\",\n  \"k\": 3,\n  \"personality\": {},\n  \"filter_documents\": {}\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "Interact with your data by selecting your preferred Language Model provider. \nThe chosen provider will then respond to queries based"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Create Bot Profile",
        "api_call": "https://api.edenai.run/v2/aiproducts/askyoda/:project_id/create_bot_profile",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"company_name\": \"<string>\",\n  \"job_title\": \"<string>\",\n  \"language\": \"<string>\",\n  \"name\": \"<string>\",\n  \"personality\": \"<string>\"\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "Create a bot profile with a distinct personality."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Delete bot profile",
        "api_call": "https://api.edenai.run/v2/aiproducts/askyoda/:project_id/delete_bot_profile",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "DELETE",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Delete the bot profile within your Ask YODA project"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Delete Chunk",
        "api_call": "https://api.edenai.run/v2/aiproducts/askyoda/:project_id/delete_chunk?id=<string>",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Delete a query from your project by its ID."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Get bot profile info",
        "api_call": "https://api.edenai.run/v2/aiproducts/askyoda/:project_id/get_bot_profile",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Retrieve the bot profile within your Ask YODA project"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Get collection infos",
        "api_call": "https://api.edenai.run/v2/aiproducts/askyoda/:project_id/get_collection_info",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Retrieve details about the collection within your Ask YODA project, including the total number of items stored in your project"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Query",
        "api_call": "https://api.edenai.run/v2/aiproducts/askyoda/:project_id/query",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"query\": \"<string>\",\n  \"llm_provider\": \"<string>\",\n  \"llm_model\": \"<string>\",\n  \"k\": 3,\n  \"personality\": {},\n  \"filter_documents\": {}\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "Retrieve a list of search query responses and compare them to your input. \nProvide a query, and in return, receive"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Update project settings",
        "api_call": "https://api.edenai.run/v2/aiproducts/askyoda/:project_id/update_project_settings",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "PATCH",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Update the default settings of the Yoda project. It allows you to modify the project's default settings, specifically changing the"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Create Project",
        "api_call": "https://api.edenai.run/v2/aiproducts/askyoda/",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"collection_name\": \"<string>\",\n  \"project_name\": \"<string>\",\n  \"db_provider\": \"qdrant\",\n  \"embeddings_provider\": \"cohere\",\n  \"llm_provider\": \"<string>\",\n  \"llm_model\": \"<string>\"\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "Allows you to create a new Ask YODA project with specified details."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Delete Project",
        "api_call": "https://api.edenai.run/v2/aiproducts/delete/:project_id",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "DELETE",
            "header": []
        },
        "functionality": "View to delete an AI project."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Translate",
        "api_call": "https://api.edenai.run/v2/aiproducts/translathor/:project_id/translate",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "urlencoded",
                "urlencoded": [
                    {
                        "description": "(Required) Target language code (ex: en, fr)",
                        "key": "target_language",
                        "value": "<string>"
                    },
                    {
                        "description": "(Required) Text to analyze",
                        "key": "text",
                        "value": "<string>"
                    },
                    {
                        "description": "Source language code (ex: en, fr)",
                        "key": "source_language",
                        "value": "<string>"
                    }
                ]
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: List languages",
        "api_call": "https://api.edenai.run/v2/aiproducts/translathor/:project_id?source_lang=<string>&target_lang=<string>",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "List all language pairs withing a `project_name`. You should at leat provide one or both of `source_lang` and `target_lang`\n "
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Update language",
        "api_call": "https://api.edenai.run/v2/aiproducts/translathor/:project_id?source_lang=<string>&target_lang=<string>",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "PATCH",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "The language code from which the text will be translated",
                        "key": "source_language",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "The language code in which the text will be translated",
                        "key": "target_language",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "The project name",
                        "key": "project_name",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "key": "fall_back_providers",
                        "value": "<string>,<string>",
                        "type": "text"
                    },
                    {
                        "key": "provider",
                        "value": "<string>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "Update a language pair withing a `project_name`. Both `source_lang` and `target_lang` query parameters should be provided.\n    "
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Delete language",
        "api_call": "https://api.edenai.run/v2/aiproducts/translathor/:project_id?source_lang=<string>&target_lang=<string>",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "DELETE",
            "header": []
        },
        "functionality": "Delete a language pair withing a `project_name`. Both `source_lang` and `target_lang` query parameters should be provided.\n    "
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Translate",
        "api_call": "https://api.edenai.run/v2/aiproducts/translathor/translate/:project_name",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "urlencoded",
                "urlencoded": [
                    {
                        "description": "(Required) Target language code (ex: en, fr)",
                        "key": "target_language",
                        "value": "<string>"
                    },
                    {
                        "description": "(Required) Text to analyze",
                        "key": "text",
                        "value": "<string>"
                    },
                    {
                        "description": "Source language code (ex: en, fr)",
                        "key": "source_language",
                        "value": "<string>"
                    }
                ]
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: List all TranslaThor Projects",
        "api_call": "https://api.edenai.run/v2/aiproducts/translathor/",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "List all language pairs of all projects created by the user"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Create Language Provider Pair",
        "api_call": "https://api.edenai.run/v2/aiproducts/translathor/",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) The project name",
                        "key": "project_name",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "(Required) ",
                        "key": "provider",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "The language code from which the text will be translated",
                        "key": "source_language",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "The language code in which the text will be translated",
                        "key": "target_language",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "key": "fall_back_providers",
                        "value": "<string>,<string>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "Create a new language pair, and associate it to an existing project. If the project does not exist, a new"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Doc Parser launch call",
        "api_call": "https://api.edenai.run/v2/aiproducts/x_merge/doc_parser/:project_id/launch_call",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "Language code of the language the document is written in (ex: fr (French), en (English), es (Spanish))",
                        "key": "language",
                        "value": "<string>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Retrieve doc_parser project",
        "api_call": "https://api.edenai.run/v2/aiproducts/x_merge/doc_parser/:project_id",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Update doc_parser project",
        "api_call": "https://api.edenai.run/v2/aiproducts/x_merge/doc_parser/:project_id",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "PATCH",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "key": "structure_providers",
                        "value": "[object Object]",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: List doc_parser projects",
        "api_call": "https://api.edenai.run/v2/aiproducts/x_merge/doc_parser/",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Create doc_parser project",
        "api_call": "https://api.edenai.run/v2/aiproducts/x_merge/doc_parser/",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) The project name",
                        "key": "project_name",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "(Required) ",
                        "key": "subfeature",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "key": "structure_providers",
                        "value": "[object Object]",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: List XMerge project",
        "api_call": "https://api.edenai.run/v2/aiproducts/x_merge/",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "List all user XMerge projects"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: List Projects",
        "api_call": "https://api.edenai.run/v2/aiproducts/?project_type=<string>",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Speech to Text Get Job Results",
        "api_call": "https://api.edenai.run/v2/audio/speech_to_text_async/:public_id?response_as_dict=true&show_original_response=false",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get the status and results of an async job given its ID."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Speech to Text List Jobs",
        "api_call": "https://api.edenai.run/v2/audio/speech_to_text_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get a list of all jobs launched for this feature. You'll then be able to use the ID of each"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Speech to Text Launch Job",
        "api_call": "https://api.edenai.run/v2/audio/speech_to_text_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result.",
                        "key": "webhook_receiver",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set.",
                        "key": "users_webhook_parameters",
                        "value": "[object Object]",
                        "type": "text"
                    },
                    {
                        "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     ",
                        "key": "settings",
                        "value": "[object Object]",
                        "type": "text"
                    },
                    {
                        "description": "\nParameters specific to the provider that you want to send along the request.\n\nit should take a *provider* name as key and an object of parameters as value.\n\nExample:\n\n    {\n      \"deepgram\": {\n        \"filler_words\": true,\n        \"smart_format\": true,\n        \"callback\": \"https://webhook.site/0000\"\n      },\n      \"assembly\": {\n        \"webhook_url\": \"https://webhook.site/0000\"\n      }\n    }\n\nPlease refer to the documentation of each provider to see which parameters to send.\n",
                        "key": "provider_params",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "Language code expected (ex: en, fr)",
                        "key": "language",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Number of speakers in the file audio",
                        "key": "speakers",
                        "value": "2",
                        "type": "text"
                    },
                    {
                        "description": "Boolean value to specify weather or not the service will filter profanity and replace inappropriate words with a series of asterisks",
                        "key": "profanity_filter",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "List of words or composed words to be detected by the speech to text engine. (Ex: Word, Mike, Draw, Los Angeles,...)",
                        "key": "custom_vocabulary",
                        "value": "",
                        "type": "text"
                    },
                    {
                        "description": "Boolean value to specify weather to convert the audio/video file to wav format to be accepted by a majority of the providers",
                        "key": "convert_to_wav",
                        "value": "false",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Model|Version|Price|Billing unit|\n|----|----|-------|-----|------------|\n|**amazon**|-|`boto3 (v1.15.18)`|0.024 (per 60 seconde)|15 seconde\n|**google**|-|`v1p1beta1`|0.024 (per 60 seconde)|1 seconde\n|**ibm**|-|`v1`|0.02 (per 60 seconde)|1 seconde\n|**microsoft**|-|`v1.0`|0.0168"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Speech to text delete Jobs",
        "api_call": "https://api.edenai.run/v2/audio/speech_to_text_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "DELETE",
            "header": []
        },
        "functionality": "Generic class to handle method GET all async job for user\n\nAttributes:\n    feature (str): EdenAI feature\n  "
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Text to Speech",
        "api_call": "https://api.edenai.run/v2/audio/text_to_speech",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"text\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"settings\": {},\n  \"language\": \"\",\n  \"option\": \"MALE\",\n  \"rate\": 0,\n  \"pitch\": 0,\n  \"volume\": 0,\n  \"audio_format\": \"\",\n  \"sampling_rate\": 0\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Model|Version|Price|Billing unit|\n|----|----|-------|-----|------------|\n|**amazon**|-|`boto3 (v1.15.18)`|4.0 (per 1000000 char)|1 char\n|**amazon**|**Neural**|`boto3 (v1.15.18)`|16.0 (per 1000000 char)|1 char\n|**google**|-|`v1`|4.0 (per 1000000 char)|1"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Text To Speech Get Job Results",
        "api_call": "https://api.edenai.run/v2/audio/text_to_speech_async/:public_id?response_as_dict=true&show_original_response=false",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get the status and results of an async job given its ID."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Text To Speech list jobs",
        "api_call": "https://api.edenai.run/v2/audio/text_to_speech_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get a list of all jobs launched for this feature. You'll then be able to use the ID of each"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Text to Speech launch job",
        "api_call": "https://api.edenai.run/v2/audio/text_to_speech_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "(Required) Text to analyze",
                        "key": "text",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result.",
                        "key": "webhook_receiver",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set.",
                        "key": "users_webhook_parameters",
                        "value": "[object Object]",
                        "type": "text"
                    },
                    {
                        "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     ",
                        "key": "settings",
                        "value": "[object Object]",
                        "type": "text"
                    },
                    {
                        "description": "Language code expected (ex: en, fr)",
                        "key": "language",
                        "value": "",
                        "type": "text"
                    },
                    {
                        "description": "* `FEMALE` - Female\n* `MALE` - Male (This can only be one of FEMALE,MALE)",
                        "key": "option",
                        "value": "MALE",
                        "type": "text"
                    },
                    {
                        "description": "Increase or decrease the speaking rate by expressing a positif or negatif number ranging between             100 and -100 (a relative value as percentage varying from -100% to 100%)",
                        "key": "rate",
                        "value": "0",
                        "type": "text"
                    },
                    {
                        "description": "Increase or decrease the speaking pitch by expressing a positif or negatif number ranging between             100 and -100 (a relative value as percentage varying from -100% to 100%)",
                        "key": "pitch",
                        "value": "0",
                        "type": "text"
                    },
                    {
                        "description": "Increase or decrease the audio volume by expressing a positif or negatif number ranging between             100 and -100 (a relative value as percentage varying from -100% to 100%)",
                        "key": "volume",
                        "value": "0",
                        "type": "text"
                    },
                    {
                        "description": "Optional parameter to specify the audio format in which the audio will be generated. By default,             audios are encoded in MP3, except for lovoai which use the wav container.",
                        "key": "audio_format",
                        "value": "",
                        "type": "text"
                    },
                    {
                        "description": "Optional. The synthesis sample rate (in hertz) for this audio. When this is specified, the audio will be converted             either to the right passed value, or to a the nearest value acceptable by the provider",
                        "key": "sampling_rate",
                        "value": "0",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Model|Version|Price|Billing unit|\n|----|----|-------|-----|------------|\n|**lovoai**|-|`v1`|0.16 (per 1000 char)|1 char\n|**amazon**|-|`boto3 (v1.15.18)`|4.0 (per 1000000 char)|1 char\n|**amazon**|**Neural**|`boto3 (v1.15.18)`|16.0 (per 1000000 char)|1"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Text To Speech delete Jobs",
        "api_call": "https://api.edenai.run/v2/audio/text_to_speech_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "DELETE",
            "header": []
        },
        "functionality": "Generic class to handle method GET all async job for user\n\nAttributes:\n    feature (str): EdenAI feature\n  "
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: List Batch Jobs",
        "api_call": "https://api.edenai.run/v2/batch",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Anonymization",
        "api_call": "https://api.edenai.run/v2/image/anonymization",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "png",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**api4ai**|`v1.0.0`|25.0 (per 1000 file)|1 file\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Automl Classification - Create Project",
        "api_call": "https://api.edenai.run/v2/image/automl_classification/create_project",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Name of your project",
                        "key": "name",
                        "value": "<string>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**nyckel**|`v1.0.0`|free|-\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Automl Classification - Delete Project",
        "api_call": "https://api.edenai.run/v2/image/automl_classification/delete_project",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) The id of project",
                        "key": "project_id",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**nyckel**|`v1.0.0`|free|-\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Automl Classification - List Projects",
        "api_call": "https://api.edenai.run/v2/image/automl_classification/list_projects",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "List Automl Classification Projects"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Automl Classification - Predict Get Job Results",
        "api_call": "https://api.edenai.run/v2/image/automl_classification/predict_async/:public_id?response_as_dict=true&show_original_response=false",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get the status and results of an async job given its ID."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Automl Classification Predict List Job",
        "api_call": "https://api.edenai.run/v2/image/automl_classification/predict_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get a list of all jobs launched for this feature. You'll then be able to use the ID of each"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Automl Classification Predict Launch Job",
        "api_call": "https://api.edenai.run/v2/image/automl_classification/predict_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) The id of project",
                        "key": "project_id",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result.",
                        "key": "webhook_receiver",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set.",
                        "key": "users_webhook_parameters",
                        "value": "[object Object]",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "png",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**nyckel**|`v1.0.0`|0.005 (per 1 request)|1 request\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Automl Classification - Train Get Job Results",
        "api_call": "https://api.edenai.run/v2/image/automl_classification/train_async/:public_id?response_as_dict=true&show_original_response=false",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get the status and results of an async job given its ID."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Automl Classification Train List Job",
        "api_call": "https://api.edenai.run/v2/image/automl_classification/train_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get a list of all jobs launched for this feature. You'll then be able to use the ID of each"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Automl Classification Train Launch Job",
        "api_call": "https://api.edenai.run/v2/image/automl_classification/train_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) The id of project",
                        "key": "project_id",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result.",
                        "key": "webhook_receiver",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set.",
                        "key": "users_webhook_parameters",
                        "value": "[object Object]",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**nyckel**|`v1.0.0`|0.005 (per 1 request)|1 request\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Automl Classification - Upload Data Get Job Results",
        "api_call": "https://api.edenai.run/v2/image/automl_classification/upload_data_async/:public_id?response_as_dict=true&show_original_response=false",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get the status and results of an async job given its ID."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Automl Classification Upload Data List Job",
        "api_call": "https://api.edenai.run/v2/image/automl_classification/upload_data_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get a list of all jobs launched for this feature. You'll then be able to use the ID of each"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Automl Classification Upload Data Launch Job",
        "api_call": "https://api.edenai.run/v2/image/automl_classification/upload_data_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) Label of the image",
                        "key": "label",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "(Required) The id of project",
                        "key": "project_id",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "(Required) Type of data : TRAINING or TEST\n\n* `TRAINING` - TRAINING\n* `TEST` - TEST (This can only be one of TRAINING,TEST)",
                        "key": "type_of_data",
                        "value": "TRAINING",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result.",
                        "key": "webhook_receiver",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set.",
                        "key": "users_webhook_parameters",
                        "value": "[object Object]",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "tiff",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**nyckel**|`v1.0.0`|0.0005 (per 1 file)|1 file\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Background Removal",
        "api_call": "https://api.edenai.run/v2/image/background_removal",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "jpg",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "Provider specific parameters",
                        "key": "provider_params",
                        "value": "[object Object]",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**api4ai**|`v1.0.0`|50.0 (per 1000 file)|1 file\n|**microsoft**|`v3.2`|1.0 (per 1000 file)|1 file\n|**photoroom**|`v1`|16.0 (per 1000 file)|1 file\n|**sentisight**|`v3.3.1`|1.0 (per"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Embeddings",
        "api_call": "https://api.edenai.run/v2/image/embeddings",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "(Required) The type of embedding representation to embed the image with\n\n* `document` - document\n* `query` - query\n* `symetric` - symetric (This can only be one of document,query,symetric)",
                        "key": "representation",
                        "value": "query",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     ",
                        "key": "settings",
                        "value": "[object Object]",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "tiff",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Model|Version|Price|Billing unit|\n|----|----|-------|-----|------------|\n|**alephalpha**|-|`1.12.0`|0.05 (per 1 file)|1 file\n\n\n</details>\n\n<details><summary>Supported Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**English**|`en`|\n|**French**|`fr`|\n|**German**|`de`|\n|**Italian**|`it`|\n|**Spanish**|`es`|\n\n</details><details><summary>Supported Models</summary><details><summary>alephalpha</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**alephalpha**|`luminous-base`|\n\n</details>\n\n</details>"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Explicit Content Detection",
        "api_call": "https://api.edenai.run/v2/image/explicit_content",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "jpg",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 (v1.15.18)`|1.0 (per 1000 file)|1 file\n|**clarifai**|`8.0.0`|2.0 (per 1000 file)|1 file\n|**google**|`v1`|1.5 (per 1000 file)|1 file\n|**microsoft**|`v3.2`|1.0"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Face Comparison",
        "api_call": "https://api.edenai.run/v2/image/face_compare",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file1",
                        "value": "jpg",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file1_url",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file2",
                        "value": "jpg",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file2_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**base64**|`latest`|0.25 (per 1 request)|1 request\n|**facepp**|`v3`|2.0 (per 1000 request)|1 request\n|**amazon**|`boto3 (v1.15.18)`|1.0 (per 1000 request)|1 request\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Face Detection",
        "api_call": "https://api.edenai.run/v2/image/face_detection",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "png",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 (v1.15.18)`|1.0 (per 1000 file)|1 file\n|**clarifai**|`8.0.0`|2.0 (per 1000 file)|1 file\n|**google**|`v1`|1.5 (per 1000 file)|1 file\n|**microsoft**|`v3.2`|1.0"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Face Recognition - Add Face",
        "api_call": "https://api.edenai.run/v2/image/face_recognition/add_face",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "jpeg",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 1.26.8`|1.0 (per 1000 file)|1 file\n|**microsoft**|`Face API - v1.0`|1.0 (per 1000 file)|1 file\n|**facepp**|`v3`|0.6 (per"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Face Recognition - Delete Face",
        "api_call": "https://api.edenai.run/v2/image/face_recognition/delete_face",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"face_id\": \"<string>\",\n  \"providers\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 1.26.8`|free|-\n|**microsoft**|`Face API - v1.0`|free|-\n|**facepp**|`v3`|0.1 (per 1000 request)|1 request\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Face Recognition - List Faces",
        "api_call": "https://api.edenai.run/v2/image/face_recognition/list_faces?attributes_as_list=false&fallback_providers=<string>&providers=<string>&response_as_dict=true&show_original_response=false",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 1.26.8`|free|-\n|**microsoft**|`Face API - v1.0`|free|-\n|**facepp**|`v3`|0.1 (per 1000 request)|1 request\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Face Recognition - Recognize Face",
        "api_call": "https://api.edenai.run/v2/image/face_recognition/recognize",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "jpeg",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 1.26.8`|1.0 (per 1000 file)|1 file\n|**microsoft**|`Face API - v1.0`|1.0 (per 1000 file)|1 file\n|**facepp**|`v3`|2.0 (per"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Image generation",
        "api_call": "https://api.edenai.run/v2/image/generation",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"resolution\": \"512x512\",\n  \"text\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"settings\": {},\n  \"num_images\": 1\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Model|Version|Resolution|Price|Billing unit|\n|----|----|-------|------|-----|------------|\n|**deepai**|-|`v1Beta`|-|0.05 (per 1 request)|1 request\n|**openai**|-|`v1Beta`|`256x256`|0.016 (per 1 image)|1 image\n|**openai**|-|`v1Beta`|`512x512`|0.018 (per 1 image)|1 image\n|**openai**|-|`v1Beta`|`1024x1024`|0.02 (per"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Landmark Detection",
        "api_call": "https://api.edenai.run/v2/image/landmark_detection",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "jpg",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**google**|`v1`|1.5 (per 1000 file)|1 file\n|**microsoft**|`v3.2`|1.0 (per 1000 file)|1 file\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Logo Detection",
        "api_call": "https://api.edenai.run/v2/image/logo_detection",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "jpg",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**google**|`v1`|1.5 (per 1000 file)|1 file\n|**microsoft**|`v3.2`|1.0 (per 1000 file)|1 file\n|**smartclick**|`v3.2`|0.5 (per 1000 file)|1 file\n|**api4ai**|`v1.0.0`|0.25 (per"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Object Detection",
        "api_call": "https://api.edenai.run/v2/image/object_detection",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     ",
                        "key": "settings",
                        "value": "[object Object]",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "tiff",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Model|Version|Price|Billing unit|\n|----|----|-------|-----|------------|\n|**amazon**|-|`boto3 (v1.15.18)`|1.0 (per 1000 file)|1 file\n|**api4ai**|-|`1.9.2`|0.5 (per 1000 file)|1 file\n|**clarifai**|-|`8.0.0`|2.0 (per 1000 file)|1 file\n|**google**|-|`v1`|2.25"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Question Answer",
        "api_call": "https://api.edenai.run/v2/image/question_answer",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     ",
                        "key": "settings",
                        "value": "[object Object]",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "tiff",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer.",
                        "key": "temperature",
                        "value": "0",
                        "type": "text"
                    },
                    {
                        "description": "Question about the image",
                        "key": "question",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "The maximum number of tokens to generate in the completion. The token count of your prompt plus max_tokens cannot exceed the model's context length.",
                        "key": "max_tokens",
                        "value": "1000",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Model|Version|Price|Billing unit|\n|----|----|-------|-----|------------|\n|**alephalpha**|**luminous-base**|`1.12.0`|0.02 (per 1 request)|1 request\n|**alephalpha**|**luminous-extended**|`1.12.0`|0.03 (per 1 request)|1 request\n|**alephalpha**|-|`1.12.0`|0.02 (per 1 request)|1 request\n|**openai**|-|`v1`|0.02 (per"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Search - Delete phase",
        "api_call": "https://api.edenai.run/v2/image/search/delete_image",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) ",
                        "key": "image_name",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**sentisight**|`v3.3.1`|free|-\n|**nyckel**|`v1.0.0`|free|-\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Search - get image",
        "api_call": "https://api.edenai.run/v2/image/search/get_image?attributes_as_list=false&fallback_providers=<string>&image_name=<string>&providers=<string>&response_as_dict=true&show_original_response=false",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**sentisight**|`v3.3.1`|free|-\n|**nyckel**|`v1.0.0`|free|-\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Search - list all images",
        "api_call": "https://api.edenai.run/v2/image/search/get_images?attributes_as_list=false&fallback_providers=<string>&providers=<string>&response_as_dict=true&show_original_response=false",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**sentisight**|`v3.3.1`|free|-\n|**nyckel**|`v1.0.0`|free|-\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Search - launch similarity",
        "api_call": "https://api.edenai.run/v2/image/search/launch_similarity",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "png",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**sentisight**|`v3.3.1`|1.0 (per 1000 file)|1 file\n|**nyckel**|`v1.0.0`|1.0 (per 1000 file)|1 file\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Search - Upload Phase",
        "api_call": "https://api.edenai.run/v2/image/search/upload_image",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) ",
                        "key": "image_name",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "png",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**sentisight**|`v3.3.1`|1.0 (per 1000 file)|1 file\n|**nyckel**|`v1.0.0`|0.5 (per 1000 file)|1 file\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: List Providers Subfeatures",
        "api_call": "https://api.edenai.run/v2/info/provider_subfeatures?feature__name=<string>&gender=<string>&is_working=<boolean>&language=<string>&phase__name=<string>&provider__name=<string>&subfeature__name=<string>",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "List Provider and features relations : You can get a list of *all providers* for a *feature* or *all features*"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Anonymization Get Job Results",
        "api_call": "https://api.edenai.run/v2/ocr/anonymization_async/:public_id?response_as_dict=true&show_original_response=false",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get the status and results of an async job given its ID."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Anonymization List Job",
        "api_call": "https://api.edenai.run/v2/ocr/anonymization_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get a list of all jobs launched for this feature. You'll then be able to use the ID of each"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Anonymization Launch Job",
        "api_call": "https://api.edenai.run/v2/ocr/anonymization_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result.",
                        "key": "webhook_receiver",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set.",
                        "key": "users_webhook_parameters",
                        "value": "[object Object]",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "If your PDF file has a password, you can pass it here!",
                        "key": "file_password",
                        "value": "<string>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**readyredact**|`v1`|0.05 (per 1 file)|1 file\n|**base64**|`v1`|0.25 (per 1 page)|1 page\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Anonymization delete Jobs",
        "api_call": "https://api.edenai.run/v2/ocr/anonymization_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "DELETE",
            "header": []
        },
        "functionality": "Generic class to handle method GET all async job for user\n\nAttributes:\n    feature (str): EdenAI feature\n  "
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Bank Check Parsing",
        "api_call": "https://api.edenai.run/v2/ocr/bank_check_parsing",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "If your PDF file has a password, you can pass it here!",
                        "key": "file_password",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers",
                        "key": "convert_to_pdf",
                        "value": "false",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**base64**|`latest`|0.25 (per 1 page)|1 page\n|**veryfi**|`v8`|0.16 (per 1 request)|1 request\n|**mindee**|`v1`|0.1 (per 1 page)|1 page\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Custom Document Parsing Get Job Results",
        "api_call": "https://api.edenai.run/v2/ocr/custom_document_parsing_async/:public_id?response_as_dict=true&show_original_response=false",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get the status and results of an async job given its ID."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Custom Document Parsing List Job",
        "api_call": "https://api.edenai.run/v2/ocr/custom_document_parsing_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get a list of all jobs launched for this feature. You'll then be able to use the ID of each"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Custom Document Parsing Launch Job",
        "api_call": "https://api.edenai.run/v2/ocr/custom_document_parsing_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "(Required) Your queries need to be a list of dict containing the questions you want answered and the page to look for the information in :  '[{'query':'your query','pages':'your pages'},{'query':'your query','pages':'your pages'}]'",
                        "key": "queries",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result.",
                        "key": "webhook_receiver",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set.",
                        "key": "users_webhook_parameters",
                        "value": "[object Object]",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "If your PDF file has a password, you can pass it here!",
                        "key": "file_password",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers",
                        "key": "convert_to_pdf",
                        "value": "false",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 1.26.8`|15.0 (per 1000 page)|1 page\n\n\n</details>\n\n<details><summary>Supported Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**English**|`en`|\n|**French**|`fr`|\n|**German**|`de`|\n|**Italian**|`it`|\n|**Portuguese**|`pt`|\n|**Spanish**|`es`|\n\n</details>"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Custom Document Parsing delete Jobs",
        "api_call": "https://api.edenai.run/v2/ocr/custom_document_parsing_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "DELETE",
            "header": []
        },
        "functionality": "Generic class to handle method GET all async job for user\n\nAttributes:\n    feature (str): EdenAI feature\n  "
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Data Extraction",
        "api_call": "https://api.edenai.run/v2/ocr/data_extraction",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "If your PDF file has a password, you can pass it here!",
                        "key": "file_password",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers",
                        "key": "convert_to_pdf",
                        "value": "false",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 (v1.15.18)`|0.05 (per 1 page)|1 page\n|**base64**|`latest`|0.25 (per 1 page)|1 page\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Financial Parser",
        "api_call": "https://api.edenai.run/v2/ocr/financial_parser",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "If your PDF file has a password, you can pass it here!",
                        "key": "file_password",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Language code of the language the document is written in (ex: fr (French), en (English), es (Spanish))",
                        "key": "language",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Specify the type of your document. Can be Set to 'auto-detect' for automatic detection if the provider supports it. Otherwise, the default is 'invoice'.\n\n* `auto-detect` - auto-detect\n* `invoice` - invoice\n* `receipt` - receipt (This can only be one of auto-detect,invoice,receipt)",
                        "key": "document_type",
                        "value": "invoice",
                        "type": "text"
                    },
                    {
                        "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers",
                        "key": "convert_to_pdf",
                        "value": "false",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Document Type|Price|Billing unit|\n|----|-------|------|-----|------------|\n|**affinda**|`v3`|`invoice`|0.08 (per 1 page)|1 page\n|**affinda**|`v3`|`receipt`|0.07 (per 1 page)|1 page\n|**amazon**|`boto3 1.26.8`|-|0.01 (per 1 page)|1"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Identity Parser",
        "api_call": "https://api.edenai.run/v2/ocr/identity_parser",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "If your PDF file has a password, you can pass it here!",
                        "key": "file_password",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers",
                        "key": "convert_to_pdf",
                        "value": "false",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 (v1.15.18)`|0.025 (per 1 page)|1 page\n|**base64**|`latest`|0.2 (per 1 page)|1 page\n|**microsoft**|`rest API 3.0`|0.01 (per 1"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Invoice Parser",
        "api_call": "https://api.edenai.run/v2/ocr/invoice_parser",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "If your PDF file has a password, you can pass it here!",
                        "key": "file_password",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Language code of the language the document is written in (ex: fr (French), en (English), es (Spanish))",
                        "key": "language",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers",
                        "key": "convert_to_pdf",
                        "value": "false",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**affinda**|`v3`|0.08 (per 1 page)|1 page\n|**base64**|`latest`|0.25 (per 1 page)|1 page\n|**dataleon**|`v4.0.0`|0.05 (per 1 page)|1 page\n|**microsoft**|`v2.1-preview.3`|0.01 (per"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: OCR",
        "api_call": "https://api.edenai.run/v2/ocr/ocr",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "If your PDF file has a password, you can pass it here!",
                        "key": "file_password",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Language code of the language the document is written in (ex: fr (French), en (English), es (Spanish))",
                        "key": "language",
                        "value": "<string>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 (v1.15.18)`|1.5 (per 1000 page)|1 page\n|**clarifai**|`8.0.0`|2.0 (per 1000 page)|1 page\n|**google**|`v1`|1.5 (per 1000 page)|1 page\n|**microsoft**|`v3.2`|1.0"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Ocr Async Get Job Results",
        "api_call": "https://api.edenai.run/v2/ocr/ocr_async/:public_id?response_as_dict=true&show_original_response=false",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get the status and results of an async job given its ID."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Ocr Async List Job",
        "api_call": "https://api.edenai.run/v2/ocr/ocr_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get a list of all jobs launched for this feature. You'll then be able to use the ID of each"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Ocr Async Launch Job",
        "api_call": "https://api.edenai.run/v2/ocr/ocr_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result.",
                        "key": "webhook_receiver",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set.",
                        "key": "users_webhook_parameters",
                        "value": "[object Object]",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "If your PDF file has a password, you can pass it here!",
                        "key": "file_password",
                        "value": "<string>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 (v1.15.18)`|1.5 (per 1000 page)|1 page\n|**microsoft**|`rest API 3.0`|10.0 (per 1000 file)|1 file\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Ocr Async delete Jobs",
        "api_call": "https://api.edenai.run/v2/ocr/ocr_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "DELETE",
            "header": []
        },
        "functionality": "Generic class to handle method GET all async job for user\n\nAttributes:\n    feature (str): EdenAI feature\n  "
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: OCR Tables Get Job Results",
        "api_call": "https://api.edenai.run/v2/ocr/ocr_tables_async/:public_id?response_as_dict=true&show_original_response=false",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get the status and results of an async job given its ID."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: OCR Tables List Job",
        "api_call": "https://api.edenai.run/v2/ocr/ocr_tables_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get a list of all jobs launched for this feature. You'll then be able to use the ID of each"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: OCR Tables Launch Job",
        "api_call": "https://api.edenai.run/v2/ocr/ocr_tables_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result.",
                        "key": "webhook_receiver",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set.",
                        "key": "users_webhook_parameters",
                        "value": "[object Object]",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "If your PDF file has a password, you can pass it here!",
                        "key": "file_password",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Language code of the language the document is written in (ex: fr (French), en (English), es (Spanish))",
                        "key": "language",
                        "value": "<string>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 (v1.15.18)`|15.0 (per 1000 page)|1 page\n|**google**|`DocumentAI v1 beta3`|65.0 (per 1000 page)|1 page\n|**microsoft**|`rest API 3.0`|10.0"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: OCR Tables delete Jobs",
        "api_call": "https://api.edenai.run/v2/ocr/ocr_tables_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "DELETE",
            "header": []
        },
        "functionality": "Generic class to handle method GET all async job for user\n\nAttributes:\n    feature (str): EdenAI feature\n  "
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Receipt Parser",
        "api_call": "https://api.edenai.run/v2/ocr/receipt_parser",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "If your PDF file has a password, you can pass it here!",
                        "key": "file_password",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Language code of the language the document is written in (ex: fr (French), en (English), es (Spanish))",
                        "key": "language",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers",
                        "key": "convert_to_pdf",
                        "value": "false",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**base64**|`latest`|0.25 (per 1 page)|1 page\n|**dataleon**|`v4.0.0`|0.05 (per 1 page)|1 page\n|**microsoft**|`rest API 3.0`|0.01 (per 1 page)|1"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Resume Parser",
        "api_call": "https://api.edenai.run/v2/ocr/resume_parser",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "If your PDF file has a password, you can pass it here!",
                        "key": "file_password",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers",
                        "key": "convert_to_pdf",
                        "value": "false",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**affinda**|`v3`|0.07 (per 1 file)|1 file\n|**hireability**|`hireability 1.0.0`|0.05 (per 1 file)|1 file\n|**klippa**|`v1`|0.1 (per 1 file)|1 file\n|**senseloaf**|`v3`|0.045"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Launch a Workflow",
        "api_call": "https://api.edenai.run/v2/pipeline/",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) ",
                        "key": "description",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "The input text for the first feature of the pipeline",
                        "key": "text",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "List of texts for the first feature of the pipeline",
                        "key": "texts",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "The input file for the first feature of the pipeline",
                        "key": "file",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "This parameter allows user to choose to output only the final result or all the intermediate results.",
                        "key": "return_only_last",
                        "value": "true",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "\nWorkflow let you create a pipeline of subfeature by inputing an entry data, letting it pass through all the subfeatures"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: AI Content Detection",
        "api_call": "https://api.edenai.run/v2/text/ai_detection",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"text\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"language\": \"<string>\",\n  \"provider_params\": \"<string>\"\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**originalityai**|`v1`|0.01 (per 400 char)|400 char\n|**sapling**|`v1`|5.0 (per 1000000 char)|1000 char\n|**winstonai**|`v2`|14.0 (per 1000000 char)|1 char\n\n\n</details>\n\n<details><summary>Supported Detailed"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Anonymization",
        "api_call": "https://api.edenai.run/v2/text/anonymization",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"text\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"language\": \"<string>\"\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**emvista**|`v1.0`|3.0 (per 1000000 char)|1 char\n|**oneai**|`v0`|2.14 (per 1000000 char)|1 char\n|**openai**|`v3.0.0`|20.0 (per 1000000 token)|1 token\n|**amazon**|`boto3 (v1.15.18)`|1.0"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Chat Stream",
        "api_call": "https://api.edenai.run/v2/text/chat/stream",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "text/plain"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"settings\": {},\n  \"text\": \"\",\n  \"chatbot_global_action\": \"\",\n  \"previous_history\": [\n    {\n      \"Ut52f\": {}\n    },\n    {\n      \"sint_5a\": {}\n    }\n  ],\n  \"temperature\": 0,\n  \"max_tokens\": 1000,\n  \"fallback_type\": \"continue\"\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "Streamed version of Chat feature, the raw text will be streamed chunk by chunk.\n\nNOTE: For this feature, you an only"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Chat",
        "api_call": "https://api.edenai.run/v2/text/chat",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"settings\": {},\n  \"text\": \"\",\n  \"chatbot_global_action\": \"\",\n  \"previous_history\": [\n    {\n      \"deserunt26\": {}\n    },\n    {\n      \"Duis_1\": {}\n    }\n  ],\n  \"temperature\": 0,\n  \"max_tokens\": 1000\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Model|Version|Price|Billing unit|\n|----|----|-------|-----|------------|\n|**openai**|**gpt-3.5-turbo**|`v1Beta`|0.002 (per 1000 token)|1 token\n|**openai**|**gpt-3.5-turbo-1106**|`v1Beta`|0.002 (per 1000 token)|1 token\n|**openai**|-|`v1Beta`|0.002 (per 1000 token)|1 token\n|**openai**|**gpt-4**|`v1Beta`|0.06 (per"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Code Generation",
        "api_call": "https://api.edenai.run/v2/text/code_generation",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"instruction\": \"<string>\",\n  \"providers\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"prompt\": \"\",\n  \"temperature\": 0,\n  \"max_tokens\": 1000\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**openai**|`v1`|2.0 (per 1000000 token)|1 token\n|**google**|`v1`|0.5 (per 1000000 char)|1 char\n|**nlpcloud**|`v1`|25.0 (per 1000 request)|1 request\n\n\n</details>\n\n<details><summary>Supported Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Achinese**|`ace`|\n|**Afrikaans**|`af`|\n|**Akan**|`ak`|\n|**Amharic**|`am`|\n|**Arabic**|`ar`|\n|**Armenian**|`hy`|\n|**Assamese**|`as`|\n|**Asturian**|`ast`|\n|**Awadhi**|`awa`|\n|**Ayacucho"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Custom Text Classification",
        "api_call": "https://api.edenai.run/v2/text/custom_classification",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"examples\": [\n    [\n      \"<string>\",\n      \"<string>\"\n    ],\n    [\n      \"<string>\",\n      \"<string>\"\n    ]\n  ],\n  \"labels\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"providers\": \"<string>\",\n  \"texts\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**cohere**|`2022-12-06`|2.0 (per 1000 request)|1 request\n|**openai**|`v3.0.0`|20.0 (per 1000000 token)|1 token\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Custom Named Entity Recognition",
        "api_call": "https://api.edenai.run/v2/text/custom_named_entity_recognition",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"entities\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"providers\": \"<string>\",\n  \"text\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"examples\": [\n    {\n      \"do4\": {},\n      \"laborum__\": {}\n    },\n    {\n      \"aliqua_297\": {},\n      \"ut_7fc\": {},\n      \"eiusmod9ad\": {}\n    }\n  ]\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**openai**|`v3.0.0`|20.0 (per 1000000 token)|1 token\n|**cohere**|`2022-12-06`|2.0 (per 1000000 token)|1 token\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Embeddings",
        "api_call": "https://api.edenai.run/v2/text/embeddings",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"texts\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"settings\": {}\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Model|Version|Price|Billing unit|\n|----|----|-------|-----|------------|\n|**openai**|-|`v3.0.0`|20.0 (per 1000000 token)|1 token\n|**google**|-|`v1`|0.1 (per 1000000 char)|1 char\n|**cohere**|-|`v1`|0.1 (per 1000000 char)|1 char\n|**cohere**|**4096embed-english-v2.0**|`v1`|0.1 (per"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Emotion Detection",
        "api_call": "https://api.edenai.run/v2/text/emotion_detection",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"text\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**nlpcloud**|`v1`|25.0 (per 1000 request)|1 request\n|**vernai**|`v1`|2.0 (per 1000 request)|1 request\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Entity Sentiment",
        "api_call": "https://api.edenai.run/v2/text/entity_sentiment",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"text\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"language\": \"<string>\"\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 1.26.8`|1.0 (per 1000000 char)|300 char\n|**google**|`v1`|2.0 (per 1000000 char)|1000 char\n\n\n</details>\n\n<details><summary>Supported Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**English**|`en`|\n|**Japanese**|`ja`|\n|**Spanish**|`es`|\n\n</details>"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Generation",
        "api_call": "https://api.edenai.run/v2/text/generation",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"text\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"settings\": {},\n  \"temperature\": 0,\n  \"max_tokens\": 1000\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Model|Version|Price|Billing unit|\n|----|----|-------|-----|------------|\n|**cohere**|**command**|`2022-12-06`|2.0 (per 1000000 token)|1 token\n|**cohere**|**command-light**|`2022-12-06`|0.6 (per 1000000 token)|1 token\n|**cohere**|**command-light-nightly**|`2022-12-06`|0.6 (per 1000000 token)|1 token\n|**cohere**|**command-nightly**|`2022-12-06`|2.0 (per"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Keyword Extraction",
        "api_call": "https://api.edenai.run/v2/text/keyword_extraction",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"text\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"language\": \"<string>\"\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 (v1.15.18)`|1.0 (per 1000000 char)|300 char\n|**ibm**|`v1 (2021-08-01)`|0.3 (per 1000000 char)|10000 char\n|**microsoft**|`v3.1`|1.0 (per 1000000 char)|1000"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Moderation",
        "api_call": "https://api.edenai.run/v2/text/moderation",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"text\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"language\": \"<string>\"\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**microsoft**|`v1.0`|1.0 (per 1000 request)|1 request\n|**openai**|`v3.0.0`|free|-\n|**clarifai**|`8.0.0`|1.2 (per 1000 request)|1 request\n|**google**|`v1`|5.0 (per 1000000 char)|100 char\n\n\n</details>\n\n<details><summary>Supported Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Afrikaans**|`af`|\n|**Albanian**|`sq`|\n|**Amharic**|`am`|\n|**Arabic**|`ar`|\n|**Aragonese**|`an`|\n|**Armenian**|`hy`|\n|**Assamese**|`as`|\n|**Asturian**|`ast`|\n|**Azerbaijani**|`az`|\n|**Bashkir**|`ba`|\n|**Basque**|`eu`|\n|**Bavarian**|`bar`|\n|**Belarusian**|`be`|\n|**Bengali**|`bn`|\n|**Bishnupriya**|`bpy`|\n|**Bosnian**|`bs`|\n|**Breton**|`br`|\n|**Bulgarian**|`bg`|\n|**Burmese**|`my`|\n|**Catalan**|`ca`|\n|**Cebuano**|`ceb`|\n|**Central"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Named Entity Recognition",
        "api_call": "https://api.edenai.run/v2/text/named_entity_recognition",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"text\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"language\": \"<string>\"\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 (v1.15.18)`|1.0 (per 1000000 char)|300 char\n|**google**|`v1`|1.0 (per 1000000 char)|1000 char\n|**ibm**|`v1 (2021-08-01)`|0.3 (per 1000000 char)|10000"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Plagia Detection",
        "api_call": "https://api.edenai.run/v2/text/plagia_detection",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"text\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"title\": \"\"\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**originalityai**|`v1`|0.01 (per 400 char)|400 char\n|**winstonai**|`v2`|14.0 (per 1000000 char)|1 char\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Prompt Optimization",
        "api_call": "https://api.edenai.run/v2/text/prompt_optimization",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"target_provider\": \"openai\",\n  \"text\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**openai**|`v3.0.0`|0.08 (per 1 request)|1 request\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Question Answer",
        "api_call": "https://api.edenai.run/v2/text/question_answer",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"examples\": [\n    [\n      \"<string>\",\n      \"<string>\"\n    ],\n    [\n      \"<string>\",\n      \"<string>\"\n    ]\n  ],\n  \"examples_context\": \"<string>\",\n  \"providers\": \"<string>\",\n  \"question\": \"<string>\",\n  \"texts\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"temperature\": 0\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**huggingface**|`v1`|0.02 (per 1000 char)|1 char\n|**openai**|`v3.0.0`|20.0 (per 1000000 token)|1 token\n|**tenstorrent**|`v1.0.0`|10.0 (per 1000000 char)|1000 char\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Search",
        "api_call": "https://api.edenai.run/v2/text/search",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"query\": \"<string>\",\n  \"texts\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"similarity_metric\": \"cosine\"\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**openai**|`v3.0.0`|20.0 (per 1000000 token)|1 token\n|**cohere**|`v1`|0.1 (per 1000000 char)|1 char\n|**google**|`v1`|0.1 (per 1000000 char)|1 char\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Sentiment Analysis",
        "api_call": "https://api.edenai.run/v2/text/sentiment_analysis",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"text\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"language\": \"<string>\"\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 (v1.15.18)`|1.0 (per 1000000 char)|300 char\n|**connexun**|`v1.0`|2.0 (per 1000 request)|1 request\n|**google**|`v1`|1.0 (per 1000000 char)|1000 char\n|**ibm**|`v1"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Spell Check",
        "api_call": "https://api.edenai.run/v2/text/spell_check",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"text\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"language\": \"<string>\"\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**microsoft**|`v7`|0.3 (per 1000 request)|1 request\n|**openai**|`v3.0.0`|20.0 (per 1000000 token)|1 token\n|**prowritingaid**|`v2`|10.0 (per 1000 request)|1 request\n|**cohere**|`2022-12-06`|2.0 (per"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Summarize",
        "api_call": "https://api.edenai.run/v2/text/summarize",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"text\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"language\": \"<string>\",\n  \"settings\": {},\n  \"output_sentences\": 1\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Model|Version|Price|Billing unit|\n|----|----|-------|-----|------------|\n|**connexun**|-|`v1.0`|2.0 (per 1000 request)|1 request\n|**microsoft**|-|`v3.1`|2.0 (per 1000000 char)|1000 char\n|**openai**|-|`v3.0.0`|20.0 (per 1000000 token)|1 token\n|**openai**|**text-ada-001**|`v3.0.0`|0.4 (per"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Syntax Analysis",
        "api_call": "https://api.edenai.run/v2/text/syntax_analysis",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"text\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"language\": \"<string>\"\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 (v1.15.18)`|0.5 (per 1000000 char)|300 char\n|**google**|`v1`|0.5 (per 1000000 char)|1000 char\n|**ibm**|`v1 (2021-08-01)`|0.3 (per 1000000 char)|10000"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Topic Extraction",
        "api_call": "https://api.edenai.run/v2/text/topic_extraction",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"text\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"language\": \"<string>\"\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**google**|`v1`|2.0 (per 1000000 char)|1000 char\n|**ibm**|`v1 (2021-08-01)`|0.3 (per 1000000 char)|10000 char\n|**openai**|`v1`|20.0 (per 1000000 token)|1 token\n|**tenstorrent**|`v1.0.0`|2.0"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Automatic Translation",
        "api_call": "https://api.edenai.run/v2/translation/automatic_translation",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"target_language\": \"<string>\",\n  \"text\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false,\n  \"source_language\": \"<string>\"\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 (v1.15.18)`|15.0 (per 1000000 char)|1 char\n|**google**|`v3`|20.0 (per 1000000 char)|1 char\n|**ibm**|`v3 (2018-05-01)`|20.0 (per 1000000 char)|1000"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Document Translation",
        "api_call": "https://api.edenai.run/v2/translation/document_translation",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "(Required) Target language code (ex: en, fr)",
                        "key": "target_language",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  ",
                        "key": "response_as_dict",
                        "value": "true",
                        "type": "text"
                    },
                    {
                        "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` ",
                        "key": "attributes_as_list",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "If your PDF file has a password, you can pass it here!",
                        "key": "file_password",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Source language code (ex: en, fr)",
                        "key": "source_language",
                        "value": "<string>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**deepl**|`v2`|2.0 (per 20 page)|20 page\n|**google**|`v3`|0.08 (per 1 page)|1 page\n\n\n</details>\n\n<details><summary>Supported Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Afrikaans**|`af`|\n|**Albanian**|`sq`|\n|**Amharic**|`am`|\n|**Arabic**|`ar`|\n|**Armenian**|`hy`|\n|**Azerbaijani**|`az`|\n|**Basque**|`eu`|\n|**Belarusian**|`be`|\n|**Bengali**|`bn`|\n|**Bosnian**|`bs`|\n|**Bulgarian**|`bg`|\n|**Burmese**|`my`|\n|**Catalan**|`ca`|\n|**Cebuano**|`ceb`|\n|**Central Khmer**|`km`|\n|**Chinese**|`zh`|\n|**Corsican**|`co`|\n|**Croatian**|`hr`|\n|**Czech**|`cs`|\n|**Danish**|`da`|\n|**Dutch**|`nl`|\n|**English**|`en`|\n|**Esperanto**|`eo`|\n|**Estonian**|`et`|\n|**Finnish**|`fi`|\n|**French**|`fr`|\n|**Galician**|`gl`|\n|**Georgian**|`ka`|\n|**German**|`de`|\n|**Gujarati**|`gu`|\n|**Haitian**|`ht`|\n|**Hausa**|`ha`|\n|**Hawaiian**|`haw`|\n|**Hebrew**|`he`|\n|**Hindi**|`hi`|\n|**Hmong**|`hmn`|\n|**Hungarian**|`hu`|\n|**Icelandic**|`is`|\n|**Igbo**|`ig`|\n|**Indonesian**|`id`|\n|**Irish**|`ga`|\n|**Italian**|`it`|\n|**Japanese**|`ja`|\n|**Javanese**|`jv`|\n|**Kannada**|`kn`|\n|**Kazakh**|`kk`|\n|**Kinyarwanda**|`rw`|\n|**Kirghiz**|`ky`|\n|**Korean**|`ko`|\n|**Kurdish**|`ku`|\n|**Lao**|`lo`|\n|**Latin**|`la`|\n|**Latvian**|`lv`|\n|**Lithuanian**|`lt`|\n|**Luxembourgish**|`lb`|\n|**Macedonian**|`mk`|\n|**Malagasy**|`mg`|\n|**Malay (macrolanguage)**|`ms`|\n|**Malayalam**|`ml`|\n|**Maltese**|`mt`|\n|**Maori**|`mi`|\n|**Marathi**|`mr`|\n|**Modern Greek (1453-)**|`el`|\n|**Mongolian**|`mn`|\n|**Nepali"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Language Detection",
        "api_call": "https://api.edenai.run/v2/translation/language_detection",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n  \"providers\": \"<string>\",\n  \"text\": \"<string>\",\n  \"fallback_providers\": \"<string>\",\n  \"response_as_dict\": true,\n  \"attributes_as_list\": false,\n  \"show_original_response\": false\n}",
                "options": {
                    "raw": {
                        "headerFamily": "json",
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 (v1.15.18)`|1.0 (per 1000000 char)|300 char\n|**google**|`v1`|20.0 (per 1000000 char)|1 char\n|**ibm**|`v1 (2021-08-01)`|20.0 (per 1000000 char)|1000"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Video Explicit Content Detection Get Job Results",
        "api_call": "https://api.edenai.run/v2/video/explicit_content_detection_async/:public_id?response_as_dict=true&show_original_response=false",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get the status and results of an async job given its ID."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Video Explicit Content Detection List Jobs",
        "api_call": "https://api.edenai.run/v2/video/explicit_content_detection_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get a list of all jobs launched for this feature. You'll then be able to use the ID of each"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Video Explicit Content Detection Launch Job",
        "api_call": "https://api.edenai.run/v2/video/explicit_content_detection_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result.",
                        "key": "webhook_receiver",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set.",
                        "key": "users_webhook_parameters",
                        "value": "[object Object]",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "mp4",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3`|0.1 (per 60 seconde)|60 seconde\n|**google**|`Video intelligence v1`|0.1 (per 60 seconde)|1 seconde\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Video Explicit Content delete Jobs",
        "api_call": "https://api.edenai.run/v2/video/explicit_content_detection_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "DELETE",
            "header": []
        },
        "functionality": "Generic class to handle method GET all async job for user\n\nAttributes:\n    feature (str): EdenAI feature\n  "
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Face Detection Get Job Results",
        "api_call": "https://api.edenai.run/v2/video/face_detection_async/:public_id?response_as_dict=true&show_original_response=false",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get the status and results of an async job given its ID."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Face Detection List Jobs",
        "api_call": "https://api.edenai.run/v2/video/face_detection_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get a list of all jobs launched for this feature. You'll then be able to use the ID of each"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Face Detection Launch Job",
        "api_call": "https://api.edenai.run/v2/video/face_detection_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result.",
                        "key": "webhook_receiver",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set.",
                        "key": "users_webhook_parameters",
                        "value": "[object Object]",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "avi",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3`|0.1 (per 60 seconde)|60 seconde\n|**google**|`Video intelligence v1`|0.1 (per 60 seconde)|1 seconde\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Face Detection delete Jobs",
        "api_call": "https://api.edenai.run/v2/video/face_detection_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "DELETE",
            "header": []
        },
        "functionality": "Generic class to handle method GET all async job for user\n\nAttributes:\n    feature (str): EdenAI feature\n  "
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Label Detection Get Job Results",
        "api_call": "https://api.edenai.run/v2/video/label_detection_async/:public_id?response_as_dict=true&show_original_response=false",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get the status and results of an async job given its ID."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Label Detection List Jobs",
        "api_call": "https://api.edenai.run/v2/video/label_detection_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get a list of all jobs launched for this feature. You'll then be able to use the ID of each"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Label Detection Launch Job",
        "api_call": "https://api.edenai.run/v2/video/label_detection_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result.",
                        "key": "webhook_receiver",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set.",
                        "key": "users_webhook_parameters",
                        "value": "[object Object]",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "avi",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3`|0.1 (per 60 seconde)|60 seconde\n|**google**|`Video intelligence v1`|0.1 (per 60 seconde)|1 seconde\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Label Detection delete Jobs",
        "api_call": "https://api.edenai.run/v2/video/label_detection_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "DELETE",
            "header": []
        },
        "functionality": "Generic class to handle method GET all async job for user\n\nAttributes:\n    feature (str): EdenAI feature\n  "
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Video Logo Detection Get Job Results",
        "api_call": "https://api.edenai.run/v2/video/logo_detection_async/:public_id?response_as_dict=true&show_original_response=false",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get the status and results of an async job given its ID."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Video Logo Detection List Jobs",
        "api_call": "https://api.edenai.run/v2/video/logo_detection_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get a list of all jobs launched for this feature. You'll then be able to use the ID of each"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Video Logo Detection Launch Job",
        "api_call": "https://api.edenai.run/v2/video/logo_detection_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result.",
                        "key": "webhook_receiver",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set.",
                        "key": "users_webhook_parameters",
                        "value": "[object Object]",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "avi",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**google**|`Video intelligence v1`|0.15 (per 60 seconde)|1 seconde\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Video Logo Detection delete Jobs",
        "api_call": "https://api.edenai.run/v2/video/logo_detection_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "DELETE",
            "header": []
        },
        "functionality": "Generic class to handle method GET all async job for user\n\nAttributes:\n    feature (str): EdenAI feature\n  "
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Video Object Tracking Get Job Results",
        "api_call": "https://api.edenai.run/v2/video/object_tracking_async/:public_id?response_as_dict=true&show_original_response=false",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get the status and results of an async job given its ID."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Video Object Tracking List Jobs",
        "api_call": "https://api.edenai.run/v2/video/object_tracking_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get a list of all jobs launched for this feature. You'll then be able to use the ID of each"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Video Object Tracking Launch Job",
        "api_call": "https://api.edenai.run/v2/video/object_tracking_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result.",
                        "key": "webhook_receiver",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set.",
                        "key": "users_webhook_parameters",
                        "value": "[object Object]",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "avi",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**google**|`Video intelligence v1`|0.15 (per 60 seconde)|1 seconde\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Video Object Tracking delete Jobs",
        "api_call": "https://api.edenai.run/v2/video/object_tracking_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "DELETE",
            "header": []
        },
        "functionality": "Generic class to handle method GET all async job for user\n\nAttributes:\n    feature (str): EdenAI feature\n  "
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Person Tracking Get Job Results",
        "api_call": "https://api.edenai.run/v2/video/person_tracking_async/:public_id?response_as_dict=true&show_original_response=false",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get the status and results of an async job given its ID."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Person Tracking List Jobs",
        "api_call": "https://api.edenai.run/v2/video/person_tracking_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get a list of all jobs launched for this feature. You'll then be able to use the ID of each"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Person Tracking Launch Job",
        "api_call": "https://api.edenai.run/v2/video/person_tracking_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result.",
                        "key": "webhook_receiver",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set.",
                        "key": "users_webhook_parameters",
                        "value": "[object Object]",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "avi",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3`|0.1 (per 60 seconde)|60 seconde\n|**google**|`Video intelligence v1`|0.1 (per 60 seconde)|1 seconde\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Person Tracking delete Jobs",
        "api_call": "https://api.edenai.run/v2/video/person_tracking_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "DELETE",
            "header": []
        },
        "functionality": "Generic class to handle method GET all async job for user\n\nAttributes:\n    feature (str): EdenAI feature\n  "
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Text Detection Get Job Results",
        "api_call": "https://api.edenai.run/v2/video/text_detection_async/:public_id?response_as_dict=true&show_original_response=false",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get the status and results of an async job given its ID."
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Text Detection List Jobs",
        "api_call": "https://api.edenai.run/v2/video/text_detection_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "GET",
            "header": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "functionality": "Get a list of all jobs launched for this feature. You'll then be able to use the ID of each"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Text Detection Launch Job",
        "api_call": "https://api.edenai.run/v2/video/text_detection_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ],
            "body": {
                "mode": "formdata",
                "formdata": [
                    {
                        "description": "(Required) It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.",
                        "key": "providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ",
                        "key": "fallback_providers",
                        "value": "<string>",
                        "type": "text"
                    },
                    {
                        "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object.",
                        "key": "show_original_response",
                        "value": "false",
                        "type": "text"
                    },
                    {
                        "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result.",
                        "key": "webhook_receiver",
                        "value": "<uri>",
                        "type": "text"
                    },
                    {
                        "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set.",
                        "key": "users_webhook_parameters",
                        "value": "[object Object]",
                        "type": "text"
                    },
                    {
                        "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
                        "key": "file",
                        "value": "avi",
                        "type": "text"
                    },
                    {
                        "description": "File **URL** to analyse to be used with with *content-type*: **application/json**.",
                        "key": "file_url",
                        "value": "<uri>",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3`|0.1 (per 60 seconde)|60 seconde\n|**google**|`Video intelligence v1`|0.15 (per 60 seconde)|1 seconde\n\n\n</details>\n\n"
    },
    {
        "user_name": "opatothan",
        "api_name": "Eden AI: Text Detection delete Jobs",
        "api_call": "https://api.edenai.run/v2/video/text_detection_async",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{bearerToken}}",
                        "type": "string"
                    }
                ]
            },
            "method": "DELETE",
            "header": []
        },
        "functionality": "Generic class to handle method GET all async job for user\n\nAttributes:\n    feature (str): EdenAI feature\n  "
    }
]