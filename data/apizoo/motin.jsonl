{"user_name":"motin","api_name":"1forge.com","api_call":"GET \/quotes","api_version":"0.0.1","meta_data":{"server":{"url":"https:\/\/1forge.com\/forex-quotes"},"path":"\/quotes","method":"GET","info":{"contact":{"email":"contact@1forge.com","name":"1Forge","url":"http:\/\/1forge.com"},"description":"Stock and Forex Data and Realtime Quotes","title":"1Forge Finance APIs","version":"0.0.1","x-apisguru-categories":["financial"],"x-logo":{"backgroundColor":"#24292e","url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_1forge.com_assets_images_f-blue.svg"},"x-origin":[{"format":"swagger","url":"http:\/\/1forge.com\/openapi.json","version":"2.0"}],"x-providerName":"1forge.com"}},"api_arguments":{},"functionality":"Fetches quotes for all symbols","example_code":"curl -X GET 'https:\/\/1forge.com\/forex-quotes\/quotes'","questions":["As a forex trader, I need to get quotes for all symbols. How can I do this?","I am a financial analyst and I need to fetch quotes for all symbols. What is the best way to do this?"]}
{"user_name":"motin","api_name":"1forge.com","api_call":"GET \/symbols","api_version":"0.0.1","meta_data":{"server":{"url":"https:\/\/1forge.com\/forex-quotes"},"path":"\/symbols","method":"GET","info":{"contact":{"email":"contact@1forge.com","name":"1Forge","url":"http:\/\/1forge.com"},"description":"Stock and Forex Data and Realtime Quotes","title":"1Forge Finance APIs","version":"0.0.1","x-apisguru-categories":["financial"],"x-logo":{"backgroundColor":"#24292e","url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_1forge.com_assets_images_f-blue.svg"},"x-origin":[{"format":"swagger","url":"http:\/\/1forge.com\/openapi.json","version":"2.0"}],"x-providerName":"1forge.com"}},"api_arguments":{},"functionality":"Retrieves a list of symbols for which real-time quotes are provided.","example_code":"curl -X GET 'https:\/\/1forge.com\/forex-quotes\/symbols'","questions":["I am a forex trader and I need to know the symbols for which real-time quotes are provided. How can I get this information?","As a financial software developer, I need to integrate a list of symbols for which real-time quotes are available. How can I obtain this list?"]}
{"user_name":"motin","api_name":"1password.com","api_call":"GET \/api\/auth\/introspect","api_version":"1.0.0","meta_data":{"server":{"description":"1Password","url":"https:\/\/events.1password.com"},"path":"\/api\/auth\/introspect","method":"GET","info":{"description":"1Password Events API Specification.","title":"Events API","version":"1.0.0","x-apisguru-categories":["security"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_upload.wikimedia.org_wikipedia_commons_thumb_e_e3_1password-logo.svg_1280px-1password-logo.svg.png"},"x-origin":[{"format":"openapi","url":"https:\/\/i.1password.com\/media\/1password-events-reporting\/1password-events-api.yaml","version":"3.0"}],"x-providerName":"1password.com","x-serviceName":"events"}},"api_arguments":{"Authorization":"Bearer {JWT_TOKEN}"},"functionality":"Performs introspection of the provided Bearer JWT token","example_code":"curl -X GET 'https:\/\/events.1password.com\/api\/auth\/introspect' -H 'Authorization: Bearer {JWT_TOKEN}'","questions":["I have a JWT token and I need to introspect it. How can I do this?","As a developer, I need to verify the authenticity of a JWT token. What API can I use for this?"]}
{"user_name":"motin","api_name":"1password.com","api_call":"POST \/api\/v1\/itemusages","api_version":"1.0.0","meta_data":{"server":{"description":"1Password","url":"https:\/\/events.1password.com"},"path":"\/api\/v1\/itemusages","method":"POST","info":{"description":"1Password Events API Specification.","title":"Events API","version":"1.0.0","x-apisguru-categories":["security"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_upload.wikimedia.org_wikipedia_commons_thumb_e_e3_1password-logo.svg_1280px-1password-logo.svg.png"},"x-origin":[{"format":"openapi","url":"https:\/\/i.1password.com\/media\/1password-events-reporting\/1password-events-api.yaml","version":"3.0"}],"x-providerName":"1password.com","x-serviceName":"events"}},"api_arguments":{"JSON Web Token":"Your JSON Web Token"},"functionality":"Retrieves item usages requiring a JSON Web Token with the itemusages feature.","example_code":"curl -X POST 'https:\/\/events.1password.com\/api\/v1\/itemusages' -H 'Authorization: Bearer Your JSON Web Token'","questions":["As a system administrator, I need to track the usage of different items in our system. How can I do this?","I am a security analyst and I need to monitor item usage for auditing purposes. What API can I use for this?"]}
{"user_name":"motin","api_name":"1password.com","api_call":"POST \/api\/v1\/signinattempts","api_version":"1.0.0","meta_data":{"server":{"description":"1Password","url":"https:\/\/events.1password.com"},"path":"\/api\/v1\/signinattempts","method":"POST","info":{"description":"1Password Events API Specification.","title":"Events API","version":"1.0.0","x-apisguru-categories":["security"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_upload.wikimedia.org_wikipedia_commons_thumb_e_e3_1password-logo.svg_1280px-1password-logo.svg.png"},"x-origin":[{"format":"openapi","url":"https:\/\/i.1password.com\/media\/1password-events-reporting\/1password-events-api.yaml","version":"3.0"}],"x-providerName":"1password.com","x-serviceName":"events"}},"api_arguments":{"JSON Web Token":"Your JSON Web Token"},"functionality":"Retrieves sign-in attempts using a JSON Web Token with the signinattempts feature.","example_code":"curl -X POST 'https:\/\/events.1password.com\/api\/v1\/signinattempts' -H 'Authorization: Bearer Your JSON Web Token'","questions":["As a security officer, I need to monitor sign-in attempts to our system. How can I do this?","I am a system administrator and I need to track all sign-in attempts for audit purposes. What should I do?"]}
{"user_name":"motin","api_name":"1password.local","api_call":"GET \/activity","api_version":"1.5.7","meta_data":{"server":{"url":"http:\/\/1password.local"},"path":"\/activity","method":"GET","info":{"contact":{"email":"support@1password.com","name":"1Password Integrations","url":"https:\/\/support.1password.com\/"},"description":"REST API interface for 1Password Connect.","title":"1Password Connect","version":"1.5.7","x-apisguru-categories":["security"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_upload.wikimedia.org_wikipedia_commons_thumb_e_e3_1password-logo.svg_1280px-1password-logo.svg.png"},"x-origin":[{"format":"openapi","url":"https:\/\/i.1password.com\/media\/1password-connect\/1password-connect-api.yaml","version":"3.0"}],"x-providerName":"1password.local","x-serviceName":"connect"}},"api_arguments":{},"functionality":"Retrieves a list of API requests that have been made.","example_code":"curl -X GET 'http:\/\/1password.local\/activity'","questions":["As a system administrator, I want to monitor all API requests made to our system. How can I do this?","I need to audit all API requests for security purposes. Is there a way to retrieve this information?"]}
{"user_name":"motin","api_name":"1password.local","api_call":"GET \/health","api_version":"1.5.7","meta_data":{"server":{"url":"http:\/\/1password.local"},"path":"\/health","method":"GET","info":{"contact":{"email":"support@1password.com","name":"1Password Integrations","url":"https:\/\/support.1password.com\/"},"description":"REST API interface for 1Password Connect.","title":"1Password Connect","version":"1.5.7","x-apisguru-categories":["security"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_upload.wikimedia.org_wikipedia_commons_thumb_e_e3_1password-logo.svg_1280px-1password-logo.svg.png"},"x-origin":[{"format":"openapi","url":"https:\/\/i.1password.com\/media\/1password-connect\/1password-connect-api.yaml","version":"3.0"}],"x-providerName":"1password.local","x-serviceName":"connect"}},"api_arguments":{},"functionality":"Gets the state of the server and its dependencies.","example_code":"curl -X GET 'http:\/\/1password.local\/health'","questions":["As a system administrator, I need to check the state of the server and its dependencies. How can I do this?","I am a developer and I need to verify the server's version and its dependencies. What should I do?"]}
{"user_name":"motin","api_name":"1password.local","api_call":"GET \/heartbeat","api_version":"1.5.7","meta_data":{"server":{"url":"http:\/\/1password.local"},"path":"\/heartbeat","method":"GET","info":{"contact":{"email":"support@1password.com","name":"1Password Integrations","url":"https:\/\/support.1password.com\/"},"description":"REST API interface for 1Password Connect.","title":"1Password Connect","version":"1.5.7","x-apisguru-categories":["security"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_upload.wikimedia.org_wikipedia_commons_thumb_e_e3_1password-logo.svg_1280px-1password-logo.svg.png"},"x-origin":[{"format":"openapi","url":"https:\/\/i.1password.com\/media\/1password-connect\/1password-connect-api.yaml","version":"3.0"}],"x-providerName":"1password.local","x-serviceName":"connect"}},"api_arguments":{},"functionality":"Pings the server for liveness.","example_code":"curl -X GET 'http:\/\/1password.local\/heartbeat'","questions":["I am a system administrator and I need to check if the server is live. How can I do this?","As a developer, I want to ensure that the server is responding. What API endpoint can I use to check this?"]}
{"user_name":"motin","api_name":"1password.local","api_call":"GET \/metrics","api_version":"1.5.7","meta_data":{"server":{"url":"http:\/\/1password.local"},"path":"\/metrics","method":"GET","info":{"contact":{"email":"support@1password.com","name":"1Password Integrations","url":"https:\/\/support.1password.com\/"},"description":"REST API interface for 1Password Connect.","title":"1Password Connect","version":"1.5.7","x-apisguru-categories":["security"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_upload.wikimedia.org_wikipedia_commons_thumb_e_e3_1password-logo.svg_1280px-1password-logo.svg.png"},"x-origin":[{"format":"openapi","url":"https:\/\/i.1password.com\/media\/1password-connect\/1password-connect-api.yaml","version":"3.0"}],"x-providerName":"1password.local","x-serviceName":"connect"}},"api_arguments":{},"functionality":"Queries server for exposed Prometheus metrics.","example_code":"curl -X GET 'http:\/\/1password.local\/metrics'","questions":["As a system administrator, I need to monitor the performance of my server. How can I get the Prometheus metrics?","I am a DevOps engineer and I need to analyze the server metrics for optimization. How can I retrieve these metrics?"]}
{"user_name":"motin","api_name":"1password.local","api_call":"GET \/vaults","api_version":"1.5.7","meta_data":{"server":{"url":"http:\/\/1password.local"},"path":"\/vaults","method":"GET","info":{"contact":{"email":"support@1password.com","name":"1Password Integrations","url":"https:\/\/support.1password.com\/"},"description":"REST API interface for 1Password Connect.","title":"1Password Connect","version":"1.5.7","x-apisguru-categories":["security"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_upload.wikimedia.org_wikipedia_commons_thumb_e_e3_1password-logo.svg_1280px-1password-logo.svg.png"},"x-origin":[{"format":"openapi","url":"https:\/\/i.1password.com\/media\/1password-connect\/1password-connect-api.yaml","version":"3.0"}],"x-providerName":"1password.local","x-serviceName":"connect"}},"api_arguments":{},"functionality":"Fetches all vaults from 1Password Connect.","example_code":"curl -X GET 'http:\/\/1password.local\/vaults'","questions":["As a system administrator, I need to retrieve all vaults from our 1Password Connect service. How can I do this?","I am developing a tool to manage our 1Password Connect vaults. Is there a way to fetch all vaults?"]}
{"user_name":"motin","api_name":"1password.local","api_call":"GET \/vaults\/{vaultUuid}","api_version":"1.5.7","meta_data":{"server":{"url":"http:\/\/1password.local"},"path":"\/vaults\/{vaultUuid}","method":"GET","info":{"contact":{"email":"support@1password.com","name":"1Password Integrations","url":"https:\/\/support.1password.com\/"},"description":"REST API interface for 1Password Connect.","title":"1Password Connect","version":"1.5.7","x-apisguru-categories":["security"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_upload.wikimedia.org_wikipedia_commons_thumb_e_e3_1password-logo.svg_1280px-1password-logo.svg.png"},"x-origin":[{"format":"openapi","url":"https:\/\/i.1password.com\/media\/1password-connect\/1password-connect-api.yaml","version":"3.0"}],"x-providerName":"1password.local","x-serviceName":"connect"}},"api_arguments":{"vaultUuid":"exampleUuid"},"functionality":"Fetches details and metadata of a specific vault using its UUID.","example_code":"curl -X GET 'http:\/\/1password.local\/vaults\/{vaultUuid}'","questions":["As a system administrator, I need to retrieve the details and metadata of a specific vault in our system. How can I do this?","I am a developer and I need to fetch the details of a specific vault in 1Password. What API endpoint should I use?"]}
{"user_name":"motin","api_name":"1password.local","api_call":"GET \/vaults\/{vaultUuid}\/items","api_version":"1.5.7","meta_data":{"server":{"url":"http:\/\/1password.local"},"path":"\/vaults\/{vaultUuid}\/items","method":"GET","info":{"contact":{"email":"support@1password.com","name":"1Password Integrations","url":"https:\/\/support.1password.com\/"},"description":"REST API interface for 1Password Connect.","title":"1Password Connect","version":"1.5.7","x-apisguru-categories":["security"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_upload.wikimedia.org_wikipedia_commons_thumb_e_e3_1password-logo.svg_1280px-1password-logo.svg.png"},"x-origin":[{"format":"openapi","url":"https:\/\/i.1password.com\/media\/1password-connect\/1password-connect-api.yaml","version":"3.0"}],"x-providerName":"1password.local","x-serviceName":"connect"}},"api_arguments":{"vaultUuid":"The UUID of the Vault to fetch Items from"},"functionality":"Fetches all items from a specified vault.","example_code":"curl -X GET 'http:\/\/1password.local\/vaults\/{vaultUuid}\/items'","questions":["As a system administrator, I need to retrieve all items from a specific vault. How can I do this?","I am a developer and I need to fetch all items from a vault for a specific user. What API endpoint should I use?"]}
{"user_name":"motin","api_name":"1password.local","api_call":"POST \/vaults\/{vaultUuid}\/items","api_version":"1.5.7","meta_data":{"server":{"url":"http:\/\/1password.local"},"path":"\/vaults\/{vaultUuid}\/items","method":"POST","info":{"contact":{"email":"support@1password.com","name":"1Password Integrations","url":"https:\/\/support.1password.com\/"},"description":"REST API interface for 1Password Connect.","title":"1Password Connect","version":"1.5.7","x-apisguru-categories":["security"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_upload.wikimedia.org_wikipedia_commons_thumb_e_e3_1password-logo.svg_1280px-1password-logo.svg.png"},"x-origin":[{"format":"openapi","url":"https:\/\/i.1password.com\/media\/1password-connect\/1password-connect-api.yaml","version":"3.0"}],"x-providerName":"1password.local","x-serviceName":"connect"}},"api_arguments":{"vaultUuid":"The UUID of the Vault to create an Item in"},"functionality":"Creates a new item in a specified vault.","example_code":"curl -X POST 'http:\/\/1password.local\/vaults\/{vaultUuid}\/items' -H 'Content-Type: application\/json' -d '{\"fields\": [{\"$ref\":\"#\/components\/schemas\/Field\"}], \"files\": [{\"$ref\":\"#\/components\/schemas\/File\"}], \"sections\": [{\"id\": \"string\", \"label\": \"string\"}]}'","questions":["I am a security manager and I need to create a new item in a specific vault. How can I do this?","As a system administrator, I need to add a new item to a vault. Is there an API that can help me with this?"]}
{"user_name":"motin","api_name":"1password.local","api_call":"DELETE \/vaults\/{vaultUuid}\/items\/{itemUuid}","api_version":"1.5.7","meta_data":{"server":{"url":"http:\/\/1password.local"},"path":"\/vaults\/{vaultUuid}\/items\/{itemUuid}","method":"DELETE","info":{"contact":{"email":"support@1password.com","name":"1Password Integrations","url":"https:\/\/support.1password.com\/"},"description":"REST API interface for 1Password Connect.","title":"1Password Connect","version":"1.5.7","x-apisguru-categories":["security"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_upload.wikimedia.org_wikipedia_commons_thumb_e_e3_1password-logo.svg_1280px-1password-logo.svg.png"},"x-origin":[{"format":"openapi","url":"https:\/\/i.1password.com\/media\/1password-connect\/1password-connect-api.yaml","version":"3.0"}],"x-providerName":"1password.local","x-serviceName":"connect"}},"api_arguments":{"vaultUuid":"The UUID of the Vault the item is in","itemUuid":"The UUID of the Item to delete"},"functionality":"Deletes an item from a specified vault.","example_code":"curl -X DELETE 'http:\/\/1password.local\/vaults\/{vaultUuid}\/items\/{itemUuid}'","questions":["I have an item in a vault that I no longer need. How can I remove it?","As an administrator, I need to delete a specific item from a vault. How can I do this?"]}
{"user_name":"motin","api_name":"1password.local","api_call":"GET \/vaults\/{vaultUuid}\/items\/{itemUuid}","api_version":"1.5.7","meta_data":{"server":{"url":"http:\/\/1password.local"},"path":"\/vaults\/{vaultUuid}\/items\/{itemUuid}","method":"GET","info":{"contact":{"email":"support@1password.com","name":"1Password Integrations","url":"https:\/\/support.1password.com\/"},"description":"REST API interface for 1Password Connect.","title":"1Password Connect","version":"1.5.7","x-apisguru-categories":["security"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_upload.wikimedia.org_wikipedia_commons_thumb_e_e3_1password-logo.svg_1280px-1password-logo.svg.png"},"x-origin":[{"format":"openapi","url":"https:\/\/i.1password.com\/media\/1password-connect\/1password-connect-api.yaml","version":"3.0"}],"x-providerName":"1password.local","x-serviceName":"connect"}},"api_arguments":{"vaultUuid":"The UUID of the Vault to fetch Item from","itemUuid":"The UUID of the Item to fetch"},"functionality":"Fetches the details of an item from a specific vault.","example_code":"curl -X GET 'http:\/\/1password.local\/vaults\/{vaultUuid}\/items\/{itemUuid}'","questions":["I am a security manager and I need to retrieve the details of a specific item from a vault. How can I do this?","As a system administrator, I need to fetch the details of an item from a specific vault. What API can I use for this?"]}
{"user_name":"motin","api_name":"1password.local","api_call":"PATCH \/vaults\/{vaultUuid}\/items\/{itemUuid}","api_version":"1.5.7","meta_data":{"server":{"url":"http:\/\/1password.local"},"path":"\/vaults\/{vaultUuid}\/items\/{itemUuid}","method":"PATCH","info":{"contact":{"email":"support@1password.com","name":"1Password Integrations","url":"https:\/\/support.1password.com\/"},"description":"REST API interface for 1Password Connect.","title":"1Password Connect","version":"1.5.7","x-apisguru-categories":["security"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_upload.wikimedia.org_wikipedia_commons_thumb_e_e3_1password-logo.svg_1280px-1password-logo.svg.png"},"x-origin":[{"format":"openapi","url":"https:\/\/i.1password.com\/media\/1password-connect\/1password-connect-api.yaml","version":"3.0"}],"x-providerName":"1password.local","x-serviceName":"connect"}},"api_arguments":{"vaultUuid":"The UUID of the Vault the item is in","itemUuid":"The UUID of the Item to update","patch":"The patch operations to apply"},"functionality":"Applies a modified RFC6902 JSON Patch document to an Item or ItemField in a specific vault. Supports `add`, `remove` and `replace` operations.","example_code":"curl -X PATCH 'http:\/\/1password.local\/vaults\/{vaultUuid}\/items\/{itemUuid}' -d '[{\"op\":\"replace\",\"path\":\"\/favorite\",\"value\":true},{\"op\":\"remove\",\"path\":\"\/tags\/1\"}]'","questions":["I need to update the attributes of an item in my vault, how can I do this?","I want to add a new field to an item in my vault, is there an API endpoint for this?","How can I remove a specific field from an item in my vault using an API?"]}
{"user_name":"motin","api_name":"1password.local","api_call":"GET \/vaults\/{vaultUuid}\/items\/{itemUuid}\/files","api_version":"1.5.7","meta_data":{"server":{"url":"http:\/\/1password.local"},"path":"\/vaults\/{vaultUuid}\/items\/{itemUuid}\/files","method":"GET","info":{"contact":{"email":"support@1password.com","name":"1Password Integrations","url":"https:\/\/support.1password.com\/"},"description":"REST API interface for 1Password Connect.","title":"1Password Connect","version":"1.5.7","x-apisguru-categories":["security"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_upload.wikimedia.org_wikipedia_commons_thumb_e_e3_1password-logo.svg_1280px-1password-logo.svg.png"},"x-origin":[{"format":"openapi","url":"https:\/\/i.1password.com\/media\/1password-connect\/1password-connect-api.yaml","version":"3.0"}],"x-providerName":"1password.local","x-serviceName":"connect"}},"api_arguments":{"vaultUuid":"The UUID of the Vault to fetch Items from","itemUuid":"The UUID of the Item to fetch files from"},"functionality":"Fetches all the files inside a specific item from a specific vault.","example_code":"curl -X GET 'http:\/\/1password.local\/vaults\/{vaultUuid}\/items\/{itemUuid}\/files'","questions":["I am a security analyst and I need to retrieve all files from a specific item in a vault. How can I do this?","As a system administrator, I need to fetch all files from a specific item in a vault for backup purposes. What API can I use for this?"]}
{"user_name":"motin","api_name":"1password.local","api_call":"GET \/vaults\/{vaultUuid}\/items\/{itemUuid}\/files\/{fileUuid}","api_version":"1.5.7","meta_data":{"server":{"url":"http:\/\/1password.local"},"path":"\/vaults\/{vaultUuid}\/items\/{itemUuid}\/files\/{fileUuid}","method":"GET","info":{"contact":{"email":"support@1password.com","name":"1Password Integrations","url":"https:\/\/support.1password.com\/"},"description":"REST API interface for 1Password Connect.","title":"1Password Connect","version":"1.5.7","x-apisguru-categories":["security"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_upload.wikimedia.org_wikipedia_commons_thumb_e_e3_1password-logo.svg_1280px-1password-logo.svg.png"},"x-origin":[{"format":"openapi","url":"https:\/\/i.1password.com\/media\/1password-connect\/1password-connect-api.yaml","version":"3.0"}],"x-providerName":"1password.local","x-serviceName":"connect"}},"api_arguments":{"vaultUuid":"The UUID of the Vault to fetch Item from","itemUuid":"The UUID of the Item to fetch File from","fileUuid":"The UUID of the File to fetch"},"functionality":"Fetches the details of a specific file in a specific item from a specific vault.","example_code":"curl -X GET 'http:\/\/1password.local\/vaults\/{vaultUuid}\/items\/{itemUuid}\/files\/{fileUuid}'","questions":["I need to retrieve a specific file from an item in a vault, how can I do this?","How can I fetch the details of a file stored in a specific item within a vault?"]}
{"user_name":"motin","api_name":"1password.local","api_call":"GET \/vaults\/{vaultUuid}\/items\/{itemUuid}\/files\/{fileUuid}\/content","api_version":"1.5.7","meta_data":{"server":{"url":"http:\/\/1password.local"},"path":"\/vaults\/{vaultUuid}\/items\/{itemUuid}\/files\/{fileUuid}\/content","method":"GET","info":{"contact":{"email":"support@1password.com","name":"1Password Integrations","url":"https:\/\/support.1password.com\/"},"description":"REST API interface for 1Password Connect.","title":"1Password Connect","version":"1.5.7","x-apisguru-categories":["security"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_upload.wikimedia.org_wikipedia_commons_thumb_e_e3_1password-logo.svg_1280px-1password-logo.svg.png"},"x-origin":[{"format":"openapi","url":"https:\/\/i.1password.com\/media\/1password-connect\/1password-connect-api.yaml","version":"3.0"}],"x-providerName":"1password.local","x-serviceName":"connect"}},"api_arguments":{"vaultUuid":"UUID of the vault","itemUuid":"UUID of the item","fileUuid":"UUID of the file"},"functionality":"Retrieves the content of a file stored in a specific item within a vault.","example_code":"curl -X GET 'http:\/\/1password.local\/vaults\/{vaultUuid}\/items\/{itemUuid}\/files\/{fileUuid}\/content'","questions":["I have a file stored in an item within a vault and I need to retrieve its content. How can I do this?","As a developer, I need to access the content of a file stored in a specific item within a vault. What API endpoint should I use?"]}
{"user_name":"motin","api_name":"6-dot-authentiqio.appspot.com","api_call":"DELETE \/key","api_version":"6","meta_data":{"server":{"url":"https:\/\/6-dot-authentiqio.appspot.com"},"path":"\/key","method":"DELETE","info":{"contact":{"email":"hello@authentiq.com","name":"Authentiq team","url":"http:\/\/authentiq.io\/support"},"description":"Strong authentication, without the passwords.","license":{"name":"Apache 2.0","url":"http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html"},"termsOfService":"http:\/\/authentiq.com\/terms\/","title":"Authentiq API","version":"6","x-apisguru-categories":["security"],"x-logo":{"backgroundColor":"#F26641","url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_www.authentiq.com_theme_images_authentiq-logo-a-inverse.svg"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/AuthentiqID\/authentiq-docs\/master\/docs\/swagger\/issuer.yaml","version":"3.0"}],"x-providerName":"6-dot-authentiqio.appspot.com"}},"api_arguments":{"email":"example@email.com","phone":"+1234567890"},"functionality":"Revokes an Authentiq ID using email and phone. A verification code is sent by email on first call, and revocation is completed on second call with the code.","example_code":"curl -X DELETE 'https:\/\/6-dot-authentiqio.appspot.com\/key?email=example@email.com&phone=+1234567890'","questions":["I no longer want to use my Authentiq ID associated with my email and phone number. How can I revoke it?","I suspect my Authentiq ID has been compromised. How can I revoke it using my email and phone number?"]}
{"user_name":"motin","api_name":"6-dot-authentiqio.appspot.com","api_call":"POST \/key","api_version":"6","meta_data":{"server":{"url":"https:\/\/6-dot-authentiqio.appspot.com"},"path":"\/key","method":"POST","info":{"contact":{"email":"hello@authentiq.com","name":"Authentiq team","url":"http:\/\/authentiq.io\/support"},"description":"Strong authentication, without the passwords.","license":{"name":"Apache 2.0","url":"http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html"},"termsOfService":"http:\/\/authentiq.com\/terms\/","title":"Authentiq API","version":"6","x-apisguru-categories":["security"],"x-logo":{"backgroundColor":"#F26641","url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_www.authentiq.com_theme_images_authentiq-logo-a-inverse.svg"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/AuthentiqID\/authentiq-docs\/master\/docs\/swagger\/issuer.yaml","version":"3.0"}],"x-providerName":"6-dot-authentiqio.appspot.com"}},"api_arguments":{"Authentiq ID":"Required"},"functionality":"Registers a new ID JWT(sub, devtoken).","example_code":"curl -X POST 'https:\/\/6-dot-authentiqio.appspot.com\/key' -H 'Content-Type: application\/jwt' -d '{\"Authentiq ID\": \"Your Authentiq ID\"}'","questions":["I need to register a new ID for my application. How can I do this?","I am developing a new application and need to register a unique ID. What is the best way to do this?"]}
{"user_name":"motin","api_name":"6-dot-authentiqio.appspot.com","api_call":"DELETE \/key\/{PK}","api_version":"6","meta_data":{"server":{"url":"https:\/\/6-dot-authentiqio.appspot.com"},"path":"\/key\/{PK}","method":"DELETE","info":{"contact":{"email":"hello@authentiq.com","name":"Authentiq team","url":"http:\/\/authentiq.io\/support"},"description":"Strong authentication, without the passwords.","license":{"name":"Apache 2.0","url":"http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html"},"termsOfService":"http:\/\/authentiq.com\/terms\/","title":"Authentiq API","version":"6","x-apisguru-categories":["security"],"x-logo":{"backgroundColor":"#F26641","url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_www.authentiq.com_theme_images_authentiq-logo-a-inverse.svg"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/AuthentiqID\/authentiq-docs\/master\/docs\/swagger\/issuer.yaml","version":"3.0"}],"x-providerName":"6-dot-authentiqio.appspot.com"}},"api_arguments":{"PK":"Public Signing Key - Authentiq ID (43 chars)","secret":"revokation secret"},"functionality":"Revokes an Identity (Key) with a revocation secret.","example_code":"curl -X DELETE 'https:\/\/6-dot-authentiqio.appspot.com\/key\/{PK}?secret={secret}'","questions":["I want to revoke an identity key with a revocation secret. How can I do this?","How can I revoke an Authentiq ID using a revocation secret?"]}
{"user_name":"motin","api_name":"6-dot-authentiqio.appspot.com","api_call":"GET \/key\/{PK}","api_version":"6","meta_data":{"server":{"url":"https:\/\/6-dot-authentiqio.appspot.com"},"path":"\/key\/{PK}","method":"GET","info":{"contact":{"email":"hello@authentiq.com","name":"Authentiq team","url":"http:\/\/authentiq.io\/support"},"description":"Strong authentication, without the passwords.","license":{"name":"Apache 2.0","url":"http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html"},"termsOfService":"http:\/\/authentiq.com\/terms\/","title":"Authentiq API","version":"6","x-apisguru-categories":["security"],"x-logo":{"backgroundColor":"#F26641","url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_www.authentiq.com_theme_images_authentiq-logo-a-inverse.svg"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/AuthentiqID\/authentiq-docs\/master\/docs\/swagger\/issuer.yaml","version":"3.0"}],"x-providerName":"6-dot-authentiqio.appspot.com"}},"api_arguments":{"PK":"Public Signing Key - Authentiq ID (43 chars)"},"functionality":"Retrieves public details of an Authentiq ID.","example_code":"curl -X GET 'https:\/\/6-dot-authentiqio.appspot.com\/key\/{PK}'","questions":["I need to get public details of an Authentiq ID. How can I do this?","How can I retrieve the public signing key of an Authentiq ID?"]}
{"user_name":"motin","api_name":"6-dot-authentiqio.appspot.com","api_call":"POST \/key\/{PK}","api_version":"6","meta_data":{"server":{"url":"https:\/\/6-dot-authentiqio.appspot.com"},"path":"\/key\/{PK}","method":"POST","info":{"contact":{"email":"hello@authentiq.com","name":"Authentiq team","url":"http:\/\/authentiq.io\/support"},"description":"Strong authentication, without the passwords.","license":{"name":"Apache 2.0","url":"http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html"},"termsOfService":"http:\/\/authentiq.com\/terms\/","title":"Authentiq API","version":"6","x-apisguru-categories":["security"],"x-logo":{"backgroundColor":"#F26641","url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_www.authentiq.com_theme_images_authentiq-logo-a-inverse.svg"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/AuthentiqID\/authentiq-docs\/master\/docs\/swagger\/issuer.yaml","version":"3.0"}],"x-providerName":"6-dot-authentiqio.appspot.com"}},"api_arguments":{"PK":"Public Signing Key - Authentiq ID (43 chars)"},"functionality":"Updates properties of an Authentiq ID using a public signing key.","example_code":"curl -X POST 'https:\/\/6-dot-authentiqio.appspot.com\/key\/{PK}' -H 'Content-Type: application\/jwt' -d '{\"AuthentiqID\": \"Your Authentiq ID\"}'","questions":["I need to update the properties of my Authentiq ID. How can I do this?","How can I use a public signing key to update my Authentiq ID properties?"]}
{"user_name":"motin","api_name":"6-dot-authentiqio.appspot.com","api_call":"POST \/login","api_version":"6","meta_data":{"server":{"url":"https:\/\/6-dot-authentiqio.appspot.com"},"path":"\/login","method":"POST","info":{"contact":{"email":"hello@authentiq.com","name":"Authentiq team","url":"http:\/\/authentiq.io\/support"},"description":"Strong authentication, without the passwords.","license":{"name":"Apache 2.0","url":"http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html"},"termsOfService":"http:\/\/authentiq.com\/terms\/","title":"Authentiq API","version":"6","x-apisguru-categories":["security"],"x-logo":{"backgroundColor":"#F26641","url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_www.authentiq.com_theme_images_authentiq-logo-a-inverse.svg"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/AuthentiqID\/authentiq-docs\/master\/docs\/swagger\/issuer.yaml","version":"3.0"}],"x-providerName":"6-dot-authentiqio.appspot.com"}},"api_arguments":{"callback":"URI App will connect to","aud":"audience (URI)","exp":"expiration time","iat":"issued at time","iss":"issuer (URI)","nbf":"not before time","sub":"UUID and public signing key"},"functionality":"Pushes a sign-in request to the specified URI.","example_code":"curl -X POST 'https:\/\/6-dot-authentiqio.appspot.com\/login' -H 'Content-Type: application\/jwt' -d '{\"sub\":\"UUID and public signing key\", \"iss\":\"issuer (URI)\", \"aud\":\"audience (URI)\"}'","questions":["I need to push a sign-in request to a specific URI. How can I do this?","How can I send a sign-in request to a specific audience using an API?"]}
{"user_name":"motin","api_name":"6-dot-authentiqio.appspot.com","api_call":"POST \/scope","api_version":"6","meta_data":{"server":{"url":"https:\/\/6-dot-authentiqio.appspot.com"},"path":"\/scope","method":"POST","info":{"contact":{"email":"hello@authentiq.com","name":"Authentiq team","url":"http:\/\/authentiq.io\/support"},"description":"Strong authentication, without the passwords.","license":{"name":"Apache 2.0","url":"http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html"},"termsOfService":"http:\/\/authentiq.com\/terms\/","title":"Authentiq API","version":"6","x-apisguru-categories":["security"],"x-logo":{"backgroundColor":"#F26641","url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_www.authentiq.com_theme_images_authentiq-logo-a-inverse.svg"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/AuthentiqID\/authentiq-docs\/master\/docs\/swagger\/issuer.yaml","version":"3.0"}],"x-providerName":"6-dot-authentiqio.appspot.com"}},"api_arguments":{"email":"example@email.com","phone":"1234567890","scope":"claim scope","sub":"UUID","type":"type"},"functionality":"Verifies the scope of a request using JWT format, either self-signed or issuer-signed.","example_code":"curl -X POST 'https:\/\/6-dot-authentiqio.appspot.com\/scope' -H 'Content-Type: application\/jwt' -d '{\"email\": \"example@email.com\", \"phone\": \"1234567890\", \"scope\": \"claim scope\", \"sub\": \"UUID\", \"type\": \"type\"}'","questions":["I need to verify the scope of a request in my application. How can I do this using JWT format?","I am developing an application that requires scope verification. Is there an API that can help me with this?"]}
{"user_name":"motin","api_name":"6-dot-authentiqio.appspot.com","api_call":"DELETE \/scope\/{job}","api_version":"6","meta_data":{"server":{"url":"https:\/\/6-dot-authentiqio.appspot.com"},"path":"\/scope\/{job}","method":"DELETE","info":{"contact":{"email":"hello@authentiq.com","name":"Authentiq team","url":"http:\/\/authentiq.io\/support"},"description":"Strong authentication, without the passwords.","license":{"name":"Apache 2.0","url":"http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html"},"termsOfService":"http:\/\/authentiq.com\/terms\/","title":"Authentiq API","version":"6","x-apisguru-categories":["security"],"x-logo":{"backgroundColor":"#F26641","url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_www.authentiq.com_theme_images_authentiq-logo-a-inverse.svg"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/AuthentiqID\/authentiq-docs\/master\/docs\/swagger\/issuer.yaml","version":"3.0"}],"x-providerName":"6-dot-authentiqio.appspot.com"}},"api_arguments":{"job":"string"},"functionality":"Deletes a verification job using the provided Job ID.","example_code":"curl -X DELETE 'https:\/\/6-dot-authentiqio.appspot.com\/scope\/{job}'","questions":["I have a verification job that is no longer needed. How can I delete it?","As an admin, I need to clean up old verification jobs. What's the best way to do this?"]}
{"user_name":"motin","api_name":"6-dot-authentiqio.appspot.com","api_call":"GET \/scope\/{job}","api_version":"6","meta_data":{"server":{"url":"https:\/\/6-dot-authentiqio.appspot.com"},"path":"\/scope\/{job}","method":"GET","info":{"contact":{"email":"hello@authentiq.com","name":"Authentiq team","url":"http:\/\/authentiq.io\/support"},"description":"Strong authentication, without the passwords.","license":{"name":"Apache 2.0","url":"http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html"},"termsOfService":"http:\/\/authentiq.com\/terms\/","title":"Authentiq API","version":"6","x-apisguru-categories":["security"],"x-logo":{"backgroundColor":"#F26641","url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_www.authentiq.com_theme_images_authentiq-logo-a-inverse.svg"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/AuthentiqID\/authentiq-docs\/master\/docs\/swagger\/issuer.yaml","version":"3.0"}],"x-providerName":"6-dot-authentiqio.appspot.com"}},"api_arguments":{"job":"Job ID (20 chars)"},"functionality":"Gets the status or current content of a verification job.","example_code":"curl -X GET 'https:\/\/6-dot-authentiqio.appspot.com\/scope\/{job}'","questions":["I am a project manager and I need to check the status of a verification job. How can I do this?","As a developer, I need to retrieve the current content of a specific verification job. What API can I use for this?"]}
{"user_name":"motin","api_name":"6-dot-authentiqio.appspot.com","api_call":"POST \/scope\/{job}","api_version":"6","meta_data":{"server":{"url":"https:\/\/6-dot-authentiqio.appspot.com"},"path":"\/scope\/{job}","method":"POST","info":{"contact":{"email":"hello@authentiq.com","name":"Authentiq team","url":"http:\/\/authentiq.io\/support"},"description":"Strong authentication, without the passwords.","license":{"name":"Apache 2.0","url":"http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html"},"termsOfService":"http:\/\/authentiq.com\/terms\/","title":"Authentiq API","version":"6","x-apisguru-categories":["security"],"x-logo":{"backgroundColor":"#F26641","url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_www.authentiq.com_theme_images_authentiq-logo-a-inverse.svg"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/AuthentiqID\/authentiq-docs\/master\/docs\/swagger\/issuer.yaml","version":"3.0"}],"x-providerName":"6-dot-authentiqio.appspot.com"}},"api_arguments":{"job":"string"},"functionality":"Confirms a scope by providing a job ID.","example_code":"curl -X POST 'https:\/\/6-dot-authentiqio.appspot.com\/scope\/{job}'","questions":["I have a job ID and I need to confirm its scope. How can I do this?","As a project manager, I need to verify the scope of a specific job using its ID. What is the best way to achieve this?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"GET \/channels","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/channels","method":"GET","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{},"functionality":"Enumerates all active channels of the application.","example_code":"curl -X GET 'https:\/\/rest.ably.io\/channels'","questions":["As a developer, I need to know all the active channels in my application. How can I get this information?","I am an admin and I want to monitor all active channels of my application. Is there a way to do this?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"GET \/channels\/{channel_id}","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/channels\/{channel_id}","method":"GET","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{"channel_id":"example_channel"},"functionality":"Retrieves metadata of a specific channel.","example_code":"curl -X GET 'https:\/\/rest.ably.io\/channels\/{channel_id}'","questions":["I am a developer and I need to get metadata of a specific channel in my application. How can I do this?","As a system administrator, I need to monitor the status of various channels. How can I retrieve the metadata of a specific channel?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"GET \/channels\/{channel_id}\/messages","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/channels\/{channel_id}\/messages","method":"GET","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{"channel_id":"string"},"functionality":"Retrieves message history for a specific channel.","example_code":"curl -X GET 'https:\/\/rest.ably.io\/channels\/{channel_id}\/messages'","questions":["I am a chat app developer and I need to fetch the message history for a specific channel. How can I do this?","As a moderator, I need to review the message history of a channel. Is there an API that can provide this information?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"POST \/channels\/{channel_id}\/messages","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/channels\/{channel_id}\/messages","method":"POST","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{"channel_id":"string","clientId":"string","connectionId":"string","data":"string","encoding":"string","extras":"object","id":"string","name":"string","timestamp":"integer"},"functionality":"Publishes a message to a specified channel.","example_code":"curl -X POST 'https:\/\/rest.ably.io\/channels\/{channel_id}\/messages' -H 'Content-Type: application\/json' -d '{\"clientId\": \"client1\", \"connectionId\": \"connection1\", \"data\": \"Hello, World!\", \"encoding\": \"utf-8\", \"extras\": {}, \"id\": \"message1\", \"name\": \"greeting\", \"timestamp\": 1628000000000}'","questions":["I am a developer and I need to publish a message to a specific channel. How can I do this?","As a chat app developer, I need to send a message to a specific channel. What API can I use for this?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"GET \/channels\/{channel_id}\/presence","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/channels\/{channel_id}\/presence","method":"GET","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{"channel_id":"string"},"functionality":"Retrieves the presence information on a specific channel.","example_code":"curl -X GET 'https:\/\/rest.ably.io\/channels\/{channel_id}\/presence'","questions":["I am developing a chat application and I need to know who is currently active on a specific channel. How can I get this information?","As a game developer, I need to track the presence of players in a game room (channel). How can I achieve this?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"GET \/channels\/{channel_id}\/presence\/history","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/channels\/{channel_id}\/presence\/history","method":"GET","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{"channel_id":"string"},"functionality":"Retrieves the presence history of a specific channel.","example_code":"curl -X GET 'https:\/\/rest.ably.io\/channels\/{channel_id}\/presence\/history'","questions":["I am a chat app developer and I need to fetch the presence history of a specific channel. How can I do this?","As a moderator, I need to monitor the presence history of a channel. Is there an API that can provide this information?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"POST \/keys\/{keyName}\/requestToken","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/keys\/{keyName}\/requestToken","method":"POST","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{"keyName":"YourKey.Name","capability":{"channel1":["publish","subscribe"],"wildcard:channels:*":["publish"]},"timestamp":"1559124196551"},"functionality":"Requests an access token for clients to use the service.","example_code":"curl -X POST 'https:\/\/rest.ably.io\/keys\/YourKey.Name\/requestToken' -H 'Content-Type: application\/json' -d '{\"capability\": {\"channel1\": [\"publish\", \"subscribe\"], \"wildcard:channels:*\": [\"publish\"]}, \"keyName\": \"YourKey.Name\", \"timestamp\": \"1559124196551\"}'","questions":["I am a developer and I need to authenticate my clients to use the service. How can I do this?","As a system administrator, I need to manage access tokens for my clients. What is the best way to request an access token?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"DELETE \/push\/channelSubscriptions","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/push\/channelSubscriptions","method":"DELETE","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{},"functionality":"Deletes a registered device's update token.","example_code":"curl -X DELETE 'https:\/\/rest.ably.io\/push\/channelSubscriptions'","questions":["I have a device that is no longer in use and I want to remove its update token. How can I do this?","I need to delete the update token of a registered device. What is the best way to achieve this?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"GET \/push\/channelSubscriptions","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/push\/channelSubscriptions","method":"GET","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{},"functionality":"Retrieves a list of push notification subscriptions to channels.","example_code":"curl -X GET 'https:\/\/rest.ably.io\/push\/channelSubscriptions'","questions":["I am developing a mobile app and I need to know which channels have push notification subscriptions. How can I get this information?","As a backend developer, I need to monitor the push notification subscriptions to our channels. Is there a way to list all these subscriptions?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"POST \/push\/channelSubscriptions","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/push\/channelSubscriptions","method":"POST","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{"channel":"my:channel","clientId":"myClientId"},"functionality":"Subscribes a device or all devices associated with a client ID to a channel for push notifications.","example_code":"curl -X POST 'https:\/\/rest.ably.io\/push\/channelSubscriptions' -H 'Content-Type: application\/json' -d '{\"channel\":\"my:channel\", \"clientId\":\"myClientId\"}'","questions":["I want to receive push notifications from a specific channel on my device. How can I subscribe to that channel?","How can I subscribe all devices associated with a client ID to a channel for receiving push notifications?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"GET \/push\/channels","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/push\/channels","method":"GET","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{},"functionality":"Lists all channels with at least one subscribed device.","example_code":"curl -X GET 'https:\/\/rest.ably.io\/push\/channels'","questions":["I am a developer and I need to know all the channels that have at least one device subscribed. How can I get this information?","As an app administrator, I want to monitor the channels with active subscriptions. Is there a way to list these channels?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"DELETE \/push\/deviceRegistrations","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/push\/deviceRegistrations","method":"DELETE","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{},"functionality":"Unregisters devices and deletes all their subscriptions for receiving push notifications through channels.","example_code":"curl -X DELETE 'https:\/\/rest.ably.io\/push\/deviceRegistrations'","questions":["I have a device that I no longer want to receive push notifications. How can I unregister it?","I need to delete all subscriptions for receiving push notifications from a device. What should I do?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"GET \/push\/deviceRegistrations","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/push\/deviceRegistrations","method":"GET","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{},"functionality":"Lists device details of devices registered for push notifications.","example_code":"curl -X GET 'https:\/\/rest.ably.io\/push\/deviceRegistrations'","questions":["I am a developer and I need to get a list of devices registered for receiving push notifications. How can I do this?","As an app manager, I want to know which devices are registered for push notifications. Is there a way to retrieve this information?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"POST \/push\/deviceRegistrations","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/push\/deviceRegistrations","method":"POST","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{"clientId":"Optional trusted client identifier for the device.","deviceSecret":"Secret value for the device.","formFactor":"Form factor of the push device. Options: ['phone','tablet','desktop','tv','watch','car','embedded']","id":"Unique identifier for the device generated by the device itself.","metadata":"Optional metadata object for this device.","platform":"Platform of the push device. Options: ['ios','android']","push.recipient":"Recipient details for the push notification.","push.state":"The current state of the push device. Options: ['Active','Failing','Failed']"},"functionality":"Registers a device's details for receiving push notifications.","example_code":"curl -X POST 'https:\/\/rest.ably.io\/push\/deviceRegistrations' -H 'Content-Type: application\/json' -d '{\"clientId\": \"client1\", \"deviceSecret\": \"secret\", \"formFactor\": \"phone\", \"id\": \"device1\", \"metadata\": {}, \"platform\": \"ios\", \"push.recipient\": {}, \"push.state\": \"Active\"}'","questions":["I have a mobile app and I want to register a device for receiving push notifications. How can I do this?","As a developer, I need to register multiple devices for push notifications. What API can I use for this?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"DELETE \/push\/deviceRegistrations\/{device_id}","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/push\/deviceRegistrations\/{device_id}","method":"DELETE","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{"device_id":"example_device_id"},"functionality":"Unregisters a single device by its device ID and deletes all its subscriptions for receiving push notifications through channels.","example_code":"curl -X DELETE 'https:\/\/rest.ably.io\/push\/deviceRegistrations\/example_device_id'","questions":["I have a device that I no longer want to receive push notifications. How can I unregister it?","How can I delete all subscriptions for receiving push notifications from a specific device?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"GET \/push\/deviceRegistrations\/{device_id}","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/push\/deviceRegistrations\/{device_id}","method":"GET","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{"device_id":"example_device_id"},"functionality":"Retrieves the full details of a device using its ID.","example_code":"curl -X GET 'https:\/\/rest.ably.io\/push\/deviceRegistrations\/{device_id}'","questions":["I am a device manager and I need to get the full details of a specific device using its ID. How can I do this?","As a system administrator, I need to retrieve the full details of a device for troubleshooting. How can I achieve this?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"PATCH \/push\/deviceRegistrations\/{device_id}","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/push\/deviceRegistrations\/{device_id}","method":"PATCH","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{"device_id":"string","clientId":"string","deviceSecret":"string","formFactor":["phone","tablet","desktop","tv","watch","car","embedded"],"id":"string","metadata":"object","platform":["ios","android"],"push.recipient":"Recipient object","push.state":["Active","Failing","Failed"]},"functionality":"Updates specific attributes of an existing device registration. Only clientId, metadata and push.recipient are mutable.","example_code":"curl -X PATCH 'https:\/\/rest.ably.io\/push\/deviceRegistrations\/{device_id}' -H 'Content-Type: application\/json' -d '{\"clientId\": \"client1\", \"metadata\": {\"key\": \"value\"}, \"push.recipient\": {\"transportType\": \"apns\", \"deviceToken\": \"device_token\"}}'","questions":["I have a device registered for push notifications and I want to update its clientId and metadata. How can I do this?","I need to update the recipient details for a registered device. What API can I use for this?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"GET \/push\/deviceRegistrations\/{device_id}\/resetUpdateToken","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/push\/deviceRegistrations\/{device_id}\/resetUpdateToken","method":"GET","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{"device_id":"example_device_id"},"functionality":"Resets a registered device's update token and retrieves updated device details.","example_code":"curl -X GET 'https:\/\/rest.ably.io\/push\/deviceRegistrations\/{device_id}\/resetUpdateToken'","questions":["I need to reset the update token of a registered device in my application. How can I do this?","How can I retrieve updated details of a device after resetting its update token?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"POST \/push\/publish","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/push\/publish","method":"POST","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{"push":{"apns":{"notification":{}},"data":"string","fcm":{"notification":{}},"notification":{},"web":{"notification":{}}},"recipient":{"clientId":"string","deviceId":"string","deviceToken":"string","registrationToken":"string","transportType":"string"}},"functionality":"Delivers a push notification payload to a single device or set of devices identified by their client identifier.","example_code":"curl -X POST 'https:\/\/rest.ably.io\/push\/publish' -H 'Content-Type: application\/json' -d '{\"push\": {\"data\": \"Hello, World!\"}, \"recipient\": {\"clientId\": \"example-client\"}}'","questions":["I need to send a push notification to a specific device using its client identifier. How can I do this?","How can I deliver a push notification payload to a set of devices identified by their client identifiers?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"GET \/stats","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/stats","method":"GET","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{},"functionality":"Retrieve usage statistics for an application, aggregated across all channels in use in the specified period.","example_code":"curl -X GET 'https:\/\/rest.ably.io\/stats'","questions":["As an app developer, I want to track usage of my application against account quotas. How can I do this?","I need to obtain usage statistics for my application, aggregated across all channels. What API can I use for this?"]}
{"user_name":"motin","api_name":"ably.io","api_call":"GET \/time","api_version":"1.1.0","meta_data":{"server":{"url":"https:\/\/rest.ably.io"},"path":"\/time","method":"GET","info":{"contact":{"email":"support@ably.io","name":"Ably Support","url":"https:\/\/www.ably.io\/contact","x-twitter":"ablyrealtime"},"description":"The [REST API specification](https:\/\/www.ably.io\/documentation\/rest-api) for Ably.","title":"Platform API","version":"1.1.0","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/platform-v1.yaml","version":"3.0"}],"x-providerName":"ably.io","x-serviceName":"platform"}},"api_arguments":{},"functionality":"Returns the service time in milliseconds since the epoch.","example_code":"curl -X GET 'https:\/\/rest.ably.io\/time'","questions":["I need to get the current time from a reliable service in milliseconds since the epoch. How can I do this?","As a developer, I need to synchronize time across multiple devices. Is there an API that can provide the current time in milliseconds since the epoch?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"GET \/accounts\/{account_id}\/apps","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/accounts\/{account_id}\/apps","method":"GET","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"account_id":"string"},"functionality":"Lists all applications for a specified account ID.","example_code":"curl -X GET 'https:\/\/control.ably.net\/v1\/accounts\/{account_id}\/apps'","questions":["As an account manager, I need to retrieve all applications associated with a specific account. How can I do this?","I need to get a list of all applications for a given account ID. What API endpoint should I use?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"POST \/accounts\/{account_id}\/apps","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/accounts\/{account_id}\/apps","method":"POST","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"account_id":"string","apnsCertificate":"string","apnsPrivateKey":"string","apnsUseSandboxEndpoint":"boolean","fcmKey":"string","name":"string","status":"string","tlsOnly":"boolean"},"functionality":"Creates an application with specified properties in a given account.","example_code":"curl -X POST 'https:\/\/control.ably.net\/v1\/accounts\/{account_id}\/apps' -H 'Content-Type: application\/json' -d '{\"name\": \"My App\", \"status\": \"enabled\"}'","questions":["I need to create a new application within my account. How can I do this programmatically?","How can I create an application with specific properties like APNS certificate, FCM key, etc. in my account?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"GET \/apps\/{app_id}\/keys","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/apps\/{app_id}\/keys","method":"GET","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"app_id":"Your_Application_ID"},"functionality":"Lists the API keys associated with a specific application ID.","example_code":"curl -X GET 'https:\/\/control.ably.net\/v1\/apps\/{app_id}\/keys'","questions":["As a developer, I need to retrieve all API keys associated with my application for management purposes. How can I do this?","I am an admin and I need to audit all the API keys for a specific application. What should I do?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"POST \/apps\/{app_id}\/keys","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/apps\/{app_id}\/keys","method":"POST","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"app_id":"string","capabilities":["publish","subscribe","history","presence","channel-metadata","push-admin","push-subscribe","statistics"],"channels":"string","name":"string"},"functionality":"Creates an API key for a specified application.","example_code":"curl -X POST 'https:\/\/control.ably.net\/v1\/apps\/{app_id}\/keys' -H 'Content-Type: application\/json' -d '{\"name\": \"myAPIKey\", \"channels\": \"myChannel\", \"capabilities\": [\"publish\", \"subscribe\"]}'","questions":["I need to create an API key for my application. How can I do this?","I want to specify the capabilities and channels for my API key. What is the process for this?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"PATCH \/apps\/{app_id}\/keys\/{key_id}","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/apps\/{app_id}\/keys\/{key_id}","method":"PATCH","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"app_id":"The application ID","key_id":"The API key ID","capabilities":["publish","subscribe","history","presence","channel-metadata","push-admin","push-subscribe","statistics"],"channels":"Specify the channels and queues that this key can be used with","name":"The name for your API key"},"functionality":"Updates an API key for a specific application.","example_code":"curl -X PATCH 'https:\/\/control.ably.net\/v1\/apps\/{app_id}\/keys\/{key_id}' -d '{\"capabilities\": [\"publish\", \"subscribe\"], \"channels\": \"my_channel\", \"name\": \"my_key\"}'","questions":["I need to update the capabilities of an existing API key for my application. How can I do this?","I want to restrict an API key to specific channels. How can I achieve this?","I want to rename an API key for better organization. What should I do?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"POST \/apps\/{app_id}\/keys\/{key_id}\/revoke","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/apps\/{app_id}\/keys\/{key_id}\/revoke","method":"POST","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"app_id":"Your Application ID","key_id":"Your Key ID"},"functionality":"Revokes the API key with the specified ID, within the Application ID. This deletes the key.","example_code":"curl -X POST 'https:\/\/control.ably.net\/v1\/apps\/{app_id}\/keys\/{key_id}\/revoke'","questions":["I have an application and I want to revoke a specific API key. How can I do this?","I suspect an API key associated with my application has been compromised. How can I revoke it?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"GET \/apps\/{app_id}\/namespaces","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/apps\/{app_id}\/namespaces","method":"GET","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"app_id":"Your_Application_ID"},"functionality":"Lists the namespaces for a specified application ID.","example_code":"curl -X GET 'https:\/\/control.ably.net\/v1\/apps\/{app_id}\/namespaces'","questions":["I have an application and I need to list all the namespaces associated with it. How can I do this?","As a developer, I need to retrieve all namespaces for a specific application. What API can I use for this?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"POST \/apps\/{app_id}\/namespaces","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/apps\/{app_id}\/namespaces","method":"POST","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"app_id":"string","authenticated":"boolean","id":"string","persistLast":"boolean","persisted":"boolean","pushEnabled":"boolean","tlsOnly":"boolean"},"functionality":"Creates a namespace for a specified application ID.","example_code":"curl -X POST 'https:\/\/control.ably.net\/v1\/apps\/{app_id}\/namespaces' -H 'Content-Type: application\/json' -d '{\"authenticated\": false, \"id\": \"namespace\", \"persistLast\": false, \"persisted\": false, \"pushEnabled\": false, \"tlsOnly\": false}'","questions":["I need to create a namespace for my application. How can I do this?","How can I create a namespace that only allows clients connected using TLS to subscribe to any channels within this namespace?","I want to store the last message published on a channel for 365 days. How can I achieve this?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"DELETE \/apps\/{app_id}\/namespaces\/{namespace_id}","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/apps\/{app_id}\/namespaces\/{namespace_id}","method":"DELETE","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"app_id":"YourApplicationID","namespace_id":"YourNamespaceID"},"functionality":"Deletes a namespace with a specified ID for a given application ID.","example_code":"curl -X DELETE 'https:\/\/control.ably.net\/v1\/apps\/{app_id}\/namespaces\/{namespace_id}'","questions":["I have an application with multiple namespaces and I want to delete a specific namespace. How can I do this?","As a developer, I need to clean up unused namespaces in my application. What's the best way to achieve this?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"PATCH \/apps\/{app_id}\/namespaces\/{namespace_id}","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/apps\/{app_id}\/namespaces\/{namespace_id}","method":"PATCH","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"app_id":"string","namespace_id":"string","authenticated":"boolean","persistLast":"boolean","persisted":"boolean","pushEnabled":"boolean","tlsOnly":"boolean"},"functionality":"Updates the namespace with the specified ID, for the application with the specified application ID.","example_code":"curl -X PATCH 'https:\/\/control.ably.net\/v1\/apps\/{app_id}\/namespaces\/{namespace_id}' -H 'Content-Type: application\/json' -d '{\"authenticated\": false, \"persistLast\": false, \"persisted\": false, \"pushEnabled\": false, \"tlsOnly\": false}'","questions":["I need to update the settings of a namespace in my application. How can I do this?","How can I change the authentication requirement for a namespace in my application?","I want to enable message persistence for a namespace in my application. What API should I use?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"GET \/apps\/{app_id}\/queues","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/apps\/{app_id}\/queues","method":"GET","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"app_id":"Your Application ID"},"functionality":"Lists the queues associated with a specified application ID.","example_code":"curl -X GET 'https:\/\/control.ably.net\/v1\/apps\/{app_id}\/queues'","questions":["I have an application and I want to know all the queues associated with it. How can I do that?","As a developer, I need to list all the queues for a specific application. What API endpoint should I use?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"POST \/apps\/{app_id}\/queues","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/apps\/{app_id}\/queues","method":"POST","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"app_id":"string","maxLength":10000,"name":"My queue","region":"us-east-1-a","ttl":60},"functionality":"Creates a queue for a specific application using the application ID and properties specified in the request body.","example_code":"curl -X POST 'https:\/\/control.ably.net\/v1\/apps\/{app_id}\/queues' -H 'Content-Type: application\/json' -d '{\"name\": \"My queue\", \"ttl\": 60, \"maxLength\": 10000, \"region\": \"us-east-1-a\"}'","questions":["I need to create a queue for my application with a specific ID. How can I do this?","How can I set up a queue with a specific name, TTL, maximum length, and region for my application?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"DELETE \/apps\/{app_id}\/queues\/{queue_id}","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/apps\/{app_id}\/queues\/{queue_id}","method":"DELETE","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"app_id":"YourApplicationID","queue_id":"YourQueueID"},"functionality":"Deletes a specific queue from an application using the application and queue IDs.","example_code":"curl -X DELETE 'https:\/\/control.ably.net\/v1\/apps\/{app_id}\/queues\/{queue_id}'","questions":["I have an application with several queues, but I need to delete a specific queue. How can I do this?","I want to remove a queue from my application. Is there a way to do this using the application and queue IDs?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"GET \/apps\/{app_id}\/rules","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/apps\/{app_id}\/rules","method":"GET","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"app_id":"your_app_id"},"functionality":"Lists the rules for a specified application using its ID.","example_code":"curl -X GET 'https:\/\/control.ably.net\/v1\/apps\/{app_id}\/rules'","questions":["As an app developer, I want to view all the rules for my application. How can I do this?","I need to manage the rules for my application. Is there a way to list all of them?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"POST \/apps\/{app_id}\/rules","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/apps\/{app_id}\/rules","method":"POST","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"app_id":"Your_Application_ID","rule_properties":{"ruleType":"http","channels":["channel-name"],"http":{"url":"http:\/\/example.com","method":"POST","headers":{"Content-Type":"application\/json"},"template":{"type":"json","body":{"foo":"bar"}}}}},"functionality":"Creates a rule for a specific application using the application ID.","example_code":"curl -X POST 'https:\/\/control.ably.net\/v1\/apps\/{app_id}\/rules' -H 'Content-Type: application\/json' -d '{\"ruleType\": \"http\", \"channels\": [\"channel-name\"], \"http\": {\"url\": \"http:\/\/example.com\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application\/json\"}, \"template\": {\"type\": \"json\", \"body\": {\"foo\": \"bar\"}}}}'","questions":["I need to create a rule for my application that triggers an HTTP request when a message is published on a specific channel. How can I do this?","How can I automate actions in my application based on certain events using rules?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"DELETE \/apps\/{app_id}\/rules\/{rule_id}","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/apps\/{app_id}\/rules\/{rule_id}","method":"DELETE","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"app_id":"Your application ID","rule_id":"The ID of the rule you want to delete"},"functionality":"Deletes a specific Reactor rule from an application.","example_code":"curl -X DELETE 'https:\/\/control.ably.net\/v1\/apps\/{app_id}\/rules\/{rule_id}'","questions":["I have a rule in my application that is no longer needed. How can I remove it?","I made a mistake while creating a rule in my application. How can I delete it?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"GET \/apps\/{app_id}\/rules\/{rule_id}","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/apps\/{app_id}\/rules\/{rule_id}","method":"GET","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"app_id":"string","rule_id":"string"},"functionality":"Returns the rule specified by the rule ID, for the application specified by application ID.","example_code":"curl -X GET 'https:\/\/control.ably.net\/v1\/apps\/{app_id}\/rules\/{rule_id}'","questions":["I need to retrieve a specific rule for my application. How can I do this using the application ID and rule ID?","How can I get the details of a specific rule in my application using its rule ID?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"PATCH \/apps\/{app_id}\/rules\/{rule_id}","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/apps\/{app_id}\/rules\/{rule_id}","method":"PATCH","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"app_id":"Your Application ID","rule_id":"Your Rule ID","ruleType":"Type of the rule","properties":"Properties for the rule"},"functionality":"Updates a specific Reactor rule for a given application.","example_code":"curl -X PATCH 'https:\/\/control.ably.net\/v1\/apps\/{app_id}\/rules\/{rule_id}' -H 'Content-Type: application\/json' -d '{\"ruleType\": \"http\", \"properties\": {}}'","questions":["I have an application with a set of Reactor rules. I need to update a specific rule. How can I do this?","I want to modify the properties of a rule in my application. Is there a way to do this?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"DELETE \/apps\/{id}","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/apps\/{id}","method":"DELETE","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"id":"Your_Application_ID"},"functionality":"Deletes the application with the specified application ID.","example_code":"curl -X DELETE 'https:\/\/control.ably.net\/v1\/apps\/{Your_Application_ID}'","questions":["I have an application that I no longer need and want to delete it. How can I do this?","I need to clean up my workspace and remove unused applications. What's the best way to do this?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"PATCH \/apps\/{id}","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/apps\/{id}","method":"PATCH","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"id":"The ID of application to be updated.","apnsCertificate":"The Apple Push Notification service certificate.","apnsPrivateKey":"The Apple Push Notification service private key.","apnsUseSandboxEndpoint":"The Apple Push Notification service sandbox endpoint.","fcmKey":"The Firebase Cloud Messaging key.","name":"The name of the application for your reference only.","status":"The status of the application. Can be `enabled` or `disabled`.","tlsOnly":"Enforce TLS for all connections."},"functionality":"Updates the application with the specified application ID.","example_code":"curl -X PATCH 'https:\/\/control.ably.net\/v1\/apps\/{id}' -H 'Content-Type: application\/json' -d '{\"name\": \"My App\", \"status\": \"enabled\"}'","questions":["I have an application that I need to update, including its name and status. How can I do this?","I need to enforce TLS for all connections in my application. How can I update this setting?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"POST \/apps\/{id}\/pkcs12","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/apps\/{id}\/pkcs12","method":"POST","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{"id":"The application ID","p12File":"The .p12 file containing the app's APNs information","p12Pass":"The password for the corresponding .p12 file"},"functionality":"Updates the application's Apple Push Notification service (APNs) information using a .p12 file.","example_code":"curl -X POST 'https:\/\/control.ably.net\/v1\/apps\/{id}\/pkcs12' -H 'Content-Type: multipart\/form-data' -F 'p12File=@path_to_file.p12' -F 'p12Pass=password'","questions":["I have updated my Apple Push Notification service (APNs) information and have a new .p12 file. How can I update this information in my application?","I want to update the APNs information of my application using a .p12 file. What is the process to do this?"]}
{"user_name":"motin","api_name":"ably.net","api_call":"GET \/me","api_version":"1.0.14","meta_data":{"server":{"url":"https:\/\/control.ably.net\/v1"},"path":"\/me","method":"GET","info":{"contact":{"x-twitter":"ablyrealtime"},"description":"Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https:\/\/ably.com\/documentation\/control-api\">developer documentation<\/a>.\n\nControl API is currently in Beta.\n","title":"Control API v1","version":"1.0.14","x-apisguru-categories":["cloud"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_ablyrealtime_profile_image"},"x-origin":[{"format":"openapi","url":"https:\/\/raw.githubusercontent.com\/ably\/open-specs\/main\/definitions\/control-v1.yaml","version":"3.0"}],"x-providerName":"ably.net","x-serviceName":"control"}},"api_arguments":{},"functionality":"Retrieves the token details of the user associated with the account.","example_code":"curl -X GET 'https:\/\/control.ably.net\/v1\/me'","questions":["I need to retrieve the token details of my account. How can I do this?","As a developer, I need to access the token details of a user associated with an account. What API can I use for this?"]}
{"user_name":"motin","api_name":"abstractapi.com","api_call":"GET \/v1\/","api_version":"1.0.0","meta_data":{"server":{"url":"https:\/\/ipgeolocation.abstractapi.com"},"path":"\/v1\/","method":"GET","info":{"description":"Abstract IP geolocation API allows developers to retrieve the region, country and city behind any IP worldwide. The API covers the geolocation of IPv4 and IPv6 addresses in 180+ countries worldwide. Extra information can be retrieved like the currency, flag or language associated to an IP.","title":"IP geolocation API","version":"1.0.0","x-apisguru-categories":["location"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_global-uploads.webflow.com_5ebbd0a566a3996636e55959_5ec2ba29feeeb05d69160e7b_webclip.png"},"x-origin":[{"format":"openapi","url":"https:\/\/documentation.abstractapi.com\/ip-geolocation-openapi.json","version":"3.0"}],"x-providerName":"abstractapi.com","x-serviceName":"geolocation"}},"api_arguments":{"api_key":"your_api_key"},"functionality":"Retrieves the location of an IP address including city, region, country, continent, longitude, latitude, and other related information.","example_code":"curl -X GET 'https:\/\/ipgeolocation.abstractapi.com\/v1\/?api_key=your_api_key'","questions":["I have an IP address and I need to find out its geographical location. How can I do this?","As a cybersecurity analyst, I need to track the location of an IP address involved in a security breach. What API can I use for this?","I need to retrieve the currency, flag, and language associated with an IP address. Is there an API that provides this information?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"GET \/user","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/user","method":"GET","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{},"functionality":"Retrieves information about the current user","example_code":"curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/user","questions":["As a user, how can I get information about my account?","I need to retrieve my user details from my IoT device. How can I do this?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"POST \/webhooks\/feed\/:token","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/webhooks\/feed\/:token","method":"POST","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"value":"example_value"},"functionality":"Sends data to a feed via webhook URL.","example_code":"curl -X POST 'https:\/\/io.adafruit.com\/api\/v2\/webhooks\/feed\/:token' -H 'Content-Type: application\/json' -d '{\"value\": \"example_value\"}'","questions":["I have a sensor that collects data and I want to send this data to a feed using a webhook. How can I do this?","I need to update a feed with new data from my application. Is there a way to do this using a webhook?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"POST \/webhooks\/feed\/:token\/raw","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/webhooks\/feed\/:token\/raw","method":"POST","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"value":"example data"},"functionality":"Accepts POST requests and stores the raw request body on your feed. Useful when you don't have control of the webhook sender.","example_code":"curl -X POST 'https:\/\/io.adafruit.com\/api\/v2\/webhooks\/feed\/:token\/raw' -H 'Content-Type: application\/json' -d '{\"value\": \"example data\"}'","questions":["I have a device that sends data via POST requests, but I don't have control over its code. How can I store this data in a feed?","I need to store raw request bodies from POST requests in a feed. What API can I use for this?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"DELETE \/{username}\/activities","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/{username}\/activities","method":"DELETE","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"username":"example_username"},"functionality":"Deletes all activities for the current user.","example_code":"curl -X DELETE 'https:\/\/io.adafruit.com\/api\/v2\/{username}\/activities' -H 'X-AIO-Key: io_key_12345'","questions":["I want to clear all my activities on my IoT device, how can I do this?","How can I delete all the activities associated with my user account?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"GET \/{username}\/activities","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/{username}\/activities","method":"GET","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"username":"a valid username string"},"functionality":"Returns information about the user's activities.","example_code":"curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/{username}\/activities","questions":["I want to monitor the activities of a user in my IoT network. How can I do this?","How can I retrieve information about a user's activities in my IoT application?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"GET \/{username}\/activities\/{type}","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/{username}\/activities\/{type}","method":"GET","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"username":"a valid username string","type":"type of activity"},"functionality":"Returns information about the user's activities by type.","example_code":"curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/{username}\/activities\/{type}","questions":["As a user, I want to retrieve all my activities of a certain type. How can I do this?","I need to monitor user activities based on their type. Is there a way to achieve this?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"GET \/{username}\/dashboards\/{dashboard_id}\/blocks","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/{username}\/dashboards\/{dashboard_id}\/blocks","method":"GET","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"username":"a valid username string","dashboard_id":"a valid dashboard id string"},"functionality":"Returns information about the user's blocks.","example_code":"curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/{username}\/dashboards\/{dashboard_id}\/blocks","questions":["I am a user who wants to get information about my blocks. How can I do this?","As a developer, I need to retrieve information about a user's blocks. What API endpoint should I use?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"POST \/{username}\/dashboards\/{dashboard_id}\/blocks","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/{username}\/dashboards\/{dashboard_id}\/blocks","method":"POST","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"username":"a valid username string","dashboard_id":"the id of the dashboard where the block will be created"},"functionality":"Creates a new block on a specified dashboard for a user","example_code":"curl -X POST 'https:\/\/io.adafruit.com\/api\/v2\/{username}\/dashboards\/{dashboard_id}\/blocks' -H 'X-AIO-Key: io_key_12345'","questions":["I want to add a new block to my IoT dashboard. How can I do this programmatically?","How can I create a new block on a specific dashboard using an API?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"DELETE \/{username}\/dashboards\/{dashboard_id}\/blocks\/{id}","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/{username}\/dashboards\/{dashboard_id}\/blocks\/{id}","method":"DELETE","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"username":"example_username","dashboard_id":"example_dashboard_id","id":"example_block_id"},"functionality":"Deletes an existing block from a dashboard","example_code":"curl -X DELETE 'https:\/\/io.adafruit.com\/api\/v2\/{username}\/dashboards\/{dashboard_id}\/blocks\/{id}' -H 'X-AIO-Key: io_key_12345'","questions":["I have a dashboard with a block that is no longer needed. How can I remove this block?","I made a mistake and added a block to my dashboard. How can I delete this block?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"GET \/{username}\/dashboards\/{dashboard_id}\/blocks\/{id}","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/{username}\/dashboards\/{dashboard_id}\/blocks\/{id}","method":"GET","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"username":"a valid username string","dashboard_id":"dashboard identifier","id":"block identifier"},"functionality":"Returns a specific block based on its ID from a user's dashboard","example_code":"curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/{username}\/dashboards\/{dashboard_id}\/blocks\/{id}","questions":["I have a dashboard with multiple blocks, how can I retrieve information about a specific block?","I want to monitor a specific block on my IoT dashboard, is there a way to access its data?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"PATCH \/{username}\/dashboards\/{dashboard_id}\/blocks\/{id}","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/{username}\/dashboards\/{dashboard_id}\/blocks\/{id}","method":"PATCH","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"username":"a valid username string","dashboard_id":"dashboard identifier","id":"block identifier"},"functionality":"Updates properties of an existing block in a dashboard","example_code":"curl -X PATCH 'https:\/\/io.adafruit.com\/api\/v2\/{username}\/dashboards\/{dashboard_id}\/blocks\/{id}' -H 'X-AIO-Key: io_key_12345' -d '{\"name\": \"new_name\"}'","questions":["I have a dashboard block that I want to rename. How can I do this?","I need to update the properties of a block in my IoT dashboard. What API can I use?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"DELETE \/{username}\/dashboards\/{id}","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/{username}\/dashboards\/{id}","method":"DELETE","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"username":"a valid username string","id":"dashboard id"},"functionality":"Deletes an existing dashboard for a given user.","example_code":"curl -X DELETE 'https:\/\/io.adafruit.com\/api\/v2\/{username}\/dashboards\/{id}' -H 'X-AIO-Key: io_key_12345'","questions":["I have created a dashboard that I no longer need. How can I delete it?","I want to clean up my IoT environment by removing unused dashboards. What's the best way to do this?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"GET \/{username}\/feeds","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/{username}\/feeds","method":"GET","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"username":"a valid username string"},"functionality":"Returns information about the user's feeds including the latest value of each feed and other metadata.","example_code":"curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/{username}\/feeds","questions":["I am a user who wants to get information about all my feeds. How can I do this?","As a developer, I need to retrieve the latest value and other metadata of each feed for a specific user. What API endpoint should I use?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"POST \/{username}\/feeds","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/{username}\/feeds","method":"POST","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"username":"a valid username string","description":"description of the feed","key":"unique identifier for the feed","license":"license for the feed","name":"name of the feed"},"functionality":"Creates a new feed for a specific user","example_code":"curl -X POST 'https:\/\/io.adafruit.com\/api\/v2\/{username}\/feeds' -H 'X-AIO-Key: io_key_12345' -H 'Content-Type: application\/json' -d '{\"description\": \"description\", \"key\": \"key\", \"license\": \"license\", \"name\": \"name\"}'","questions":["I am an IoT developer and I need to create a new feed for my user account. How can I do this?","As a data scientist, I need to create a new feed to store sensor data. What API can I use to achieve this?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"DELETE \/{username}\/feeds\/{feed_key}","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/{username}\/feeds\/{feed_key}","method":"DELETE","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"username":"a valid username string","feed_key":"a valid feed key"},"functionality":"Deletes an existing feed for a given user","example_code":"curl -X DELETE 'https:\/\/io.adafruit.com\/api\/v2\/{username}\/feeds\/{feed_key}' -H 'X-AIO-Key: io_key_12345'","questions":["I have a feed that I no longer need, how can I delete it?","I made a mistake and created a feed with the wrong key, how can I remove it?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"GET \/{username}\/feeds\/{feed_key}","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/{username}\/feeds\/{feed_key}","method":"GET","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"username":"a valid username string","feed_key":"a valid feed key"},"functionality":"Returns feed based on the feed key","example_code":"curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/{username}\/feeds\/{feed_key}","questions":["I have a feed key and I want to get the corresponding feed. How can I do this?","I need to access a specific feed using its key. What API should I use?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"PATCH \/{username}\/feeds\/{feed_key}","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/{username}\/feeds\/{feed_key}","method":"PATCH","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"username":"a valid username string","feed_key":"a valid feed key","description":"description of the feed","key":"key of the feed","license":"license of the feed","name":"name of the feed"},"functionality":"Updates properties of an existing feed in Adafruit IO","example_code":"curl -X PATCH 'https:\/\/io.adafruit.com\/api\/v2\/{username}\/feeds\/{feed_key}' -H 'X-AIO-Key: io_key_12345' -H 'Content-Type: application\/json' -d '{\"description\": \"new description\", \"key\": \"new key\", \"license\": \"new license\", \"name\": \"new name\"}'","questions":["I have an existing feed in Adafruit IO and I want to update its properties. How can I do this?","I want to change the name and description of my feed in Adafruit IO. Is there an API that can help me with this?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"GET \/{username}\/feeds\/{feed_key}\/data","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/{username}\/feeds\/{feed_key}\/data","method":"GET","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"username":"a valid username string","feed_key":"a valid feed key"},"functionality":"Fetches all data for a given feed using the username and feed key.","example_code":"curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/{username}\/feeds\/{feed_key}\/data","questions":["I have a feed of sensor data on Adafruit IO and I want to retrieve all the data points. How can I do this?","I need to fetch all the data from a specific feed on Adafruit IO. What is the best way to achieve this?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"POST \/{username}\/feeds\/{feed_key}\/data","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/{username}\/feeds\/{feed_key}\/data","method":"POST","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"username":"a valid username string","feed_key":"a valid feed key","value":"required data record value","lat":"optional latitude value","lon":"optional longitude value","ele":"optional elevation value","created_at":"optional date\/time string"},"functionality":"Creates new data records on a specified feed.","example_code":"curl -X POST 'https:\/\/io.adafruit.com\/api\/v2\/{username}\/feeds\/{feed_key}\/data' -H 'X-AIO-Key: io_key_12345' -H 'Content-Type: application\/json' -d '{\"value\": \"example_value\"}'","questions":["I have an IoT device that collects environmental data. How can I store this data on a specific feed?","I want to record the location of my device along with the data it collects. How can I do this?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"POST \/{username}\/feeds\/{feed_key}\/data\/batch","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/{username}\/feeds\/{feed_key}\/data\/batch","method":"POST","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"username":"a valid username string","feed_key":"a valid feed key","data_records":"A collection of data records including `value` (required) and optionally including: `lat`, `lon`, `ele` (latitude, longitude, and elevation values), and `created_at` (a date\/time string)."},"functionality":"Creates multiple new data records for a specific feed of a user.","example_code":"curl -X POST 'https:\/\/io.adafruit.com\/api\/v2\/{username}\/feeds\/{feed_key}\/data\/batch' -H 'X-AIO-Key: io_key_12345' -H 'Content-Type: application\/json' -d '{\"value\": \"example_value\", \"lat\": \"example_lat\", \"lon\": \"example_lon\", \"ele\": \"example_ele\", \"created_at\": \"example_date_time\"}'","questions":["I have a device that collects multiple data points at once and I want to upload all these data points to a specific feed at once. How can I do this?","I am working on a project that involves collecting and storing geolocation data. Is there a way to batch upload this data to a feed?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"GET \/{username}\/feeds\/{feed_key}\/data\/chart","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/{username}\/feeds\/{feed_key}\/data\/chart","method":"GET","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"username":"a valid username string","feed_key":"a valid feed key"},"functionality":"Populates charts over varying timespans with a consistent number of data points by aggregating slices of time into a single value by averaging.","example_code":"curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/{username}\/feeds\/{feed_key}\/data\/chart","questions":["I need to visualize my IoT device data over time in a chart. How can I get the data in a format suitable for charting?","I want to analyze the average values of my sensor data over specific timespans. Is there an API that can provide this information?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"GET \/{username}\/feeds\/{feed_key}\/data\/first","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/{username}\/feeds\/{feed_key}\/data\/first","method":"GET","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"username":"a valid username string","feed_key":"a valid feed key"},"functionality":"Retrieves the oldest data point in the feed and sets the queue pointer to the beginning of the feed.","example_code":"curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/{username}\/feeds\/{feed_key}\/data\/first","questions":["I need to access the oldest data point in a specific feed. How can I do this?","How can I set the queue pointer to the beginning of the feed?"]}
{"user_name":"motin","api_name":"adafruit.com","api_call":"GET \/{username}\/feeds\/{feed_key}\/data\/last","api_version":"2.0.0","meta_data":{"server":{"url":"https:\/\/io.adafruit.com\/api\/v2"},"path":"\/{username}\/feeds\/{feed_key}\/data\/last","method":"GET","info":{"description":"### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https:\/\/learn.adafruit.com\/series\/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https:\/\/www.adafruit.com\/product\/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https:\/\/github.com\/adafruit\/io-api](https:\/\/github.com\/adafruit\/io-api). For questions or comments visit the [Adafruit IO Forums](https:\/\/forums.adafruit.com\/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https:\/\/discord.gg\/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds\n\nOr like this:\n\n    $ curl \"https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https:\/\/github.com\/request\/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https:\/\/io.adafruit.com\/api\/v2\/io_username\/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application\/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n\/\/\/ based on\n\/\/\/ https:\/\/github.com\/esp8266\/Arduino\/blob\/master\/libraries\/ESP8266HTTPClient\/examples\/Authorization\/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"\/api\/v2\/---\/dashboards\";\n\n\/\/ Use web browser to view and copy\n\/\/ SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  \/\/ wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  \/\/ start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https:\/\/\" + String(host) + String(path_with_username), fingerprint);\n\n  \/\/ IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  \/\/ start connection and send HTTP header\n  int httpCode = http.GET();\n\n  \/\/ httpCode will be negative on error\n  if(httpCode > 0) {\n    \/\/ HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    \/\/ HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https:\/\/github.com\/adafruit\/io-client-python), [Ruby](https:\/\/github.com\/adafruit\/io-client-ruby), [Arduino C++](https:\/\/github.com\/adafruit\/Adafruit_IO_Arduino), [Javascript](https:\/\/github.com\/adafruit\/adafruit-io-node), and [Go](https:\/\/github.com\/adafruit\/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n","title":"Adafruit IO REST API","version":"2.0.0","x-apisguru-categories":["iot"],"x-logo":{"url":"https:\/\/api.apis.guru\/v2\/cache\/logo\/https_twitter.com_adafruit_profile_image.jpeg"},"x-origin":[{"format":"swagger","url":"https:\/\/raw.githubusercontent.com\/adafruit\/io-api\/gh-pages\/v2.json","version":"2.0"}],"x-providerName":"adafruit.com"}},"api_arguments":{"username":"example_username","feed_key":"example_feed_key"},"functionality":"Fetches the most recent data point in the feed and sets the queue pointer to the end of the feed.","example_code":"curl -H \"X-AIO-Key: io_key_12345\" https:\/\/io.adafruit.com\/api\/v2\/{username}\/feeds\/{feed_key}\/data\/last","questions":["I am working on an IoT project and I need to get the most recent data point from a specific feed. How can I do this?","As a developer, I want to fetch the latest data from a feed and move the queue pointer to the end. What API endpoint should I use?"]}
