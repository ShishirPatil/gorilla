[
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Card Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"UserId\": \"{{USER_NATURAL_PAYER}}\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"CardType\": \"CB_VISA_MASTERCARD\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#create-card-registration](https://mangopay.com/docs/endpoints/direct-card-payins#create-card-registration)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Tokenize the card (Challenge Flow Card)",
        "api_call": "{{CARD_REGISTRATION_URL}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "urlencoded",
                "urlencoded": [
                    {
                        "key": "accessKeyRef",
                        "value": "{{ACCESS_KEY}}",
                        "type": "text"
                    },
                    {
                        "key": "data",
                        "value": "{{PREREGISTRATION_DATA}}",
                        "type": "text"
                    },
                    {
                        "key": "cardNumber",
                        "value": "4970105181818183",
                        "type": "text"
                    },
                    {
                        "key": "cardExpirationDate",
                        "value": "1229",
                        "type": "text"
                    },
                    {
                        "key": "cardCvx",
                        "value": "123",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#tokenize-card](https://mangopay.com/docs/endpoints/direct-card-payins#tokenize-card)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Update a Card Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations/{{CARD_REGISTRATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"RegistrationData\": \"{{REGISTRATION_DATA_KEY}}\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#update-card-registration](https://mangopay.com/docs/endpoints/direct-card-payins#update-card-registration)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Card",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cards/{{CARD_CHALLENGE_FLOW_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#view-card](https://mangopay.com/docs/endpoints/direct-card-payins#view-card)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Card Validation",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cards/{{CARD_CHALLENGE_FLOW_ID}}/validation",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\r\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\r\n    \"SecureModeReturnURL\": \"https://mangopay.com/docs/please-ignore\",\r\n    \"IpAddress\": \"{{$randomIPV6}}\",\r\n    \"Tag\": \"Created using the Mangopay API Postman collection\",\r\n    \"BrowserInfo\": {\r\n        \"AcceptHeader\": \"application/json,text/javascript,*/*;q=0.01<\",\r\n        \"JavaEnabled\": true,\r\n        \"Language\": \"fr\",\r\n        \"ColorDepth\": 32,\r\n        \"ScreenHeight\": 667,\r\n        \"ScreenWidth\": 375,\r\n        \"TimeZoneOffset\": \"-120\",\r\n        \"UserAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148\",\r\n        \"JavascriptEnabled\": true\r\n      }\r\n}\r\n",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/card-validations#create-card-validation](https://mangopay.com/docs/endpoints/card-validations#create-card-validation)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Card Validation",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cards/{{CARD_CHALLENGE_FLOW_ID}}/validation/{{CARD_VALIDATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/card-validations#view-card-validation](https://mangopay.com/docs/endpoints/card-validations#view-card-validation)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Card",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cards/{{CARD_CHALLENGE_FLOW_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#view-card](https://mangopay.com/docs/endpoints/direct-card-payins#view-card)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a shop",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/legal",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"HeadquartersAddress\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"LegalPersonType\": \"BUSINESS\",\n    // \"LegalPersonType\": \"ORGANIZATION\",\n    // \"LegalPersonType\": \"SOLETRADER\",\n    \"Name\": \"{{$randomCompanyName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"CompanyNumber\": \"{{$randomInt}}\",\n    \"LegalRepresentativeAddress\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"LegalRepresentativeBirthday\": 652117514,\n    \"LegalRepresentativeCountryOfResidence\": \"FR\",\n    \"LegalRepresentativeNationality\": \"FR\",\n    \"LegalRepresentativeEmail\": \"{{$randomEmail}}\",\n    \"LegalRepresentativeFirstName\": \"{{$randomFirstName}}\",\n    \"LegalRepresentativeLastName\": \"{{$randomLastName}}\",\n    \"UserCategory\": \"OWNER\",\n    \"TermsAndConditionsAccepted\": true,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Wallet for the shop",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Owners\": [\"{{USER_LEGAL_OWNER}}\"],\n    \"Description\": \"E-Money wallet\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create an IBAN Bank Account for the shop",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/bankaccounts/iban",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"OwnerName\": \"{{$randomFullName}}\",\n    \"OwnerAddress\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"IBAN\": \"FR7630004000031234567890143\",\n    \"BIC\": \"BNPAFRPP\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a KYC Document for the shop",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/kyc/documents",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"Type\": \"IDENTITY_PROOF\"\n    // \"Type\": \"REGISTRATION_PROOF\"\n    // \"Type\": \"ARTICLES_OF_ASSOCIATION\"\n    // \"Type\": \"SHAREHOLDER_DECLARATION\"\n    // \"Type\": \"ADDRESS_PROOF\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a KYC Document Page",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/kyc/documents/{{KYC_DOCUMENT_ID}}/pages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"File\": \"\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Submit the shop KYC Document",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/kyc/documents/{{KYC_DOCUMENT_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Status\": \"VALIDATION_ASKED\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a UBO Declaration for the shop",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}//users/{{USER_LEGAL_OWNER}}/kyc/ubodeclarations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                }
            ]
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a UBO",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/kyc/ubodeclarations/{{UBO_DECLARATION_ID}}/ubos",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"FirstName\": \"{{$randomFirstName}}\",\n    \"LastName\": \"{{$randomLastName}}\",\n    \"Address\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"Nationality\": \"FR\",\n    \"Birthday\": 652117514,\n    \"Birthplace\": {\n        \"City\": \"Paris\",\n        \"Country\": \"FR\"\n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Submit the shop UBO Declaration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/kyc/ubodeclarations/{{UBO_DECLARATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Status\": \"VALIDATION_ASKED\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a buyer",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/natural",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Firstname\": \"{{$randomFirstName}}\",\n    \"Lastname\": \"{{$randomLastName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"Address\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"UserCategory\": \"PAYER\",\n    \"TermsAndConditionsAccepted\": true,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Wallet for the buyer",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Owners\": [\"{{USER_NATURAL_PAYER}}\"],\n    \"Description\": \"E-Money wallet\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Card Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"UserId\": \"{{USER_NATURAL_PAYER}}\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"CardType\": \"CB_VISA_MASTERCARD\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Post Card info (Challenge Flow Card)",
        "api_call": "{{CARD_REGISTRATION_URL}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "urlencoded",
                "urlencoded": [
                    {
                        "key": "accessKeyRef",
                        "value": "{{ACCESS_KEY}}",
                        "type": "text"
                    },
                    {
                        "key": "data",
                        "value": "{{PREREGISTRATION_DATA}}",
                        "type": "text"
                    },
                    {
                        "key": "cardNumber",
                        "value": "4970105181818183",
                        "type": "text"
                    },
                    {
                        "key": "cardExpirationDate",
                        "value": "1229",
                        "type": "text"
                    },
                    {
                        "key": "cardCvx",
                        "value": "123",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Update Card Registration to obtain a Card",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations/{{CARD_REGISTRATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"RegistrationData\": \"{{REGISTRATION_DATA_KEY}}\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Card Direct PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/card/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "// Don't forget to click on the link provided by SecureModeRedirectURL parameter in the response\n{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedUserId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10000\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 9000\n    },\n    \"SecureModeReturnURL\": \"https://docs.mangopay.com/please-ignore\",\n    \"CardId\": \"{{CARD_CHALLENGE_FLOW_ID}}\",\n    \"StatementDescriptor\": \"Mangopay\",\n    \"Billing\": {\n        \"FirstName\": \"{{$randomFirstName}}\",\n        \"LastName\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Shipping\": {\n        \"FirstName\": \"{{$randomFirstName}}\",\n        \"LastName\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"Culture\": \"{{CULTURE}}\",\n    \"IpAddress\": \"{{$randomIPV6}}\",\n    \"BrowserInfo\": {\n        \"AcceptHeader\": \"text/html, application/xhtml+xml, application/xml;q=0.9, /;q=0.8\",\n        \"JavaEnabled\": true,\n        \"Language\": \"FR-FR\",\n        \"ColorDepth\": 4,\n        \"ScreenHeight\": 1800,\n        \"ScreenWidth\": 400,\n        \"TimeZoneOffset\": 60,\n        \"UserAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148\",\n        \"JavascriptEnabled\": true\n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Transfer",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/transfers/",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedUserId\": \"{{USER_LEGAL_OWNER}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 500\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10\n    },   \n    \"DebitedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"CreditedWalletId\": \"{{USER_LEGAL_OWNER_WALLET_ID}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a PayOut (Pay the shop)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payouts/bankwire/",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_LEGAL_OWNER}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 100\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10\n    },\n    \"BankAccountId\": \"{{LEGAL_USER_BANK_ACCOUNT_ID}}\",\n    \"DebitedWalletId\": \"{{USER_LEGAL_OWNER_WALLET_ID}}\",\n    \"BankWireRef\": \"Postman\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Natural User (Payer)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/natural",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Firstname\": \"{{$randomFirstName}}\",\n    \"Lastname\": \"{{$randomLastName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"Address\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"UserCategory\": \"PAYER\",\n    \"TermsAndConditionsAccepted\": true,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/users#create-natural-user](https://mangopay.com/docs/endpoints/users#create-natural-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Wallet for the Payer User",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Owners\": [\"{{USER_NATURAL_PAYER}}\"],\n    \"Description\": \"E-Money wallet\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/wallets#create-wallet](https://mangopay.com/docs/endpoints/wallets#create-wallet)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Card Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"UserId\": \"{{USER_NATURAL_PAYER}}\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"CardType\": \"CB_VISA_MASTERCARD\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#create-card-registration](https://mangopay.com/docs/endpoints/direct-card-payins#create-card-registration)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Tokenize the card (Challenge Flow Card)",
        "api_call": "{{CARD_REGISTRATION_URL}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "urlencoded",
                "urlencoded": [
                    {
                        "key": "accessKeyRef",
                        "value": "{{ACCESS_KEY}}",
                        "type": "text"
                    },
                    {
                        "key": "data",
                        "value": "{{PREREGISTRATION_DATA}}",
                        "type": "text"
                    },
                    {
                        "key": "cardNumber",
                        "value": "4970105181818183",
                        "type": "text"
                    },
                    {
                        "key": "cardExpirationDate",
                        "value": "1229",
                        "type": "text"
                    },
                    {
                        "key": "cardCvx",
                        "value": "123",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#tokenize-card](https://mangopay.com/docs/endpoints/direct-card-payins#tokenize-card)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Update a Card Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations/{{CARD_REGISTRATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"RegistrationData\": \"{{REGISTRATION_DATA_KEY}}\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#update-card-registration](https://mangopay.com/docs/endpoints/direct-card-payins#update-card-registration)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Direct Card PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/card/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "// Don't forget to click on the link provided by SecureModeRedirectURL parameter in the response\n{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedUserId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10000\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 100\n    },\n    \"SecureModeReturnURL\": \"https://mangopay.com/docs/please-ignore\",\n    \"CardId\": \"{{CARD_CHALLENGE_FLOW_ID}}\",\n    \"StatementDescriptor\": \"Mangopay\",\n    \"Billing\": {\n        \"FirstName\": \"Alex\",\n        \"LastName\": \"Smith\",\n        \"Address\": {\n            \"AddressLine1\": \"6 rue de la Cit\u00e9\",\n            \"AddressLine2\": \"Appartement 3\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Shipping\": {\n        \"FirstName\": \"Alex\",\n        \"LastName\": \"Smith\",\n        \"Address\": {\n            \"AddressLine1\": \"6 rue de la Cit\u00e9\",\n            \"AddressLine2\": \"Appartement 3\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"Culture\": \"{{CULTURE}}\",\n    \"IpAddress\": \"{{$randomIPV6}}\",\n    \"BrowserInfo\": {\n        \"AcceptHeader\": \"text/html, application/xhtml+xml, application/xml;q=0.9, /;q=0.8\",\n        \"JavaEnabled\": true,\n        \"Language\": \"en\",\n        \"ColorDepth\": 4,\n        \"ScreenHeight\": 1800,\n        \"ScreenWidth\": 400,\n        \"TimeZoneOffset\": 60,\n        \"UserAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148\",\n        \"JavascriptEnabled\": true\n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#create-direct-card-payin](https://mangopay.com/docs/endpoints/direct-card-payins#create-direct-card-payin)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/{{PAYIN_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#view-payin](https://mangopay.com/docs/endpoints/direct-card-payins#view-payin)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Natural User (Payer)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/natural",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"FirstName\": \"{{$randomFirstName}}\",\n    \"LastName\": \"{{$randomLastName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"Address\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"UserCategory\": \"PAYER\",\n    \"TermsAndConditionsAccepted\": true,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Wallet (Natural User Payer)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Owners\": [\"{{USER_NATURAL_PAYER}}\"],\n    \"Description\": \"Description of the user's wallet\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Card Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"UserId\": \"{{USER_NATURAL_PAYER}}\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"CardType\": \"CB_VISA_MASTERCARD\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Tokenize the Card  (Challenge Flow Card)",
        "api_call": "{{CARD_REGISTRATION_URL}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "urlencoded",
                "urlencoded": [
                    {
                        "key": "accessKeyRef",
                        "value": "{{ACCESS_KEY}}",
                        "type": "text"
                    },
                    {
                        "key": "data",
                        "value": "{{PREREGISTRATION_DATA}}",
                        "type": "text"
                    },
                    {
                        "key": "cardNumber",
                        "value": "4970105181818183",
                        "type": "text"
                    },
                    {
                        "key": "cardExpirationDate",
                        "value": "1229",
                        "type": "text"
                    },
                    {
                        "key": "cardCvx",
                        "value": "123",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Update a Card Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations/{{CARD_REGISTRATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"RegistrationData\": \"{{REGISTRATION_DATA_KEY}}\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Recurring PayIn Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/recurringpayinregistrations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CardId\": \"{{CARD_CHALLENGE_FLOW_ID}}\",\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"FirstTransactionDebitedFunds\": {\n        \"Currency\": \"EUR\",\n        \"Amount\": 10000\n    },\n    \"FirstTransactionFees\": {\n        \"Currency\": \"EUR\",\n        \"Amount\": 1000\n    },\n    \"Billing\": {\n        \"FirstName\": \"{{$randomFirstName}}\",\n        \"LastName\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Shipping\": {\n        \"FirstName\": \"{{$randomFirstName}}\",\n        \"LastName\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Frequency\": \"Monthly\",\n    \"FixedNextAmount\": true,\n    // \"EndDate\": 1463494366,\n    \"FractionedPayment\": false,\n    // \"FreeCycles\": 2,\n    \"Migration\": false\n    // \"NextTransactionDebitedFunds\": {\n    //    \"Currency\": \"EUR\",\n    //    \"Amount\": 10000\n    // },\n    // \"NextTransactionFees\": {\n    //    \"Currency\": \"EUR\",\n    //    \"Amount\": 10000\n    // },\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Recurring PayIn CIT",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/recurring/card/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"RecurringPayinRegistrationId\": \"{{RECURRING_PAYIN_REGISTRATION_ID}}\",\n    \"IpAddress\": \"{{$randomIPV6}}\",\n    \"BrowserInfo\": {\n        \"AcceptHeader\": \"text/html, application/xhtml+xml, application/xml;q=0.9, /;q=0.8\",\n        \"JavaEnabled\": true,\n        \"Language\": \"FR-FR\",\n        \"ColorDepth\": 4,\n        \"ScreenHeight\": 1800,\n        \"ScreenWidth\": 400,\n        \"TimeZoneOffset\": 60,\n        \"UserAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148\",\n        \"JavascriptEnabled\": true\n    },\n    \"SecureModeReturnURL\": \"https://mangopay.com/docs/please-ignore\",\n    \"StatementDescriptor\": \"POSTMAN\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10000\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 1000\n    }   \n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Recurring PayIn MIT",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/recurring/card/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"RecurringPayinRegistrationId\": \"{{RECURRING_PAYIN_REGISTRATION_ID}}\",\n    \"StatementDescriptor\": \"POSTMAN\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10000\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 1000\n    }   \n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/{{PAYIN_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#view-payin](https://mangopay.com/docs/endpoints/direct-card-payins#view-payin)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a buyer",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/natural",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"FirstName\": \"{{$randomFirstName}}\",\n    \"LastName\": \"{{$randomLastName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"Address\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"UserCategory\": \"PAYER\",\n    \"TermsAndConditionsAccepted\": true,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Wallet for the buyer",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Owners\": [\"{{USER_NATURAL_PAYER}}\"],\n    \"Description\": \"E-Money wallet\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"Tag\": \"Created using MANGOPAY API Collection Postman\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a PayIn - Create Card Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"UserId\": \"{{USER_NATURAL_PAYER}}\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"CardType\": \"CB_VISA_MASTERCARD\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Payin - Post Card info",
        "api_call": "{{CARD_REGISTRATION_URL}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "urlencoded",
                "urlencoded": [
                    {
                        "key": "accessKeyRef",
                        "value": "{{ACCESS_KEY}}",
                        "type": "text"
                    },
                    {
                        "key": "data",
                        "value": "{{PREREGISTRATION_DATA}}",
                        "type": "text"
                    },
                    {
                        "key": "cardNumber",
                        "value": "4970105181818183",
                        "type": "text"
                    },
                    {
                        "key": "cardExpirationDate",
                        "value": "1229",
                        "type": "text"
                    },
                    {
                        "key": "cardCvx",
                        "value": "123",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a PayIn - Update Card Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations/{{CARD_REGISTRATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"RegistrationData\": \"{{REGISTRATION_DATA_KEY}}\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Card Direct PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/card/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "/* \n    After the call:\n        1/ Validate the payin using the SecureModeRedirectURL in the response\n        2/ Use the Hub and the Sandbox operations page to create a dispute with the ID returned in response\n*/\n{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedUserId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10000\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 9000\n    },\n    \"SecureModeReturnURL\": \"https://mangopay.com/docs/please-ignore\",\n    \"CardId\": \"{{CARD_CHALLENGE_FLOW_ID}}\",\n    \"StatementDescriptor\": \"Mangopay\",\n    \"Billing\": {\n        \"FirstName\": \"{{$randomFirstName}}\",\n        \"LastName\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Shipping\": {\n        \"FirstName\": \"{{$randomFirstName}}\",\n        \"LastName\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"Culture\": \"FR\",\n    \"IpAddress\": \"{{$randomIPV6}}\",\n    \"BrowserInfo\": {\n        \"AcceptHeader\": \"text/html, application/xhtml+xml, application/xml;q=0.9, /;q=0.8\",\n        \"JavaEnabled\": true,\n        \"Language\": \"FR-FR\",\n        \"ColorDepth\": 4,\n        \"ScreenHeight\": 1800,\n        \"ScreenWidth\": 400,\n        \"TimeZoneOffset\": 60,\n        \"UserAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148\",\n        \"JavascriptEnabled\": true\n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List User disputes",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_NATURAL_PAYER}}/disputes?Status=PENDING_CLIENT_ACTION",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a dispute",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/disputes/{{DISPUTE_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a dispute document",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/disputes/{{DISPUTE_ID}}/documents",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Type\": \"DELIVERY_PROOF\"\n    // \"Type\": \"INVOICE\"\n    // \"Type\": \"REFUND_PROOF\"\n    // \"Type\": \"USER_CORRESPONDANCE\"\n    // \"Type\": \"USER_ACCEPTANCE_PROOF\"\n    // \"Type\": \"PRODUCT_REPLACEMENT_PROOF\"\n    // \"Type\": \"OTHER\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a dispute document page",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/disputes/{{DISPUTE_ID}}/documents/{{DISPUTE_DOCUMENT_ID}}/pages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"File\": \"\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Submit a Dispute Document",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/disputes/{{DISPUTE_ID}}/documents/{{DISPUTE_DOCUMENT_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Status\": \"CREATED\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Submit a dispute",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/disputes/{{DISPUTE_ID}}/submit",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "/*\n    After submission, go to MANGOPAY Hub (Sandbox Operations) and set your dispute to lost\n*/\n\n{\n    \"ContestedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10000\n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a dispute",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/disputes/{{DISPUTE_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Natural User (Payer)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/natural",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"FirstName\": \"{{$randomFirstName}}\",\n    \"LastName\": \"{{$randomLastName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"Address\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"UserCategory\": \"PAYER\",\n    \"TermsAndConditionsAccepted\": false,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/users#create-natural-user](https://mangopay.com/docs/endpoints/users#create-natural-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Wallet for the Payer User",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Owners\": [\"{{USER_NATURAL_PAYER}}\"],\n    \"Description\": \"E-Money wallet\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Natural User (Owner)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/natural",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"FirstName\": \"{{$randomFirstName}}\",\n    \"LastName\": \"{{$randomLastName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"Address\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"Birthday\": 652117514,\n    \"CountryOfResidence\": \"FR\",\n    \"Nationality\": \"FR\",\n    \"UserCategory\": \"OWNER\",\n    \"TermsAndConditionsAccepted\": true,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/users#create-natural-user](https://mangopay.com/docs/endpoints/users#create-natural-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Wallet for the Owner User",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Owners\": [\"{{USER_NATURAL_PAYER}}\"],\n    \"Description\": \"E-Money wallet\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Card Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"UserId\": \"{{USER_NATURAL_PAYER}}\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"CardType\": \"CB_VISA_MASTERCARD\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Post Card info (Challenge Flow Card)",
        "api_call": "{{CARD_REGISTRATION_URL}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "urlencoded",
                "urlencoded": [
                    {
                        "key": "accessKeyRef",
                        "value": "{{ACCESS_KEY}}",
                        "type": "text"
                    },
                    {
                        "key": "data",
                        "value": "{{PREREGISTRATION_DATA}}",
                        "type": "text"
                    },
                    {
                        "key": "cardNumber",
                        "value": "4970105181818183",
                        "type": "text"
                    },
                    {
                        "key": "cardExpirationDate",
                        "value": "1229",
                        "type": "text"
                    },
                    {
                        "key": "cardCvx",
                        "value": "123",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Transfer",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/transfers",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedUserId\": \"{{USER_NATURAL_OWNER}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 9800\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 200\n    },   \n    \"DebitedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"CreditedWalletId\": \"{{USER_NATURAL_OWNER_WALLET_ID}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/transfers#create-transfer](https://mangopay.com/docs/endpoints/transfers#create-transfer)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a full Refund for a Transfer",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/transfers/{{TRANSFER_ID}}/refunds",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "// This call refunds 100% of the transfer amount and 100% of the fees\r\n{\r\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\r\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\"\r\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/refunds#create-refund-transfer](https://mangopay.com/docs/endpoints/refunds#create-refund-transfer)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a full Refund for a PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/{{PAYIN_ID}}/refunds",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "// This call refunds 100% of the pay-in amount and 100% of the fees\n{\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"AuthorId\": {{USER_NATURAL_PAYER}}\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Direct Card PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/card/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "/*\n    To validate the payment, follow the link provided by the parameter SecureModeRedirectURL in the response.\n*/\n\n{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedUserId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10000\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 200\n    },\n    \"SecureModeReturnURL\": \"https://mangopay.com/docs/please-ignore\",\n    \"CardId\": \"{{CARD_CHALLENGE_FLOW_ID}}\",\n    \"StatementDescriptor\": \"MANGOPAY\",\n    \"Billing\": {\n        \"FirstName\": \"{{$randomFirstName}}\",\n        \"LastName\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Shipping\": {\n        \"FirstName\": \"{{$randomFirstName}}\",\n        \"LastName\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"Culture\": \"{{CULTURE}}\",\n    \"IpAddress\": \"{{$randomIPV6}}\",\n    \"BrowserInfo\": {\n        \"AcceptHeader\": \"text/html, application/xhtml+xml, application/xml;q=0.9, /;q=0.8\",\n        \"JavaEnabled\": true,\n        \"Language\": \"FR-FR\",\n        \"ColorDepth\": 4,\n        \"ScreenHeight\": 1800,\n        \"ScreenWidth\": 400,\n        \"TimeZoneOffset\": 60,\n        \"UserAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148\",\n        \"JavascriptEnabled\": true       \n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Transfer",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/transfers",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedUserId\": \"{{USER_NATURAL_OWNER}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 9800\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 200\n    },   \n    \"DebitedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"CreditedWalletId\": \"{{USER_NATURAL_OWNER_WALLET_ID}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/transfers#create-transfer](https://mangopay.com/docs/endpoints/transfers#create-transfer)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a partial Refund for a Transfer",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/transfers/{{TRANSFER_ID}}/refunds",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "// This call refunds 50% of the transfer amount and 50% of the fees\r\n{\r\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\r\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\r\n    \"DebitedFunds\": {\r\n        \"Currency\": \"{{CURRENCY}}\",\r\n        \"Amount\": 4700\r\n    },\r\n    \"Fees\": {\r\n        \"Currency\": \"{{CURRENCY}}\",\r\n        \"Amount\": -100\r\n    }\r\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/refunds#create-refund-transfer](https://mangopay.com/docs/endpoints/refunds#create-refund-transfer)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a partial Refund for a PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/{{PAYIN_ID}}/refunds",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "// This call refunds 50% of the pay-in amount and 50% of the fees\n{\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"AuthorId\": {{USER_NATURAL_PAYER}},\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 4700\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": -100\n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Update Card Registration to obtain a Card",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations/{{CARD_REGISTRATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"RegistrationData\": \"{{REGISTRATION_DATA_KEY}}\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Direct Card PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/card/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "/*\n    To validate the payment, follow the link provided by the parameter SecureModeRedirectURL in the response.\n*/\n\n{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedUserId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10000\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 200\n    },\n    \"SecureModeReturnURL\": \"https://mangopay.com/docs/please-ignore\",\n    \"CardId\": \"{{CARD_CHALLENGE_FLOW_ID}}\",\n    \"StatementDescriptor\": \"MANGOPAY\",\n    \"Billing\": {\n        \"FirstName\": \"{{$randomFirstName}}\",\n        \"LastName\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Shipping\": {\n        \"FirstName\": \"{{$randomFirstName}}\",\n        \"LastName\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"Culture\": \"{{CULTURE}}\",\n    \"IpAddress\": \"{{$randomIPV6}}\",\n    \"BrowserInfo\": {\n        \"AcceptHeader\": \"text/html, application/xhtml+xml, application/xml;q=0.9, /;q=0.8\",\n        \"JavaEnabled\": true,\n        \"Language\": \"FR-FR\",\n        \"ColorDepth\": 4,\n        \"ScreenHeight\": 1800,\n        \"ScreenWidth\": 400,\n        \"TimeZoneOffset\": 60,\n        \"UserAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148\",\n        \"JavascriptEnabled\": true       \n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Refund",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/refunds/{{REFUND_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Legal User (Owner)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/legal",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"HeadquartersAddress\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"LegalPersonType\": \"BUSINESS\",\n    // \"LegalPersonType\": \"ORGANIZATION\",\n    // \"LegalPersonType\": \"SOLETRADER\",\n    \"Name\": \"{{$randomCompanyName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"CompanyNumber\": \"{{$randomInt}}\",\n    \"LegalRepresentativeAddress\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"LegalRepresentativeBirthday\": 652117514,\n    \"LegalRepresentativeCountryOfResidence\": \"FR\",\n    \"LegalRepresentativeNationality\": \"FR\",\n    \"LegalRepresentativeEmail\": \"{{$randomEmail}}\",\n    \"LegalRepresentativeFirstName\": \"{{$randomFirstName}}\",\n    \"LegalRepresentativeLastName\": \"{{$randomLastName}}\",\n    \"UserCategory\": \"OWNER\",\n    \"TermsAndConditionsAccepted\": true,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/users#create-legal-user](https://mangopay.com/docs/endpoints/users#create-legal-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Wallet (Legal User Owner)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Owners\": [\"{{USER_LEGAL_OWNER}}\"],\n    \"Description\": \"Description of the user's wallet\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/wallets#create-wallet](https://mangopay.com/docs/endpoints/wallets#create-wallet)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create an IBAN Bank Account",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/bankaccounts/iban",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"OwnerName\": \"{{$randomFullName}}\",\n    \"OwnerAddress\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"IBAN\": \"FR7630004000031234567890143\",\n    \"BIC\": \"BNPAFRPP\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/payouts#create-iban-bank-account](https://mangopay.com/docs/endpoints/payouts#create-iban-bank-account)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Mandate",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/mandates/directdebit/web",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "// Make sure you confirm the Mandate using the RedirectURL prior to make a direct-debit\n\n{\n    \"BankAccountId\": \"{{LEGAL_USER_BANK_ACCOUNT_ID}}\",\n    \"Culture\": \"{{CULTURE}}\",\n    \"ReturnURL\": \"https://mangopay.com/docs/please-ignore\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-direct-debit-payins#create-mandate](https://mangopay.com/docs/endpoints/direct-direct-debit-payins#create-mandate)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Direct Direct-Debit PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/directdebit/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\r\n    \"AuthorId\":\"{{USER_LEGAL_OWNER}}\",\r\n    \"CreditedUserId\":\"{{USER_LEGAL_OWNER}}\",\r\n    \"CreditedWalletId\":\"{{USER_LEGAL_OWNER_WALLET_ID}}\",\r\n    \"DebitedFunds\":{\r\n        \"Currency\":\"{{CURRENCY}}\",\r\n        \"Amount\":1200\r\n    },\r\n    \"Fees\":{\r\n        \"Currency\":\"{{CURRENCY}}\",\r\n        \"Amount\":12\r\n    },\r\n    \"Tag\":\"Created using Mangopay API Postman Collection\",\r\n    \"MandateId\":\"{{MANDATE_ID}}\",\r\n    \"StatementDescriptor\":\"Mangopay\"\r\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-direct-debit-payins#create-direct-direct-debit-payin](https://mangopay.com/docs/endpoints/direct-direct-debit-payins#create-direct-direct-debit-payin)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Cancel a Mandate",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/mandates/{{MANDATE_ID}}/cancel",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [
                {
                    "key": "Content-Length",
                    "value": "0",
                    "disabled": true
                }
            ]
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-direct-debit-payins#cancel-mandate](https://mangopay.com/docs/endpoints/direct-direct-debit-payins#cancel-mandate)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Natural User (Payer)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/natural",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"FirstName\": \"{{$randomFirstName}}\",\n    \"LastName\": \"{{$randomLastName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"Address\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"UserCategory\": \"PAYER\",\n    \"TermsAndConditionsAccepted\": true,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Wallet for the User",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Owners\": [\"{{USER_NATURAL_PAYER}}\"],\n    \"Description\": \"E-Money wallet\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Card Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"UserId\": \"{{USER_NATURAL_PAYER}}\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"CardType\": \"CB_VISA_MASTERCARD\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Tokenize the card (Challenge Flow Card)",
        "api_call": "{{CARD_REGISTRATION_URL}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "urlencoded",
                "urlencoded": [
                    {
                        "key": "accessKeyRef",
                        "value": "{{ACCESS_KEY}}",
                        "type": "text"
                    },
                    {
                        "key": "data",
                        "value": "{{PREREGISTRATION_DATA}}",
                        "type": "text"
                    },
                    {
                        "key": "cardNumber",
                        "value": "4970105181818183",
                        "type": "text"
                    },
                    {
                        "key": "cardExpirationDate",
                        "value": "1229",
                        "type": "text"
                    },
                    {
                        "key": "cardCvx",
                        "value": "123",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Update Card Registration to obtain a Card",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations/{{CARD_REGISTRATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"RegistrationData\": \"{{REGISTRATION_DATA_KEY}}\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Preauthorization",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/preauthorizations/card/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "/*\n    To validate the PreAuthorization, don't forget to click on SecureModeRedirectURL in the response\n*/\n{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10000\n    },\n    \"Billing\": {\n        \"Firstname\": \"{{$randomFirstName}}\",\n        \"Lastname\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Shipping\": {\n        \"Firstname\": \"{{$randomFirstName}}\",\n        \"Lastname\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Culture\": \"{{CULTURE}}\",\n    \"CardId\": \"{{CARD_CHALLENGE_FLOW_ID}}\",\n    \"SecureModeReturnURL\": \"https://mangopay.com/docs/please-ignore\",\n    \"IpAddress\": \"{{$randomIPV6}}\",\n    \"BrowserInfo\": {\n        \"AcceptHeader\": \"text/html, application/xhtml+xml, application/xml;q=0.9, /;q=0.8\",\n        \"JavaEnabled\": true,\n        \"Language\": \"FR-FR\",\n        \"ColorDepth\": 4,\n        \"ScreenHeight\": 1800,\n        \"ScreenWidth\": 400,\n        \"TimeZoneOffset\": 60,\n        \"UserAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148\",\n        \"JavascriptEnabled\": true       \n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Preauthorization",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/preauthorizations/{{PREAUTHORIZATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Cancel or Validate a Preauthorization",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/preauthorizations/{{PREAUTHORIZATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "// Canceling is possible when no funds have been captured. Validating is possible when the funds have partially been captured.\n\n{\n    \"PaymentStatus\": \"CANCELED\"\n    // \"PaymentStatus\": \"VALIDATED\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Preauthorization",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/preauthorizations/card/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "/*\n    To validate the PreAuthorization, don't forget to click on SecureModeRedirectURL in the response\n*/\n{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10000\n    },\n    \"Billing\": {\n        \"Firstname\": \"{{$randomFirstName}}\",\n        \"Lastname\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Shipping\": {\n        \"Firstname\": \"{{$randomFirstName}}\",\n        \"Lastname\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Culture\": \"{{CULTURE}}\",\n    \"CardId\": \"{{CARD_CHALLENGE_FLOW_ID}}\",\n    \"SecureModeReturnURL\": \"https://docs.mangopay.com/please-ignore\",\n    \"IpAddress\": \"{{$randomIPV6}}\",\n    \"BrowserInfo\": {\n        \"AcceptHeader\": \"text/html, application/xhtml+xml, application/xml;q=0.9, /;q=0.8\",\n        \"JavaEnabled\": true,\n        \"Language\": \"FR-FR\",\n        \"ColorDepth\": 4,\n        \"ScreenHeight\": 1800,\n        \"ScreenWidth\": 400,\n        \"TimeZoneOffset\": 60,\n        \"UserAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148\",\n        \"JavascriptEnabled\": true\n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Preauthorized PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/preauthorized/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10000\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 1000\n    },\n    \"PreauthorizationId\": \"{{PREAUTHORIZATION_ID}}\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Natural User (Payer)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/natural",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"FirstName\": \"{{$randomFirstName}}\",\n    \"LastName\": \"{{$randomLastName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"Address\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"UserCategory\": \"PAYER\",\n    \"TermsAndConditionsAccepted\": true,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Wallet for the Payer User",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Owners\": [\"{{USER_NATURAL_PAYER}}\"],\n    \"Description\": \"User's wallet\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Card Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"UserId\": \"{{USER_NATURAL_PAYER}}\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"CardType\": \"CB_VISA_MASTERCARD\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Tokenize the card (Challenge Flow Card)",
        "api_call": "{{CARD_REGISTRATION_URL}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "urlencoded",
                "urlencoded": [
                    {
                        "key": "accessKeyRef",
                        "value": "{{ACCESS_KEY}}",
                        "type": "text"
                    },
                    {
                        "key": "data",
                        "value": "{{PREREGISTRATION_DATA}}",
                        "type": "text"
                    },
                    {
                        "key": "cardNumber",
                        "value": "4970105181818183",
                        "type": "text"
                    },
                    {
                        "key": "cardExpirationDate",
                        "value": "1229",
                        "type": "text"
                    },
                    {
                        "key": "cardCvx",
                        "value": "123",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Update a Card Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations/{{CARD_REGISTRATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"RegistrationData\": \"{{REGISTRATION_DATA_KEY}}\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Deposit Preauthorization",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/deposit-preauthorizations/card/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 20000\n    },\n    \"CardId\": \"{{CARD_CHALLENGE_FLOW_ID}}\",\n    \"SecureModeReturnURL\": \"https://mangopay.com/docs/please-ignore\",\n    \"Culture\": \"{{CULTURE}}\",\n    \"IpAddress\": \"{{$randomIPV6}}\",\n    \"BrowserInfo\": {\n        \"AcceptHeader\": \"text/html, application/xhtml+xml, application/xml;q=0.9, /;q=0.8\",\n        \"JavaEnabled\": true,\n        \"Language\": \"FR-FR\",\n        \"ColorDepth\": 4,\n        \"ScreenHeight\": 1800,\n        \"ScreenWidth\": 400,\n        \"TimeZoneOffset\": 60,\n        \"UserAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148\",\n        \"JavascriptEnabled\": true\n    },\n        \"Tag\": \"Created using the Mangopay API Postman collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorization](https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorization)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Deposit Preauthorized PayIn without complement",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/deposit-preauthorized/direct/full-capture",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 20000\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 2000\n    },\n    \"DepositId\": \"{{DEPOSIT_ID}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorized-payin-without-complement](https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorized-payin-without-complement)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Deposit Preauthorization",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/deposit-preauthorizations/{{DEPOSIT_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Deposit Preauthorization",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/deposit-preauthorizations/card/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 20000\n    },\n    \"CardId\": \"{{CARD_CHALLENGE_FLOW_ID}}\",\n    \"SecureModeReturnURL\": \"https://mangopay.com/docs/please-ignore\",\n    \"Culture\": \"{{CULTURE}}\",\n    \"IpAddress\": \"{{$randomIPV6}}\",\n    \"BrowserInfo\": {\n        \"AcceptHeader\": \"text/html, application/xhtml+xml, application/xml;q=0.9, /;q=0.8\",\n        \"JavaEnabled\": true,\n        \"Language\": \"FR-FR\",\n        \"ColorDepth\": 4,\n        \"ScreenHeight\": 1800,\n        \"ScreenWidth\": 400,\n        \"TimeZoneOffset\": 60,\n        \"UserAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148\",\n        \"JavascriptEnabled\": true\n    },\n        \"Tag\": \"Created using the Mangopay API Postman collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorization](https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorization)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Deposit Preauthorization",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/deposit-preauthorizations/{{DEPOSIT_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Deposit Preauthorized PayIn prior to complement",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/deposit-preauthorized/direct/capture-with-complement",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\r\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\r\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\r\n    \"DebitedFunds\": {\r\n        \"Currency\": \"{{CURRENCY}}\",\r\n        \"Amount\": 20000\r\n    },\r\n    \"Fees\": {\r\n        \"Currency\": \"{{CURRENCY}}\",\r\n        \"Amount\": 1000\r\n    },\r\n    \"DepositId\": \"{{DEPOSIT_ID}}\",\r\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\r\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorized-payin-prior-to-complement](https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorized-payin-prior-to-complement)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Deposit Preauthorized PayIn complement",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/deposit-preauthorized/direct/complement",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\r\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\r\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\r\n    \"DebitedFunds\": {\r\n        \"Currency\": \"{{CURRENCY}}\",\r\n        \"Amount\": 10000\r\n    },\r\n    \"Fees\": {\r\n        \"Currency\": \"{{CURRENCY}}\",\r\n        \"Amount\": 1000\r\n    },\r\n    \"DepositId\": \"{{DEPOSIT_ID}}\",\r\n    \"Tag\": \"Created using the Mangopay API Collection postman\"\r\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorized-payin-complement](https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorized-payin-complement)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Deposit Preauthorization",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/deposit-preauthorizations/card/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 20000\n    },\n    \"CardId\": \"{{CARD_CHALLENGE_FLOW_ID}}\",\n    \"SecureModeReturnURL\": \"https://mangopay.com/docs/please-ignore\",\n    \"Culture\": \"{{CULTURE}}\",\n    \"IpAddress\": \"{{$randomIPV6}}\",\n    \"BrowserInfo\": {\n        \"AcceptHeader\": \"text/html, application/xhtml+xml, application/xml;q=0.9, /;q=0.8\",\n        \"JavaEnabled\": true,\n        \"Language\": \"FR-FR\",\n        \"ColorDepth\": 4,\n        \"ScreenHeight\": 1800,\n        \"ScreenWidth\": 400,\n        \"TimeZoneOffset\": 60,\n        \"UserAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148\",\n        \"JavascriptEnabled\": true\n    },\n        \"Tag\": \"Created using the Mangopay API Postman collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorization](https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorization)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Deposit Preauthorization",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/deposit-preauthorizations/{{DEPOSIT_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Cancel a Deposit Preauthorization or request a no-show",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/deposit-preauthorizations/{{DEPOSIT_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"PaymentStatus\": \"NO_SHOW_REQUESTED\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#cancel-deposit-preauthorization-request-no-show](https://mangopay.com/docs/endpoints/preauthorizations#cancel-deposit-preauthorization-request-no-show)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Deposit Preauthorized PayIn complement",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/deposit-preauthorized/direct/complement",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\r\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\r\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\r\n    \"DebitedFunds\": {\r\n        \"Currency\": \"{{CURRENCY}}\",\r\n        \"Amount\": 10000\r\n    },\r\n    \"Fees\": {\r\n        \"Currency\": \"{{CURRENCY}}\",\r\n        \"Amount\": 1000\r\n    },\r\n    \"DepositId\": \"{{DEPOSIT_ID}}\",\r\n    \"Tag\": \"Created using the Mangopay API Collection postman\"\r\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorized-payin-complement](https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorized-payin-complement)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Natural User (Payer)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/natural",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"FirstName\": \"{{$randomFirstName}}\",\n    \"LastName\": \"{{$randomLastName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"Address\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"UserCategory\": \"PAYER\",\n    \"TermsAndConditionsAccepted\": false,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/users#create-natural-user](https://mangopay.com/docs/endpoints/users#create-natural-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Natural User (Owner)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/natural",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"FirstName\": \"{{$randomFirstName}}\",\n    \"LastName\": \"{{$randomLastName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"Address\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"Birthday\": 652117514,\n    \"CountryOfResidence\": \"FR\",\n    \"Nationality\": \"FR\",\n    \"UserCategory\": \"OWNER\",\n    \"TermsAndConditionsAccepted\": true,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/users#create-natural-user](https://mangopay.com/docs/endpoints/users#create-natural-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Update a Natural User (Owner)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/natural/{{USER_NATURAL_OWNER}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"FirstName\": \"{{$randomFirstName}}\",\n    \"LastName\": \"{{$randomLastName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"Address\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"Birthday\": 652117514,\n    \"CountryOfResidence\": \"FR\",\n    \"Nationality\": \"FR\",\n    \"UserCategory\": \"OWNER\",\n    \"TermsAndConditionsAccepted\": true,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/users#update-natural-user](https://mangopay.com/docs/endpoints/users#update-natural-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Legal User (Payer)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/legal",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"LegalPersonType\": \"BUSINESS\",\n    // \"LegalPersonType\": \"ORGANIZATION\",\n    // \"LegalPersonType\": \"SOLETRADER\",\n    \"Name\": \"{{$randomCompanyName}}\",\n    \"LegalRepresentativeAddress\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"LegalRepresentativeFirstName\": \"{{$randomFirstName}}\",\n    \"LegalRepresentativeLastName\": \"{{$randomLastName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"UserCategory\": \"PAYER\",\n    \"TermsAndConditionsAccepted\": false,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/users#create-legal-user](https://mangopay.com/docs/endpoints/users#create-legal-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Legal User (Owner)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/legal",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"HeadquartersAddress\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"LegalPersonType\": \"BUSINESS\",\n    // \"LegalPersonType\": \"ORGANIZATION\",\n    // \"LegalPersonType\": \"SOLETRADER\",\n    \"Name\": \"{{$randomCompanyName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"CompanyNumber\": \"{{$randomInt}}\",\n    \"LegalRepresentativeAddress\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"LegalRepresentativeBirthday\": 652117514,\n    \"LegalRepresentativeCountryOfResidence\": \"FR\",\n    \"LegalRepresentativeNationality\": \"FR\",\n    \"LegalRepresentativeEmail\": \"{{$randomEmail}}\",\n    \"LegalRepresentativeFirstName\": \"{{$randomFirstName}}\",\n    \"LegalRepresentativeLastName\": \"{{$randomLastName}}\",\n    \"UserCategory\": \"OWNER\",\n    \"TermsAndConditionsAccepted\": true,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/users#create-legal-user](https://mangopay.com/docs/endpoints/users#create-legal-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Update a Legal User",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/legal/{{USER_LEGAL_OWNER}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"HeadquartersAddress\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"LegalPersonType\": \"BUSINESS\",\n    // \"LegalPersonType\": \"ORGANIZATION\",\n    // \"LegalPersonType\": \"SOLETRADER\",\n    \"Name\": \"{{$randomCompanyName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"CompanyNumber\": \"{{$randomInt}}\",\n    \"LegalRepresentativeAddress\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"LegalRepresentativeBirthday\": 652117514,\n    \"LegalRepresentativeCountryOfResidence\": \"FR\",\n    \"LegalRepresentativeNationality\": \"FR\",\n    \"LegalRepresentativeEmail\": \"{{$randomEmail}}\",\n    \"LegalRepresentativeFirstName\": \"{{$randomFirstName}}\",\n    \"LegalRepresentativeLastName\": \"{{$randomLastName}}\",\n    \"UserCategory\": \"OWNER\",\n    \"TermsAndConditionsAccepted\": true,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/users#update-legal-user](https://mangopay.com/docs/endpoints/users#update-legal-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List all Users",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/users#list-users](https://mangopay.com/docs/endpoints/users#list-users)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a User",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/users#view-user](https://mangopay.com/docs/endpoints/users#view-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View User EMoney",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_NATURAL_OWNER}}/emoney",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/user-emoney#view-user-emoney](https://mangopay.com/docs/endpoints/user-emoney#view-user-emoney)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Wallet (Natural User Payer)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Idempotency-Key",
                    "value": "{{$guid}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Owners\": [\"{{USER_NATURAL_PAYER}}\"],\n    \"Description\": \"Description of the user's wallet\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/wallets#create-wallet](https://mangopay.com/docs/endpoints/wallets#create-wallet)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Wallet (Natural User Payer) PLN",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Owners\": [\"{{USER_NATURAL_PAYER}}\"],\n    \"Description\": \"Description of the user's wallet\",\n    \"Currency\": \"PLN\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/wallets#create-wallet](https://mangopay.com/docs/endpoints/wallets#create-wallet)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Wallet (Natural User Owner)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Owners\": [\"{{USER_NATURAL_OWNER}}\"],\n    \"Description\": \"Description of the user's wallet\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/wallets#create-wallet](https://mangopay.com/docs/endpoints/wallets#create-wallet)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Wallet (Legal User Owner)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Owners\": [\"{{USER_LEGAL_OWNER}}\"],\n    \"Description\": \"Description of the user's wallet\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/wallets#create-wallet](https://mangopay.com/docs/endpoints/wallets#create-wallet)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Update a Wallet (Natural User Payer)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets/{{USER_NATURAL_PAYER_WALLET_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Description\": \"Description of the user's wallet\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/wallets#update-wallet](https://mangopay.com/docs/endpoints/wallets#update-wallet)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Update a Wallet (Natural User Owner)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets/{{USER_NATURAL_OWNER_WALLET_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Description\": \"Description of the user's wallet\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/wallets#update-wallet](https://mangopay.com/docs/endpoints/wallets#update-wallet)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Update a Wallet (Legal User Owner)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets/{{USER_LEGAL_OWNER_WALLET_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Description\": \"Description of the user's wallet\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/wallets#update-wallet](https://mangopay.com/docs/endpoints/wallets#update-wallet)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Wallet (Natural User Payer)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets/{{USER_NATURAL_PAYER_WALLET_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/wallets#view-wallet](https://mangopay.com/docs/endpoints/wallets#view-wallet)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Wallet (Natural User Owner)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets/{{USER_NATURAL_OWNER_WALLET_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/wallets#view-wallet](https://mangopay.com/docs/endpoints/wallets#view-wallet)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Wallets for a User",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/wallets#list-wallets-user](https://mangopay.com/docs/endpoints/wallets#list-wallets-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Transactions for a Wallet (Natural User Payer)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets/{{USER_NATURAL_PAYER_WALLET_ID}}/transactions",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/wallets#list-transactions-wallet](https://mangopay.com/docs/endpoints/wallets#list-transactions-wallet)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Card Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"UserId\": \"{{USER_NATURAL_PAYER}}\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"CardType\": \"CB_VISA_MASTERCARD\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#create-card-registration](https://mangopay.com/docs/endpoints/direct-card-payins#create-card-registration)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Tokenize the Card (Challenge Flow Card)",
        "api_call": "{{CARD_REGISTRATION_URL}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "urlencoded",
                "urlencoded": [
                    {
                        "key": "accessKeyRef",
                        "value": "{{ACCESS_KEY}}",
                        "type": "text"
                    },
                    {
                        "key": "data",
                        "value": "{{PREREGISTRATION_DATA}}",
                        "type": "text"
                    },
                    {
                        "key": "cardNumber",
                        "value": "4970105181818183",
                        "type": "text"
                    },
                    {
                        "key": "cardExpirationDate",
                        "value": "1229",
                        "type": "text"
                    },
                    {
                        "key": "cardCvx",
                        "value": "123",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#tokenize-card](https://mangopay.com/docs/endpoints/direct-card-payins#tokenize-card)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Update a Card Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations/{{CARD_REGISTRATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"RegistrationData\": \"{{REGISTRATION_DATA_KEY}}\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#update-card-registration](https://mangopay.com/docs/endpoints/direct-card-payins#update-card-registration)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Card Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations/{{CARD_REGISTRATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#view-card-registration](https://mangopay.com/docs/endpoints/direct-card-payins#view-card-registration)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Deactivate a card",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cards/{{CARD_CHALLENGE_FLOW_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Active\": false\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#deactivate-card](https://mangopay.com/docs/endpoints/direct-card-payins#deactivate-card)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Card",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cards/{{CARD_CHALLENGE_FLOW_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#view-card](https://mangopay.com/docs/endpoints/direct-card-payins#view-card)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Cards for a User",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_NATURAL_PAYER}}/cards",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#list-cards-user](https://mangopay.com/docs/endpoints/direct-card-payins#list-cards-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Cards for a Fingerprint",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cards/fingerprints/{{CARD_FINGERPRINT}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#list-cards-fingerprint](https://mangopay.com/docs/endpoints/direct-card-payins#list-cards-fingerprint)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Users for a Card Fingerprint",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cards/fingerprints/{{CARD_FINGERPRINT}}/users",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#list-users-card-fingerprint](https://mangopay.com/docs/endpoints/direct-card-payins#list-users-card-fingerprint)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Transactions for a Card Fingerprint",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cards/fingerprints/{{CARD_FINGERPRINT}}/transactions",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#list-transactions-card-fingerprint](https://mangopay.com/docs/endpoints/direct-card-payins#list-transactions-card-fingerprint)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Card Validation",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cards/{{CARD_CHALLENGE_FLOW_ID}}/validation",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\r\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\r\n    \"SecureModeReturnURL\": \"https://mangopay.com/docs/please-ignore\",\r\n    \"IpAddress\": \"{{$randomIPV6}}\",\r\n    \"Tag\": \"Created using the Mangopay API Postman collection\",\r\n    \"BrowserInfo\": {\r\n        \"AcceptHeader\": \"application/json,text/javascript,*/*;q=0.01<\",\r\n        \"JavaEnabled\": true,\r\n        \"Language\": \"fr\",\r\n        \"ColorDepth\": 32,\r\n        \"ScreenHeight\": 667,\r\n        \"ScreenWidth\": 375,\r\n        \"TimeZoneOffset\": \"-120\",\r\n        \"UserAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148\",\r\n        \"JavascriptEnabled\": true\r\n      }\r\n}\r\n",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/card-validations#create-card-validation](https://mangopay.com/docs/endpoints/card-validations#create-card-validation)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Card Validation",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cards/{{CARD_CHALLENGE_FLOW_ID}}/validation/{{CARD_VALIDATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/card-validations#view-card-validation](https://mangopay.com/docs/endpoints/card-validations#view-card-validation)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Card Direct PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/card/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedUserId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 0\n    },\n    \"SecureModeReturnURL\": \"https://mangopay.com/docs/please-ignore\",\n    \"CardId\": \"{{CARD_CHALLENGE_FLOW_ID}}\",\n    \"StatementDescriptor\": \"Mangopay\",\n    \"Billing\": {\n        \"FirstName\": \"{{$randomFirstName}}\",\n        \"LastName\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Shipping\": {\n        \"FirstName\": \"{{$randomFirstName}}\",\n        \"LastName\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"Culture\": \"{{CULTURE}}\",\n    \"IpAddress\": \"{{$randomIPV6}}\",\n    \"BrowserInfo\": {\n        \"AcceptHeader\": \"text/html, application/xhtml+xml, application/xml;q=0.9, /;q=0.8\",\n        \"JavaEnabled\": true,\n        \"Language\": \"FR-FR\",\n        \"ColorDepth\": 4,\n        \"ScreenHeight\": 1800,\n        \"ScreenWidth\": 400,\n        \"TimeZoneOffset\": 60,\n        \"UserAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148\",\n        \"JavascriptEnabled\": true\n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#create-direct-card-payin](https://mangopay.com/docs/endpoints/direct-card-payins#create-direct-card-payin)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Recurring PayIn Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/recurringpayinregistrations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CardId\": \"{{CARD_CHALLENGE_FLOW_ID}}\",\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"FirstTransactionDebitedFunds\": {\n        \"Currency\": \"EUR\",\n        \"Amount\": 10000\n    },\n    \"FirstTransactionFees\": {\n        \"Currency\": \"EUR\",\n        \"Amount\": 1000\n    },\n    \"Billing\": {\n        \"FirstName\": \"{{$randomFirstName}}\",\n        \"LastName\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Shipping\": {\n        \"FirstName\": \"{{$randomFirstName}}\",\n        \"LastName\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Frequency\": \"Monthly\",\n    \"FixedNextAmount\": true,\n    // \"EndDate\": 1463494366,\n    \"FractionedPayment\": false,\n    // \"FreeCycles\": 2,\n    \"Migration\": false\n    // \"NextTransactionDebitedFunds\": {\n    //    \"Currency\": \"EUR\",\n    //    \"Amount\": 10000\n    // },\n    // \"NextTransactionFees\": {\n    //    \"Currency\": \"EUR\",\n    //    \"Amount\": 10000\n    // },\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/recurring-card-payins#create-recurring-payin-registration](https://mangopay.com/docs/endpoints/recurring-card-payins#create-recurring-payin-registration)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Recurring PayIn Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/recurringpayinregistrations/{{RECURRING_PAYIN_REGISTRATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/recurring-card-payins#view-recurring-payin-registration](https://mangopay.com/docs/endpoints/recurring-card-payins#view-recurring-payin-registration)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Recurring PayIn CIT",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/recurring/card/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"RecurringPayinRegistrationId\": \"{{RECURRING_PAYIN_REGISTRATION_ID}}\",\n    \"IpAddress\": \"{{$randomIPV6}}\",\n    \"BrowserInfo\": {\n        \"AcceptHeader\": \"text/html, application/xhtml+xml, application/xml;q=0.9, /;q=0.8\",\n        \"JavaEnabled\": true,\n        \"Language\": \"FR-FR\",\n        \"ColorDepth\": 4,\n        \"ScreenHeight\": 1800,\n        \"ScreenWidth\": 400,\n        \"TimeZoneOffset\": 60,\n        \"UserAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148\",\n        \"JavascriptEnabled\": true       \n    },\n    \"SecureModeReturnURL\": \"https://mangopay.com/docs/please-ignore\",\n    \"StatementDescriptor\": \"POSTMAN\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10000\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 1000\n    }   \n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/recurring-card-payins#create-recurring-payin-cit](https://mangopay.com/docs/endpoints/recurring-card-payins#create-recurring-payin-cit)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Recurring PayIn MIT",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/recurring/card/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"RecurringPayinRegistrationId\": \"{{RECURRING_PAYIN_REGISTRATION_ID}}\",\n    \"StatementDescriptor\": \"POSTMAN\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10000\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 1000\n    }   \n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/recurring-card-payins#create-recurring-payin-mit](https://mangopay.com/docs/endpoints/recurring-card-payins#create-recurring-payin-mit)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Update a Recurring PayIn Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/recurringpayinregistrations/{{RECURRING_PAYIN_REGISTRATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"CardId\": \"{{CARD_CHALLENGE_FLOW_ID}}\",\n    \"Status\": \"ENDED\",\n    \"Billing\": {\n        \"FirstName\": \"{{$randomFirstName}}\",\n        \"LastName\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Shipping\": {\n        \"FirstName\": \"{{$randomFirstName}}\",\n        \"LastName\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/recurring-card-payins#update-recurring-payin-registration](https://mangopay.com/docs/endpoints/recurring-card-payins#update-recurring-payin-registration)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Preauthorized PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/preauthorized/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10000\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 1000\n    },\n    \"PreauthorizationId\": \"{{PREAUTHORIZATION_ID}}\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#create-preauthorized-payin](https://mangopay.com/docs/endpoints/preauthorizations#create-preauthorized-payin)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Deposit Preauthorized PayIn without complement",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/deposit-preauthorized/direct/full-capture",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10000\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 1000\n    },\n    \"DepositId\": \"{{DEPOSIT_ID}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorized-payin](https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorized-payin)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Deposit Preauthorized PayIn prior to complement",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/deposit-preauthorized/direct/capture-with-complement",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\r\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\r\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\r\n    \"DebitedFunds\": {\r\n        \"Currency\": \"{{CURRENCY}}\",\r\n        \"Amount\": 20000\r\n    },\r\n    \"Fees\": {\r\n        \"Currency\": \"{{CURRENCY}}\",\r\n        \"Amount\": 1000\r\n    },\r\n    \"DepositId\": \"{{DEPOSIT_ID}}\",\r\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\r\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Deposit Preauthorized PayIn complement",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/deposit-preauthorized/direct/complement",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\r\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\r\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\r\n    \"DebitedFunds\": {\r\n        \"Currency\": \"{{CURRENCY}}\",\r\n        \"Amount\": 10000\r\n    },\r\n    \"Fees\": {\r\n        \"Currency\": \"{{CURRENCY}}\",\r\n        \"Amount\": 1000\r\n    },\r\n    \"DepositId\": \"{{DEPOSIT_ID}}\",\r\n    \"Tag\": \"Created using the Mangopay API Collection postman\"\r\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Web Card PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/card/web",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 12000\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 1000\n    },\n    \"ReturnURL\": \"https://mangopay.com/docs/please-ignore\",\n    \"CardType\": \"CB_VISA_MASTERCARD\",\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"Culture\": \"{{CULTURE}}\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/web-card-payins#create-web-card-payin](https://mangopay.com/docs/endpoints/web-card-payins#create-web-card-payin)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Web Card PayIn (P24)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/card/web",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"PLN\",\n        \"Amount\": 12000\n    },\n    \"Fees\": {\n        \"Currency\": \"PLN\",\n        \"Amount\": 1000\n    },\n    \"ReturnURL\": \"https://mangopay.com/docs/please-ignore\",\n    \"CardType\": \"P24\",\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_PLN_WALLET_ID}}\",\n    \"Culture\": \"{{CULTURE}}\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/web-card-payins#create-web-card-payin](https://mangopay.com/docs/endpoints/web-card-payins#create-web-card-payin)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View card details for a Web Card PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/card/web/{{WEB_PAYIN_ID}}/extended",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/web-card-payins#view-card-details-web-card-payin](https://mangopay.com/docs/endpoints/web-card-payins#view-card-details-web-card-payin)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Direct Direct-Debit PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/directdebit/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\r\n    \"AuthorId\":\"{{USER_LEGAL_OWNER}}\",\r\n    \"CreditedUserId\":\"{{USER_LEGAL_OWNER}}\",\r\n    \"CreditedWalletId\":\"{{USER_LEGAL_OWNER_WALLET_ID}}\",\r\n    \"DebitedFunds\":{\r\n        \"Currency\":\"{{CURRENCY}}\",\r\n        \"Amount\":1200\r\n    },\r\n    \"Fees\":{\r\n        \"Currency\":\"{{CURRENCY}}\",\r\n        \"Amount\":12\r\n    },\r\n    \"Tag\":\"Created using Mangopay API Postman Collection\",\r\n    \"MandateId\":\"{{MANDATE_ID}}\",\r\n    \"StatementDescriptor\":\"Mangopay\"\r\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-direct-debit-payins#create-direct-direct-debit-payin](https://mangopay.com/docs/endpoints/direct-direct-debit-payins#create-direct-direct-debit-payin)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Web Direct-Debit PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/directdebit/web",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\r\n    \"DirectDebitType\": \"SOFORT\",\r\n    \"AuthorId\":\"{{USER_LEGAL_OWNER}}\",\r\n    \"CreditedUserId\":\"{{USER_LEGAL_OWNER}}\",\r\n    \"CreditedWalletId\":\"{{USER_LEGAL_OWNER_WALLET_ID}}\",\r\n    \"DebitedFunds\":{\r\n        \"Currency\":\"{{CURRENCY}}\",\r\n        \"Amount\":1200\r\n    },\r\n    \"Fees\":{\r\n        \"Currency\":\"{{CURRENCY}}\",\r\n        \"Amount\":12\r\n    },\r\n    \"Tag\":\"Created using Mangopay API Postman Collection\",\r\n    \"ReturnURL\": \"https://mangopay.com/docs/please-ignore\",\r\n    \"Culture\": \"EN\"\r\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/web-direct-debit-payins#create-web-direct-debit-payin](https://mangopay.com/docs/endpoints/web-direct-debit-payins#create-web-direct-debit-payin)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Direct Bank Wire PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/bankwire/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\r\n    \"AuthorId\":\"{{USER_LEGAL_OWNER}}\",\r\n    \"CreditedUserId\":\"{{USER_LEGAL_OWNER}}\",\r\n    \"CreditedWalletId\":\"{{USER_LEGAL_OWNER_WALLET_ID}}\",\r\n    \"DeclaredDebitedFunds\":{\r\n        \"Currency\":\"{{CURRENCY}}\",\r\n        \"Amount\":1200\r\n    },\r\n    \"DeclaredFees\":{\r\n        \"Currency\":\"{{CURRENCY}}\",\r\n        \"Amount\":12\r\n    },\r\n    \"Tag\":\"Created using Mangopay API Postman Collection\"\r\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-bank-wires#create-direct-bank-wire-payin](https://mangopay.com/docs/endpoints/direct-bank-wires#create-direct-bank-wire-payin)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create an iDEAL PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/payment-methods/ideal",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 2000\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 0\n    },\n    \"ReturnURL\": \"http://www.mangopay.com/docs/please-ignore\",\n    \"Tag\": \"Created using the Mangopay API Postman collection\",\n    \"StatementDescriptor\": \"Mangopay\",\n    \"Bic\": \"INGBNL2A\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/ideal#create-ideal-payin](https://mangopay.com/docs/endpoints/ideal#create-ideal-payin)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create an MB WAY PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/payment-methods/mbway",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"EUR\",\n        \"Amount\": 5000\n    },\n    \"Fees\": {\n        \"Currency\": \"EUR\",\n        \"Amount\": 0\n    },\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"StatementDescriptor\": \"Mangopay\",\n    \"Tag\": \"Created using the Mangopay API Postman collection\",\n    \"Phone\": \"33#654417453\" // enter your phone number to test\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Multibanco PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/payment-methods/multibanco",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"EUR\",\n        \"Amount\": 1000\n    },\n    \"Fees\": {\n        \"Currency\": \"EUR\",\n        \"Amount\": 0\n    },\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"StatementDescriptor\": \"Mangopay\",\n    \"Tag\": \"Created using the Mangopay API Postman collection\",\n    \"ReturnURL\": \"http://www.mangopay.com/docs/please-ignore\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/{{PAYIN_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#view-payin](https://mangopay.com/docs/endpoints/direct-card-payins#view-payin)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Preauthorization",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/preauthorizations/card/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "/*\n    To validate the preauthorization, don't forget to click on SecureModeRedirectURL in the response\n*/\n{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10000\n    },\n    \"Billing\": {\n        \"Firstname\": \"{{$randomFirstName}}\",\n        \"Lastname\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Shipping\": {\n        \"Firstname\": \"{{$randomFirstName}}\",\n        \"Lastname\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Culture\": \"{{CULTURE}}\",\n    \"CardId\": \"{{CARD_CHALLENGE_FLOW_ID}}\",\n    \"SecureModeReturnURL\": \"https://mangopay.com/docs/please-ignore\",\n    \"IpAddress\": \"{{$randomIPV6}}\",\n    \"BrowserInfo\": {\n        \"AcceptHeader\": \"text/html, application/xhtml+xml, application/xml;q=0.9, /;q=0.8\",\n        \"JavaEnabled\": true,\n        \"Language\": \"FR-FR\",\n        \"ColorDepth\": 4,\n        \"ScreenHeight\": 1800,\n        \"ScreenWidth\": 400,\n        \"TimeZoneOffset\": 60,\n        \"UserAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148\",\n        \"JavascriptEnabled\": true\n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#create-preauthorization](https://mangopay.com/docs/endpoints/preauthorizations#create-preauthorization)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Preauthorization",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/preauthorizations/{{PREAUTHORIZATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#view-preauthorization](https://mangopay.com/docs/endpoints/preauthorizations#view-preauthorization)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Preauthorized PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/preauthorized/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10000\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 1000\n    },\n    \"PreauthorizationId\": \"{{PREAUTHORIZATION_ID}}\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#create-preauthorized-payin](https://mangopay.com/docs/endpoints/preauthorizations#create-preauthorized-payin)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Cancel or validate a Preauthorization",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/preauthorizations/{{PREAUTHORIZATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "// Canceling is possible when no funds have been captured. Validating is possible when the funds have partially been captured.\n\n{\n    \"PaymentStatus\": \"CANCELED\"\n    // \"PaymentStatus\": \"VALIDATED\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#cancel-validate-preauthorization](https://mangopay.com/docs/endpoints/preauthorizations#cancel-validate-preauthorization)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Preauthorizations for a Card",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cards/{{CARD_CHALLENGE_FLOW_ID}}/preauthorizations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#list-preauthorizations-card](https://mangopay.com/docs/endpoints/preauthorizations#list-preauthorizations-card)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Preauthorizations for a Card Fingerprint",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cards/fingerprints/{{CARD_FINGERPRINT}}/preauthorizations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#list-preauthorizations-card](https://mangopay.com/docs/endpoints/preauthorizations#list-preauthorizations-card)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Preauthorizations for a User",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_NATURAL_PAYER}}/preauthorizations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#list-preauthorizations-user](https://mangopay.com/docs/endpoints/preauthorizations#list-preauthorizations-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Deposit Preauthorization",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/deposit-preauthorizations/card/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 20000\n    },\n    \"CardId\": \"{{CARD_CHALLENGE_FLOW_ID}}\",\n    \"SecureModeReturnURL\": \"https://mangopay.com/docs/please-ignore\",\n    \"Culture\": \"{{CULTURE}}\",\n    \"IpAddress\": \"{{$randomIPV6}}\",\n    \"BrowserInfo\": {\n        \"AcceptHeader\": \"text/html, application/xhtml+xml, application/xml;q=0.9, /;q=0.8\",\n        \"JavaEnabled\": true,\n        \"Language\": \"FR-FR\",\n        \"ColorDepth\": 4,\n        \"ScreenHeight\": 1800,\n        \"ScreenWidth\": 400,\n        \"TimeZoneOffset\": 60,\n        \"UserAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148\",\n        \"JavascriptEnabled\": true\n    },\n        \"Tag\": \"Created using the Mangopay API Postman collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorization](https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorization)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Deposit Preauthorization",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/deposit-preauthorizations/{{DEPOSIT_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#view-deposit-preauthorization](https://mangopay.com/docs/endpoints/preauthorizations#view-deposit-preauthorization)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Deposit Preauthorized PayIn without complement",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/deposit-preauthorized/direct/full-capture",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10000\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 1000\n    },\n    \"DepositId\": \"{{DEPOSIT_ID}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorized-payin-without-complement](https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorized-payin-without-complement)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Deposit Preauthorized PayIn prior to complement",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/deposit-preauthorized/direct/capture-with-complement",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\r\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\r\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\r\n    \"DebitedFunds\": {\r\n        \"Currency\": \"{{CURRENCY}}\",\r\n        \"Amount\": 20000\r\n    },\r\n    \"Fees\": {\r\n        \"Currency\": \"{{CURRENCY}}\",\r\n        \"Amount\": 1000\r\n    },\r\n    \"DepositId\": \"{{DEPOSIT_ID}}\",\r\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\r\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorized-payin-prior-to-complement](https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorized-payin-prior-to-complement)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Deposit Preauthorized PayIn complement",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/deposit-preauthorized/direct/complement",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\r\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\r\n    \"CreditedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\r\n    \"DebitedFunds\": {\r\n        \"Currency\": \"{{CURRENCY}}\",\r\n        \"Amount\": 10000\r\n    },\r\n    \"Fees\": {\r\n        \"Currency\": \"{{CURRENCY}}\",\r\n        \"Amount\": 1000\r\n    },\r\n    \"DepositId\": \"{{DEPOSIT_ID}}\",\r\n    \"Tag\": \"Created using the Mangopay API Collection postman\"\r\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorized-payin-complement](https://mangopay.com/docs/endpoints/preauthorizations#create-deposit-preauthorized-payin-complement)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Cancel a Deposit Preauthorization or request a no-show",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/deposit-preauthorizations/{{DEPOSIT_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"PaymentStatus\": \"CANCELED\" // \"NO_SHOW_REQUESTED\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#cancel-deposit-preauthorization-request-no-show](https://mangopay.com/docs/endpoints/preauthorizations#cancel-deposit-preauthorization-request-no-show)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Deposit Preauthorizations for a Card",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cards/{{CARD_CHALLENGE_FLOW_ID}}/deposit-preauthorizations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#list-deposit-preathorization-card](https://mangopay.com/docs/endpoints/preauthorizations#list-deposit-preathorization-card)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Deposit Preauthorizations for a Card Fingerprint",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cards/fingerprints/{{CARD_FINGERPRINT}}/deposit-preauthorizations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#list-deposit-preathorization-card-fingerprint](https://mangopay.com/docs/endpoints/preauthorizations#list-deposit-preathorization-card-fingerprint)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Deposit Preauthorizations for a User",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_NATURAL_PAYER}}/deposit-preauthorizations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/preauthorizations#list-deposit-preathorization-user](https://mangopay.com/docs/endpoints/preauthorizations#list-deposit-preathorization-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Transfer",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/transfers",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedUserId\": \"{{USER_NATURAL_OWNER}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 500\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10\n    },   \n    \"DebitedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"CreditedWalletId\": \"{{USER_NATURAL_OWNER_WALLET_ID}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/transfers#create-transfer](https://mangopay.com/docs/endpoints/transfers#create-transfer)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Transfer",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/transfers/{{TRANSFER_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CreditedUserId\": \"{{USER_NATURAL_OWNER}}\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 500\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10\n    },   \n    \"DebitedWalletId\": \"{{USER_NATURAL_PAYER_WALLET_ID}}\",\n    \"CreditedWalletId\": \"{{USER_NATURAL_OWNER_WALLET_ID}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/transfers#view-transfer](https://mangopay.com/docs/endpoints/transfers#view-transfer)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View an indicative Conversion Rate",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/conversions/rate/{{DEBITED_CURRENCY}}/{{CREDITED_CURRENCY}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create an Instant Conversion",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/conversions/instant-conversion",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "/*\nAuthor converts funds between two wallets they own, from debited currency to credited currency.\nSet variables first, or else this call also sets them from the response.\n*/\n{\n  \"AuthorId\": \"{{AUTHOR_ID}}\",\n  \"CreditedWalletId\": \"{{AUTHOR_CREDITED_WALLET_ID}}\",\n  \"DebitedWalletId\": \"{{AUTHOR_DEBITED_WALLET_ID}}\",\n  \"DebitedFunds\": {\n       \"Currency\": \"{{DEBITED_CURRENCY}}\",\n       \"Amount\": 1000\n   },\n  \"CreditedFunds\": {\n       \"Currency\": \"{{CREDITED_CURRENCY}}\"\n   },\n  \"Tag\": \"Created using the Mangopay API Postman collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/conversions#create-instant-conversion](https://mangopay.com/docs/endpoints/conversions#create-instant-conversion)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Conversion",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/conversions/{{CONVERSION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/conversions#view-instant-conversion](https://mangopay.com/docs/endpoints/conversions#view-instant-conversion)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a KYC Document",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_NATURAL_OWNER}}/kyc/documents",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"Type\": \"IDENTITY_PROOF\"\n    // \"Type\": \"REGISTRATION_PROOF\"\n    // \"Type\": \"ARTICLES_OF_ASSOCIATION\"\n    // \"Type\": \"SHAREHOLDER_DECLARATION\"\n    // \"Type\": \"ADDRESS_PROOF\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/kyc-documents#create-kyc-document-page](https://mangopay.com/docs/endpoints/kyc-documents#create-kyc-document-page)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a KYC Document Page",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_NATURAL_OWNER}}/kyc/documents/{{KYC_DOCUMENT_ID}}/pages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"File\": \"\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/kyc-documents#create-kyc-document-page](https://mangopay.com/docs/endpoints/kyc-documents#create-kyc-document-page)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Submit a KYC Document",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_NATURAL_OWNER}}/kyc/documents/{{KYC_DOCUMENT_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Status\": \"VALIDATION_ASKED\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/kyc-documents#submit-kyc-document](https://mangopay.com/docs/endpoints/kyc-documents#submit-kyc-document)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a KYC Document",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/kyc/documents/{{KYC_DOCUMENT_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/kyc-documents#view-kyc-document](https://mangopay.com/docs/endpoints/kyc-documents#view-kyc-document)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List KYC Documents for a User",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_NATURAL_OWNER}}/kyc/documents",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/kyc-documents#list-kyc-documents-user](https://mangopay.com/docs/endpoints/kyc-documents#list-kyc-documents-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List all KYC Documents",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/kyc/documents",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/kyc-documents#list-kyc-documents](https://mangopay.com/docs/endpoints/kyc-documents#list-kyc-documents)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a UBO Declaration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}//users/{{USER_LEGAL_OWNER}}/kyc/ubodeclarations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                }
            ]
        },
        "functionality": "[https://mangopay.com/docs/endpoints/ubo-declarations#create-ubo-declaration](https://mangopay.com/docs/endpoints/ubo-declarations#create-ubo-declaration)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a UBO",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/kyc/ubodeclarations/{{UBO_DECLARATION_ID}}/ubos",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"FirstName\": \"{{$randomFirstName}}\",\n    \"LastName\": \"{{$randomLastName}}\",\n    \"Address\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"Nationality\": \"FR\",\n    \"Birthday\": 652117514,\n    \"Birthplace\": {\n        \"City\": \"Paris\",\n        \"Country\": \"FR\"\n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/ubo-declarations#create-ubo](https://mangopay.com/docs/endpoints/ubo-declarations#create-ubo)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a UBO Declaration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/kyc/ubodeclarations/{{UBO_DECLARATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/ubo-declarations#view-ubo-declaration](https://mangopay.com/docs/endpoints/ubo-declarations#view-ubo-declaration)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a UBO",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/kyc/ubodeclarations/{{UBO_DECLARATION_ID}}/ubos/{{UBO_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/ubo-declarations#view-ubo](https://mangopay.com/docs/endpoints/ubo-declarations#view-ubo)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Update a UBO",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/kyc/ubodeclarations/{{UBO_DECLARATION_ID}}/ubos/{{UBO_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"FirstName\": \"{{$randomFirstName}}\",\n    \"LastName\": \"{{$randomLastName}}\",\n    \"Address\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"Nationality\": \"FR\",\n    \"Birthday\": 652117514,\n    \"Birthplace\": {\n        \"City\": \"Paris\",\n        \"Country\": \"FR\"\n    },\n    \"isActive\": true\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/ubo-declarations#update-ubo](https://mangopay.com/docs/endpoints/ubo-declarations#update-ubo)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Submit a UBO Declaration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/kyc/ubodeclarations/{{UBO_DECLARATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Status\": \"VALIDATION_ASKED\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/ubo-declarations#submit-ubo-declaration](https://mangopay.com/docs/endpoints/ubo-declarations#submit-ubo-declaration)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List UBO Declarations for a user",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/kyc/ubodeclarations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/ubo-declarations#list-ubo-declarations-user](https://mangopay.com/docs/endpoints/ubo-declarations#list-ubo-declarations-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create an IBAN Bank Account",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/bankaccounts/iban",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"OwnerName\": \"{{$randomFullName}}\",\n    \"OwnerAddress\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"IBAN\": \"FR7630004000031234567890143\",\n    \"BIC\": \"BNPAFRPP\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/payouts#create-iban-bank-account](https://mangopay.com/docs/endpoints/payouts#create-iban-bank-account)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a US Bank Account",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/bankaccounts/us",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"OwnerName\": \"{{$randomFullName}}\",\n    \"OwnerAddress\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"AccountNumber\": \"11696419\",\n    \"ABA\": \"071000288\",\n    \"DepositAccountType\": \"CHECKING\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/payouts#create-us-bank-account](https://mangopay.com/docs/endpoints/payouts#create-us-bank-account)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a CA Bank Account",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/bankaccounts/ca",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"OwnerName\": \"{{$randomFullName}}\",\n    \"OwnerAddress\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"AccountNumber\": \"11696419\",\n    \"BranchCode\": \"00152\",\n    \"InstitutionNumber\": \"614\",\n    \"BankName\": \"The Official Canadian Bank\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/payouts#create-ca-bank-account](https://mangopay.com/docs/endpoints/payouts#create-ca-bank-account)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a GB Bank Account",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/bankaccounts/gb",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"OwnerName\": \"{{$randomFullName}}\",\n    \"OwnerAddress\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"SortCode\": \"010039\",\n    \"AccountNumber\": \"11696419\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/payouts#create-gb-bank-account](https://mangopay.com/docs/endpoints/payouts#create-gb-bank-account)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create an OTHER Bank Account",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/bankaccounts/other",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"OwnerName\": \"{{$randomFullName}}\",\n    \"OwnerAddress\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"Country\": \"FR\",\n    \"BIC\": \"BNPAFRPP\",\n    \"AccountNumber\": \"11696419\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/payouts#create-other-bank-account](https://mangopay.com/docs/endpoints/payouts#create-other-bank-account)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Bank Account",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/bankaccounts/{{LEGAL_USER_BANK_ACCOUNT_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/payouts#view-bank-account](https://mangopay.com/docs/endpoints/payouts#view-bank-account)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Bank Accounts for a User",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/bankaccounts",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/payouts#list-bank-accounts-for-user](https://mangopay.com/docs/endpoints/payouts#list-bank-accounts-for-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Deactivate a Bank Account",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/bankaccounts/{{LEGAL_USER_BANK_ACCOUNT_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Active\": false\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/payouts#deactivate-bank-account](https://mangopay.com/docs/endpoints/payouts#deactivate-bank-account)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Payout (standard)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payouts/bankwire/",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_LEGAL_OWNER}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 100\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10\n    },\n    \"BankAccountId\": \"{{LEGAL_USER_BANK_ACCOUNT_ID}}\",\n    \"DebitedWalletId\": \"{{USER_LEGAL_OWNER_WALLET_ID}}\",\n    \"BankWireRef\": \"Postman\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/payouts#create-payout](https://mangopay.com/docs/endpoints/payouts#create-payout)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create an Instant Payout",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payouts/bankwire",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"PayoutModeRequested\": \"INSTANT_PAYMENT\",\n    \"AuthorId\": \"{{USER_LEGAL_OWNER}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 100\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10\n    },\n    \"BankAccountId\": \"{{LEGAL_USER_BANK_ACCOUNT_ID}}\",\n    \"DebitedWalletId\": \"{{USER_LEGAL_OWNER_WALLET_ID}}\",\n    \"BankWireRef\": \"Postman\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/payouts#create-payout](https://mangopay.com/docs/endpoints/payouts#create-payout)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Check Instant Payout Eligibility",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payouts/reachability",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"PayoutModeRequested\": \"INSTANT_PAYMENT\"\n    \"AuthorId\": \"{{USER_LEGAL_OWNER}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 100\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10\n    },\n    \"BankAccountId\": \"{{LEGAL_USER_BANK_ACCOUNT_ID}}\",\n    \"DebitedWalletId\": \"{{USER_LEGAL_OWNER_WALLET_ID}}\",\n    \"BankWireRef\": \"Postman\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/payouts#create-payout](https://mangopay.com/docs/endpoints/payouts#create-payout)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Payout",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payouts/{{PAYOUT_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/payouts#view-payout](https://mangopay.com/docs/endpoints/payouts#view-payout)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Payout and check mode applied",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payouts/bankwire/{{PAYOUT_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/payouts#view-payout-check-mode-applied](https://mangopay.com/docs/endpoints/payouts#view-payout-check-mode-applied)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Disputes for a User",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_NATURAL_PAYER}}/disputes",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Dispute",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/disputes/{{DISPUTE_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/disputes#view-dispute](https://mangopay.com/docs/endpoints/disputes#view-dispute)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Dispute Document",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/disputes/{{DISPUTE_ID}}/documents",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Type\": \"DELIVERY_PROOF\",\n    // \"Type\": \"INVOICE\"\n    // \"Type\": \"REFUND_PROOF\"\n    // \"Type\": \"USER_CORRESPONDANCE\"\n    // \"Type\": \"USER_ACCEPTANCE_PROOF\"\n    // \"Type\": \"PRODUCT_REPLACEMENT_PROOF\"\n    // \"Type\": \"OTHER\"\n    \"Tag\": \"Created using Mangopay Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/disputes#create-dispute-document](https://mangopay.com/docs/endpoints/disputes#create-dispute-document)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Dispute Document Page",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/disputes/{{DISPUTE_ID}}/documents/{{DISPUTE_DOCUMENT_ID}}/pages",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"File\": \"\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/disputes#create-dispute-document-page](https://mangopay.com/docs/endpoints/disputes#create-dispute-document-page)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Submit a Dispute Document",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/disputes/{{DISPUTE_ID}}/documents/{{DISPUTE_DOCUMENT_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Status\": \"VALIDATION_ASKED\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/disputes#submit-dispute-document](https://mangopay.com/docs/endpoints/disputes#submit-dispute-document)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Dispute Document",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/dispute-documents/{{DISPUTE_DOCUMENT_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/disputes#view-dispute-document](https://mangopay.com/docs/endpoints/disputes#view-dispute-document)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Submit a Dispute",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/disputes/{{DISPUTE_ID}}/submit",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "/*\n    After submission, go to the Mangopay Hub (Sandbox Operations) and set your dispute to lost\n*/\n\n{\n    \"ContestedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10000\n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/disputes#submit-dispute](https://mangopay.com/docs/endpoints/disputes#submit-dispute)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Update a Dispute",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/disputes/{{DISPUTE_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Tag\": \"test the update of the tag\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/disputes#update-dispute](https://mangopay.com/docs/endpoints/disputes#update-dispute)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Close a Dispute",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/disputes/{{DISPUTE_ID}}/close",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/disputes#close-dispute](https://mangopay.com/docs/endpoints/disputes#close-dispute)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Repudiation",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/repudiations/{{REPUDIATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/disputes#view-repudiation](https://mangopay.com/docs/endpoints/disputes#view-repudiation)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Settlement Transfer",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/repudiations/{{REPUDIATION_ID}}/settlementtransfer",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\r\n    \"AuthorId\":\"146476890\",\r\n    \"DebitedFunds\":{\r\n        \"Currency\":\"{{CURRENCY}}\",\r\n        \"Amount\":12\r\n    },\r\n    \"Fees\":{\r\n        \"Currency\":\"{{CURRENCY}}\",\r\n        \"Amount\":12\r\n    }\r\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/disputes#create-settlement-transfer](https://mangopay.com/docs/endpoints/disputes#create-settlement-transfer)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Settlement Transfer",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/settlements/{{SETTLEMENT_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/disputes#view-settlement-transfer](https://mangopay.com/docs/endpoints/disputes#view-settlement-transfer)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List all Dispute Documents",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/dispute-documents",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/disputes#list-dispute-documents](https://mangopay.com/docs/endpoints/disputes#list-dispute-documents)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Disputes pending settlement",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/disputes/pendingsettlement",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/disputes#list-disputes-settlement](https://mangopay.com/docs/endpoints/disputes#list-disputes-settlement)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Disputes for a PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/{{PAYIN_ID}}/disputes",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/disputes#list-disputes-payin](https://mangopay.com/docs/endpoints/disputes#list-disputes-payin)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Disputes for a Wallet",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets/{{USER_NATURAL_PAYER_WALLET_ID}}/disputes",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/disputes#list-disputes-wallet](https://mangopay.com/docs/endpoints/disputes#list-disputes-wallet)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List all Disputes",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/disputes",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/disputes#list-disputes](https://mangopay.com/docs/endpoints/disputes#list-disputes)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a full Refund for a PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/{{PAYIN_ID}}/refunds",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "// This call refunds 100% of the pay-in amount and 100% of the fees\n{\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"AuthorId\": {{USER_NATURAL_PAYER}}\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a partial Refund for a PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/{{PAYIN_ID}}/refunds",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "// Enter a DebitedFunds amount less than the initial transaction\n{\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"AuthorId\": {{USER_NATURAL_PAYER}},\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 4700\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": -100\n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a full Refund for a Transfer",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/transfers/{{TRANSFER_ID}}/refunds",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "// This call refunds 100% of the transfer amount and 100% of the fees\r\n{\r\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\r\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\"\r\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/refunds#create-refund-transfer](https://mangopay.com/docs/endpoints/refunds#create-refund-transfer)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a partial Refund for a Transfer",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/transfers/{{TRANSFER_ID}}/refunds",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "// Enter a DebitedFunds amount less than the initial transaction\r\n{\r\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\r\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\r\n    \"DebitedFunds\": {\r\n        \"Currency\": \"{{CURRENCY}}\",\r\n        \"Amount\": 4700\r\n    },\r\n    \"Fees\": {\r\n        \"Currency\": \"{{CURRENCY}}\",\r\n        \"Amount\": -100\r\n    }\r\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/refunds#create-refund-transfer](https://mangopay.com/docs/endpoints/refunds#create-refund-transfer)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Refund",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/refunds/{{REFUND_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/refunds#view-refund](https://mangopay.com/docs/endpoints/refunds#view-refund)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Refunds for a PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/{{PAYIN_ID}}/refunds",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/refunds#list-refunds-payin](https://mangopay.com/docs/endpoints/refunds#list-refunds-payin)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Refunds for a Payout",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payouts/{{PAYOUT_ID}}/refunds",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Refunds for a Transfer",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/transfers/{{TRANSFER_ID}}/refunds",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/refunds#list-refunds-transfer](https://mangopay.com/docs/endpoints/refunds#list-refunds-transfer)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Refunds for a Repudiation",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/repudiations/{{REPUDIATION_ID}}/refunds",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/refunds#list-refunds-repudiation](https://mangopay.com/docs/endpoints/refunds#list-refunds-repudiation)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List all Client Wallets",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/clients/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/wallets#list-client-wallets](https://mangopay.com/docs/endpoints/wallets#list-client-wallets)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Client Wallet",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/clients/wallets/FEES/{{CURRENCY}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/wallets#view-client-wallet](https://mangopay.com/docs/endpoints/wallets#view-client-wallet)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Client Wallets by FundsType",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/clients/wallets/FEES",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/wallets#list-client-wallets-fundstype](https://mangopay.com/docs/endpoints/wallets#list-client-wallets-fundstype)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Mandate",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/mandates/directdebit/web",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "// Make sure you confirm the Mandate using the RedirectURL prior to make a direct-debit\n\n{\n    \"BankAccountId\": \"{{LEGAL_USER_BANK_ACCOUNT_ID}}\",\n    \"Culture\": \"{{CULTURE}}\",\n    \"ReturnURL\": \"https://mangopay.com/docs/please-ignore\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-direct-debit-payins#create-mandate](https://mangopay.com/docs/endpoints/direct-direct-debit-payins#create-mandate)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Mandate",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/mandates/{{MANDATE_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-direct-debit-payins#view-mandate](https://mangopay.com/docs/endpoints/direct-direct-debit-payins#view-mandate)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Cancel a Mandate",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/mandates/{{MANDATE_ID}}/cancel",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [
                {
                    "key": "Content-Length",
                    "value": "0",
                    "type": "text",
                    "disabled": true
                }
            ]
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-direct-debit-payins#cancel-mandate](https://mangopay.com/docs/endpoints/direct-direct-debit-payins#cancel-mandate)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List all Mandates",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/mandates",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-direct-debit-payins#list-mandates](https://mangopay.com/docs/endpoints/direct-direct-debit-payins#list-mandates)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Mandates for a Bank Account",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{LEGAL_USER_BANK_ACCOUNT_ID}}/mandates",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-direct-debit-payins#list-mandates-bank-account](https://mangopay.com/docs/endpoints/direct-direct-debit-payins#list-mandates-bank-account)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Mandates for a User",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/mandates",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-direct-debit-payins#list-mandates-user](https://mangopay.com/docs/endpoints/direct-direct-debit-payins#list-mandates-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create an IBAN Banking Alias",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets/{{USER_LEGAL_OWNER_WALLET_ID}}/bankingaliases/iban",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"OwnerName\": \"Alex Smith\",\n    \"Country\": \"LU\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/banking-aliases#create-iban-banking-alias](https://mangopay.com/docs/endpoints/banking-aliases#create-iban-banking-alias)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Deactivate a Banking Alias",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/bankingaliases/{{BANKING_ALIAS_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Active\": false\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/banking-aliases#deactivate-banking-alias](https://mangopay.com/docs/endpoints/banking-aliases#deactivate-banking-alias)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Banking Alias",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/bankingaliases/{{BANKING_ALIAS_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/banking-aliases#view-banking-alias](https://mangopay.com/docs/endpoints/banking-aliases#view-banking-alias)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Banking Alias for a Wallet",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets/{{USER_LEGAL_OWNER_WALLET_ID}}/bankingaliases",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"OwnerName\": \"Joe Blogs\",\n    \"Country\": \"LU\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/banking-aliases#view-banking-alias-wallet](https://mangopay.com/docs/endpoints/banking-aliases#view-banking-alias-wallet)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Transactions for a User",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_LEGAL_OWNER}}/transactions",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/transactions#list-transactions-user](https://mangopay.com/docs/endpoints/transactions#list-transactions-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Transactions for a Dispute",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/disputes/{{DISPUTE_ID}}/transactions",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/transactions#list-transactions-dispute](https://mangopay.com/docs/endpoints/transactions#list-transactions-dispute)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Transactions for a Wallet",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets/{{USER_NATURAL_OWNER_WALLET_ID}}/transactions",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/transactions#list-transactions-wallet](https://mangopay.com/docs/endpoints/transactions#list-transactions-wallet)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Transactions for a Mandate",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/mandates/{{MANDATE_ID}}/transactions",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/transactions#list-transactions-mandate](https://mangopay.com/docs/endpoints/transactions#list-transactions-mandate)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Transactions for a Preauthorization",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/preauthorizations/{{PREAUTHORIZATION_ID}}/transactions",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/transactions#list-transactions-preauthorization](https://mangopay.com/docs/endpoints/transactions#list-transactions-preauthorization)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Transactions for a Bank Account",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/bankaccounts/{{LEGAL_USER_BANK_ACCOUNT_ID}}/transactions",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/transactions#list-transactions-bank-account](https://mangopay.com/docs/endpoints/transactions#list-transactions-bank-account)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Transactions for a Card",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cards/{{CARD_CHALLENGE_FLOW_ID}}/transactions",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/transactions#list-transactions-card](https://mangopay.com/docs/endpoints/transactions#list-transactions-card)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Hook",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/hooks",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"EventType\" : \"USER_INFLOWS_UNBLOCKED\",\n    \"Url\": \"https://mangopay.com/docs/please-ignore\",\n    \"Tag\": \"Created using the Mangopay Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/notifications#create-hook](https://mangopay.com/docs/endpoints/notifications#create-hook)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Update a Hook",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/hooks/{{HOOK_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Url\": \"https://mangopay.com/docs/please-ignore\",\n    \"Status\": \"DISABLED\",\n    \"Tag\": \"Created using the Mangopay Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/notifications#update-hook](https://mangopay.com/docs/endpoints/notifications#update-hook)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Hook",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/hooks/{{HOOK_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/notifications#view-hook](https://mangopay.com/docs/endpoints/notifications#view-hook)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List all Hooks",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/hooks",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/notifications#list-hooks](https://mangopay.com/docs/endpoints/notifications#list-hooks)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List all Events",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/events",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/notifications#list-events](https://mangopay.com/docs/endpoints/notifications#list-events)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View Authorizations for a country",
        "api_call": "{{ENV_URL}}/v2.01/countries/{{$randomCountryCode}}/authorizations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/country-authorizations#view-authorizations-country](https://mangopay.com/docs/endpoints/country-authorizations#view-authorizations-country)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List Authorizations for all countries",
        "api_call": "{{ENV_URL}}/v2.01/countries/authorizations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/country-authorizations#list-authorizations-countries](https://mangopay.com/docs/endpoints/country-authorizations#list-authorizations-countries)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Transactions Report",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/reports/transactions",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "// Filters behavior and columns description are available here: https://mangopay.com/docs/dev-tools/reporting#setting-up-a-transactions-report\r\n\r\n{\r\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\r\n    \"DownloadFormat\": \"CSV\",\r\n    \"CallbackURL\": null,\r\n    \"Sort\": \"CreationDate:ASC\",\r\n    \"Preview\": false,\r\n    \"Filters\": {\r\n        \"BeforeDate\": 1658317644,\r\n        \"AfterDate\": 1655725644,\r\n        \"Type\": [],\r\n        \"ResultCode\": [],\r\n        \"Status\": [],\r\n        \"Nature\": [],\r\n        \"WalletId\": null,\r\n        \"AuthorId\": null,\r\n        \"MinDebitedFundsAmount\": null,\r\n        \"MinDebitedFundsCurrency\": null,\r\n        \"MaxDebitedFundsAmount\": null,\r\n        \"MaxDebitedFundsCurrency\": null,\r\n        \"MinFeesAmount\": null,\r\n        \"MinFeesCurrency\": null,\r\n        \"MaxFeesAmount\": null,\r\n        \"MaxFeesCurrency\": null\r\n    },\r\n    \"Columns\": [\r\n        \"Id\",\r\n        \"Tag\",\r\n        \"CreationDate\",\r\n        \"ExecutionDate\",\r\n        \"AuthorId\",\r\n        \"CreditedUserId\",\r\n        \"DebitedFundsAmount\",\r\n        \"DebitedFundsCurrency\",\r\n        \"CreditedFundsAmount\",\r\n        \"CreditedFundsCurrency\",\r\n        \"FeesAmount\",\r\n        \"FeesCurrency\",\r\n        \"Status\",\r\n        \"ResultCode\",\r\n        \"ResultMessage\",\r\n        \"Type\",\r\n        \"Nature\",\r\n        \"CreditedWalletId\",\r\n        \"DebitedWalletId\"\r\n    ]\r\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/reporting#create-transactions-report](https://mangopay.com/docs/endpoints/reporting#create-transactions-report)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Wallets Report",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/reports/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "// Filters behavior and columns description are available here: https://mangopay.com/docs/dev-tools/reporting#setting-up-a-wallets-report\r\n\r\n{\r\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\r\n    \"DownloadFormat\": \"CSV\",\r\n    \"CallbackURL\": null,\r\n    \"Sort\": \"CreationDate:ASC\",\r\n    \"Preview\": false,\r\n    \"Filters\": {\r\n        \"BeforeDate\": 1658838931,\r\n        \"AfterDate\": 1656246931,\r\n        \"OwnerId\": null,\r\n        \"Currency\": null,\r\n        \"MinBalanceAmount\": null,\r\n        \"MinBalanceCurrency\": null,\r\n        \"MaxBalanceAmount\": null,\r\n        \"MaxBalanceCurrency\": null\r\n    },\r\n    \"Columns\": [\r\n        \"Id\",\r\n        \"Tag\",\r\n        \"CreationDate\",\r\n        \"Owners\",\r\n        \"Description\",\r\n        \"BalanceAmount\",\r\n        \"BalanceCurrency\",\r\n        \"Currency\",\r\n        \"FundsType\"\r\n    ]\r\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/reporting#create-wallets-report](https://mangopay.com/docs/endpoints/reporting#create-wallets-report)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Report",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/reports/{{REPORT_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/reporting#view-report](https://mangopay.com/docs/endpoints/reporting#view-report)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): List all Reports",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/reports",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/reporting#list-reports](https://mangopay.com/docs/endpoints/reporting#list-reports)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Validate the format of User Data",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/data-formats/validation",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"CompanyNumber\": {\n        \"CompanyNumber\": \"AB123456\",\n        \"CountryCode\": \"IT\"\n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/user-data-format#validate-user-data-format](https://mangopay.com/docs/endpoints/user-data-format#validate-user-data-format)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a User Regulatory Status",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/{{USER_NATURAL_PAYER}}/regulatory",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/user-regulatory-status#view-user-regulatory-status](https://mangopay.com/docs/endpoints/user-regulatory-status#view-user-regulatory-status)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Natural User (with Idempotency Key)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/natural",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [
                {
                    "key": "Idempotency-Key",
                    "value": "{{$guid}}"
                }
            ],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"FirstName\": \"{{$randomFirstName}}\",\n    \"LastName\": \"{{$randomLastName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"Address\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"UserCategory\": \"PAYER\",\n    \"TermsAndConditionsAccepted\": true,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "[https://mangopay.com/docs/endpoints/users#create-natural-user](https://mangopay.com/docs/endpoints/users#create-natural-user)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View an API Response",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/responses/{{IDEMPOTENCY_KEY}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/api-responses#view-api-response](https://mangopay.com/docs/endpoints/api-responses#view-api-response)"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Natural User (Payer)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/natural",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"FirstName\": \"{{$randomFirstName}}\",\n    \"LastName\": \"{{$randomLastName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"Address\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"UserCategory\": \"PAYER\",\n    \"TermsAndConditionsAccepted\": true,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Wallet (Natural User Payer)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Owners\": [\"{{USER_NATURAL_PAYER}}\"],\n    \"Description\": \"Description of the user's wallet\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Legal User (Owner)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/legal",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"HeadquartersAddress\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"LegalPersonType\": \"BUSINESS\",\n    // \"LegalPersonType\": \"ORGANIZATION\",\n    // \"LegalPersonType\": \"SOLETRADER\",\n    \"Name\": \"{{$randomCompanyName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"CompanyNumber\": \"{{$randomInt}}\",\n    \"LegalRepresentativeAddress\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"LegalRepresentativeBirthday\": 652117514,\n    \"LegalRepresentativeCountryOfResidence\": \"FR\",\n    \"LegalRepresentativeNationality\": \"FR\",\n    \"LegalRepresentativeEmail\": \"{{$randomEmail}}\",\n    \"LegalRepresentativeFirstName\": \"{{$randomFirstName}}\",\n    \"LegalRepresentativeLastName\": \"{{$randomLastName}}\",\n    \"UserCategory\": \"OWNER\",\n    \"TermsAndConditionsAccepted\": true,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Wallet (Legal User Owner)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Owners\": [\"{{USER_LEGAL_OWNER}}\"],\n    \"Description\": \"Description of the user's wallet\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Card Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"UserId\": \"{{USER_NATURAL_PAYER}}\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"CardType\": \"CB_VISA_MASTERCARD\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Post Card info (Challenge Flow Card)",
        "api_call": "{{CARD_REGISTRATION_URL}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "urlencoded",
                "urlencoded": [
                    {
                        "key": "accessKeyRef",
                        "value": "{{ACCESS_KEY}}",
                        "type": "text"
                    },
                    {
                        "key": "data",
                        "value": "{{PREREGISTRATION_DATA}}",
                        "type": "text"
                    },
                    {
                        "key": "cardNumber",
                        "value": "4970105181818183",
                        "type": "text"
                    },
                    {
                        "key": "cardExpirationDate",
                        "value": "1229",
                        "type": "text"
                    },
                    {
                        "key": "cardCvx",
                        "value": "123",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Update a Card Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations/{{CARD_REGISTRATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"RegistrationData\": \"{{REGISTRATION_DATA_KEY}}\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Recurring PayIn Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/recurringpayinregistrations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CardId\": \"{{CARD_CHALLENGE_FLOW_ID}}\",\n    \"CreditedWalletId\": \"{{USER_LEGAL_OWNER_WALLET_ID}}\",\n    \"FirstTransactionDebitedFunds\": {\n        \"Currency\": \"EUR\",\n        \"Amount\": 10000\n    },\n    \"FirstTransactionFees\": {\n        \"Currency\": \"EUR\",\n        \"Amount\": 1000\n    },\n    \"Billing\": {\n        \"FirstName\": \"{{$randomFirstName}}\",\n        \"LastName\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"01116\", // Use one of the codes available here: https://mangopay.com/docs/dev-tools/testing/mocks/recurring\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Frequency\": \"Monthly\",\n    \"FixedNextAmount\": true,\n    \"FractionedPayment\": false,\n    \"Migration\": false,\n    \"NextTransactionDebitedFunds\": {\n       \"Currency\": \"EUR\",\n        \"Amount\": 33501\n     },\n     \"NextTransactionFees\": {\n        \"Currency\": \"EUR\",\n        \"Amount\": 1000\n     },\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Recurring PayIn CIT",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/recurring/card/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"RecurringPayinRegistrationId\": \"{{RECURRING_PAYIN_REGISTRATION_ID}}\",\n    \"IpAddress\": \"{{$randomIPV6}}\",\n    \"BrowserInfo\": {\n        \"AcceptHeader\": \"text/html, application/xhtml+xml, application/xml;q=0.9, /;q=0.8\",\n        \"JavaEnabled\": true,\n        \"Language\": \"FR-FR\",\n        \"ColorDepth\": 4,\n        \"ScreenHeight\": 1800,\n        \"ScreenWidth\": 400,\n        \"TimeZoneOffset\": 60,\n        \"UserAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148\",\n        \"JavascriptEnabled\": true\n    },\n    \"SecureModeReturnURL\": \"https://mangopay.com/docs/please-ignore\",\n    \"StatementDescriptor\": \"POSTMAN\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 10000\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 1000\n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Recurring PayIn MIT",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/recurring/card/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"RecurringPayinRegistrationId\": \"{{RECURRING_PAYIN_REGISTRATION_ID}}\",\n    \"StatementDescriptor\": \"POSTMAN\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\",\n    \"DebitedFunds\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 33501\n    },\n    \"Fees\": {\n        \"Currency\": \"{{CURRENCY}}\",\n        \"Amount\": 100\n    }\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Natural User (Payer)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/natural",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"FirstName\": \"{{$randomFirstName}}\",\n    \"LastName\": \"{{$randomLastName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"Address\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"UserCategory\": \"PAYER\",\n    \"TermsAndConditionsAccepted\": true,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Wallet (Natural User Payer)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Owners\": [\"{{USER_NATURAL_PAYER}}\"],\n    \"Description\": \"Description of the user's wallet\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Legal User (Owner)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/users/legal",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"HeadquartersAddress\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"LegalPersonType\": \"BUSINESS\",\n    // \"LegalPersonType\": \"ORGANIZATION\",\n    // \"LegalPersonType\": \"SOLETRADER\",\n    \"Name\": \"{{$randomCompanyName}}\",\n    \"Email\": \"{{$randomEmail}}\",\n    \"CompanyNumber\": \"{{$randomInt}}\",\n    \"LegalRepresentativeAddress\": {\n        \"AddressLine1\": \"{{$randomStreetAddress}}\",\n        \"AddressLine2\": \"{{$randomStreetName}}\",\n        \"City\": \"Paris\",\n        \"Region\": \"Ile-de-France\",\n        \"PostalCode\": \"75001\",\n        \"Country\": \"FR\"\n    },\n    \"LegalRepresentativeBirthday\": 652117514,\n    \"LegalRepresentativeCountryOfResidence\": \"FR\",\n    \"LegalRepresentativeNationality\": \"FR\",\n    \"LegalRepresentativeEmail\": \"{{$randomEmail}}\",\n    \"LegalRepresentativeFirstName\": \"{{$randomFirstName}}\",\n    \"LegalRepresentativeLastName\": \"{{$randomLastName}}\",\n    \"UserCategory\": \"OWNER\",\n    \"TermsAndConditionsAccepted\": true,\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Wallet (Legal User Owner)",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/wallets",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"Owners\": [\"{{USER_LEGAL_OWNER}}\"],\n    \"Description\": \"Description of the user's wallet\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Card Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"UserId\": \"{{USER_NATURAL_PAYER}}\",\n    \"Currency\": \"{{CURRENCY}}\",\n    \"CardType\": \"CB_VISA_MASTERCARD\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Post Card info (Challenge Flow Card)",
        "api_call": "{{CARD_REGISTRATION_URL}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "urlencoded",
                "urlencoded": [
                    {
                        "key": "accessKeyRef",
                        "value": "{{ACCESS_KEY}}",
                        "type": "text"
                    },
                    {
                        "key": "data",
                        "value": "{{PREREGISTRATION_DATA}}",
                        "type": "text"
                    },
                    {
                        "key": "cardNumber",
                        "value": "4970105181818183",
                        "type": "text"
                    },
                    {
                        "key": "cardExpirationDate",
                        "value": "1229",
                        "type": "text"
                    },
                    {
                        "key": "cardCvx",
                        "value": "123",
                        "type": "text"
                    }
                ]
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Update a Card Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/cardregistrations/{{CARD_REGISTRATION_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "PUT",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"RegistrationData\": \"{{REGISTRATION_DATA_KEY}}\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Recurring PayIn Registration",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/recurringpayinregistrations",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"AuthorId\": \"{{USER_NATURAL_PAYER}}\",\n    \"CardId\": \"{{CARD_CHALLENGE_FLOW_ID}}\",\n    \"CreditedWalletId\": \"{{USER_LEGAL_OWNER_WALLET_ID}}\",\n    \"FirstTransactionDebitedFunds\": {\n        \"Currency\": \"EUR\",\n        \"Amount\": 33501\n    },\n    \"FirstTransactionFees\": {\n        \"Currency\": \"EUR\",\n        \"Amount\": 0\n    },\n    \"Billing\": {\n        \"FirstName\": \"{{$randomFirstName}}\",\n        \"LastName\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"01116\", // Use one of the codes available here: https://mangopay.com/docs/dev-tools/testing/mocks/recurring\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Shipping\": {\n        \"FirstName\": \"{{$randomFirstName}}\",\n        \"LastName\": \"{{$randomLastName}}\",\n        \"Address\": {\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"City\": \"Paris\",\n            \"Region\": \"Ile-de-France\",\n            \"PostalCode\": \"75001\",\n            \"Country\": \"FR\"\n        }\n    },\n    \"Frequency\": \"Monthly\",\n    \"FixedNextAmount\": true,\n    \"FractionedPayment\": false,\n    \"Migration\": false\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): Create a Recurring PayIn CIT",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/recurring/card/direct",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "POST",
            "header": [],
            "body": {
                "mode": "raw",
                "raw": "{\n    \"RecurringPayinRegistrationId\": \"{{RECURRING_PAYIN_REGISTRATION_ID}}\",\n    \"IpAddress\": \"{{$randomIPV6}}\",\n    \"BrowserInfo\": {\n        \"AcceptHeader\": \"text/html, application/xhtml+xml, application/xml;q=0.9, /;q=0.8\",\n        \"JavaEnabled\": true,\n        \"Language\": \"FR-FR\",\n        \"ColorDepth\": 4,\n        \"ScreenHeight\": 1800,\n        \"ScreenWidth\": 400,\n        \"TimeZoneOffset\": 60,\n        \"UserAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148\",\n        \"JavascriptEnabled\": true\n    },\n    \"SecureModeReturnURL\": \"https://mangopay.com/docs/please-ignore\",\n    \"StatementDescriptor\": \"POSTMAN\",\n    \"Tag\": \"Created using Mangopay API Postman Collection\"\n}",
                "options": {
                    "raw": {
                        "language": "json"
                    }
                }
            }
        },
        "functionality": "NO DESC IN POSTMAN"
    },
    {
        "user_name": "opatothan",
        "api_name": "Mangopay API Collection (documentation): View a Recurring PayIn",
        "api_call": "{{ENV_URL}}/v2.01/{{CLIENT_ID}}/payins/{{RECURRING_PAYIN_ID}}",
        "api_version": "NO VERSION IN POSTMAN",
        "api_arguments": {
            "method": "GET",
            "header": []
        },
        "functionality": "[https://mangopay.com/docs/endpoints/direct-card-payins#view-payin](https://mangopay.com/docs/endpoints/direct-card-payins#view-payin)"
    }
]