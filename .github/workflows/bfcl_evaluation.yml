name: BFCL Evaluation Check

on:
  pull_request:
    branches: [ main ]

jobs:
  evaluate:
    runs-on: ubuntu-latest
    
    env:
      CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
      MIN_ACCEPTABLE_SCORE: 0.60

    steps:
      - uses: actions/checkout@v3
      
      - name: Check for CLAUDE_API_KEY
        run: |
          if [ -z "$CLAUDE_API_KEY" ]; then
            echo "Error: CLAUDE_API_KEY is not set"
            exit 1
          fi
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd berkeley-function-call-leaderboard
          pip install -e .

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Run BFCL generate
        working-directory: berkeley-function-call-leaderboard
        run: |
          bfcl generate \
            --model claude-3-5-sonnet-20240620 \
            --test-category basic \
            --max-samples 5 \
            --output-file generated_results.json

      - name: Run BFCL evaluate and check score
        working-directory: berkeley-function-call-leaderboard
        run: |
          score=$(bfcl evaluate \
            --model claude-3-5-sonnet-20240620 \
            --test-category basic \
            --input-file generated_results.json \
            --output-file evaluation_results.json \
            | grep -oP 'Average score: \K[0-9.]+')
          
          echo "Evaluation Score: $score"
          
          if (( $(echo "$score < $MIN_ACCEPTABLE_SCORE" | bc -l) )); then
            echo "Score ($score) is below minimum threshold ($MIN_ACCEPTABLE_SCORE)"
            exit 1
          else
            echo "Score ($score) meets or exceeds minimum threshold ($MIN_ACCEPTABLE_SCORE)"
          fi

      - name: Comment on PR with results
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const score = process.env.EVALUATION_SCORE;
            const threshold = process.env.MIN_ACCEPTABLE_SCORE;
            const passed = parseFloat(score) >= parseFloat(threshold);
            
            const body = `## BFCL Evaluation Results
            
            - Score: ${score}
            - Minimum Threshold: ${threshold}
            - Status: ${passed ? '✅ Passed' : '❌ Failed'}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: body
            });
