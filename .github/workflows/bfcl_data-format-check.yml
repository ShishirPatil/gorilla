name: BFCL Data Format Check

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'berkeley-function-call-leaderboard/data/**/*.json'

jobs:
  check-data-format:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jsonschema

      - name: Run format validation
        id: validate
        run: python berkeley-function-call-leaderboard/scripts/validate_data_format.py

      - name: Process validation results
        id: process_results
        if: always()
        run: |
          if [ -f validation_results.json ]; then
            # Changed from $GITHUB_ENV to $GITHUB_OUTPUT and using a unique delimiter (EOF_RESULTS)
            echo "results<<EOF_RESULTS" >> $GITHUB_OUTPUT
            cat validation_results.json >> $GITHUB_OUTPUT
            echo "EOF_RESULTS" >> $GITHUB_OUTPUT
          fi

      - name: Get total files checked
        id: file_count
        if: always()
        run: |
          # Using jq to calculate the total files from validation_results.json
          if [ -f validation_results.json ]; then
            total_files=$(jq '.results | length' validation_results.json)
          else
            total_files=0
          fi
          echo "total_files=$total_files" >> $GITHUB_OUTPUT

      - name: Comment on PR with results
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## BFCL Data Format Check Results
            
            ${{ fromJson(steps.process_results.outputs.results).all_success && '✅ All data files are correctly formatted!' || '❌ Data format validation failed!' }}
            
            ### Summary
            - Total files checked: ${{ steps.file_count.outputs.total_files }}
            ${{ !fromJson(steps.process_results.outputs.results).all_success && '### Failed Validations:' || '' }}
            ${{ !fromJson(steps.process_results.outputs.results).all_success && join(fromJson(steps.process_results.outputs.results).results.*.errors, '
            ') || '' }}
            
            ${{ !fromJson(steps.process_results.outputs.results).all_success && '### How to fix:
            1. Review the errors above for each failed file
            2. Ensure all data entries follow the required format for their respective types
            3. Update the files and push the changes' || '' }}

      - name: Fail if validation failed
        if: fromJson(steps.process_results.outputs.results).all_success != true
        run: exit 1